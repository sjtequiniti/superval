    ∇ res←field Project_Roll_Forward parm;parent;SSName1;row;col;file;index;∆;list;SSName2
[1]   ⍝ QSMWIN.sf#6
[2]   ⍝ Function to allow user control on Roll Forward Projection module
[3]   
[4]   parent←'fmRFProj.sProject_Roll_Forward.' ⋄ res←0⍴'' ⍝ Default response
[5]   SSName1←(DTDot parent),'.pgParameters.ssRFParms'
[6]   SSName2←(DTDot parent),'.pgResults.ssRFResults'
[7]   
[8]   :select parm
[9]   
[10]  :case 'Prepare'
[11]      Parmlist←0⍴⊂''
[12]      :for file :in m2n 1 0↓'QSMFile' GetParmFiles 1
[13]          index←(ConsolidDir,file) ReadFile 'Index'
[14]          ∆←(index at '∆_Name')∊⊂'Quick_Scenario'
[15]          Parmlist←Parmlist,(⊂('{}' embrace file),' '),¨(∆/index at '∆_Description'),¨' ',¨((⊂'[]') embrace¨∆/index at '∆_TSModified'),¨'-',¨∆/index at '∆_VersModified'
[16]      :endfor
[17]      Parmlist←⊃Parmlist
[18]      DecrParm←0
[19]  
[20]  :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)
[21]      :if mt results
[22]          results←MATRIX 'Date' 'QSMParms' 'Assets' 'Liabilities'
[23]      :endif
[24]  
[25]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)
[26]      :if mt Parmlist
[27]          res←'No Saved Quick Scenarios found' ⋄ :return
[28]      :endif
[29]  
[30]      SSName1 ⎕wi 'onXStartEdit' '0 0⍴Project_Roll_Forward "Edit"'
[31]      SSName1 Win∆F1SSSetSelection ¯1 3 ¯1 3
[32]      SSName1 ⎕wi 'xSetAlignment' 4 0 2 0 ⍝ Align Input Right
[33]      SSName1 Win∆F1SSSetSelection 1 1 1 1
[34]      SSName2 Win∆F1SSSetSelection ¯1 1 ¯1 4
[35]      SSName2 ⎕wi 'xSetAlignment' 4 0 2 0 ⍝ Align Input Right
[36]      SSName2 Win∆F1SSProtectCells ⊂¯1 1 ¯1 4
[37]  
[38]  :case 'Edit'
[39]      (row col)←SSName1 ⎕wi 'GetActiveCell' 0 0
[40]      :if col=2
[41]          2 Win∆F1SSColMenu ('Project_Roll_Forward' SSName1)
[42]          ⎕warg[1]←SSName1 Win∆F1SSGetTextArray row col 1 1
[43]          SSName1 ⎕wi 'AllowArrows' 1 ⋄ row Win∆ValidF1SSCell col ⋄ 0 0⍴⎕ex 'F1SSEvent'
[44]      :else
[45]          SSName1 ⎕wi 'AllowArrows' 1
[46]      :endif
[47]  
[48]  :case 'SSClick'
[49]  
[50]      (SSName1 row col)←field
[51]      :if row≠0 ⍝ Not the Header Row
[52]          ('[' StripText Parmlist) SelQSMParms field
[53]      :endif
[54]  
[55]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)
[56]  
[57]      :repeat
[58]          :select ↑field
[59]          :case ' '
[60]          :endselect
[61]      :until mt field←1↓field
[62]  
[63]  :case 'Valid' ⍝ Routine specific validation
[64]  
[65]      :if 'pgParameters'≡↑field
[66]          res←RFProj_Valid
[67]      :endif
[68]  
[69]  :case 'PageChange'
[70]  
[71]      :if 'pgParameters'≡↑field
[72]          RFProj_PageChange
[73]      :endif
[74]  
[75]  :case 'Run'
[76]  
[77]      res←'Quit'
[78]  
[79]  :case 'Quit' ⍝ Deleting "other" variables
[80]      0 0⍴⎕ex 'Parmlist DecrParm SolView'
[81]  
[82]  :endselect
    ∇
