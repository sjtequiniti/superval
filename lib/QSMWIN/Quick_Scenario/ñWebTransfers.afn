    ∇ ⍙WebTransfers;TVprop;ContID;msk;sql;tab;ResIDs;ResID;TVadj;IDmsk;benmsk;cash;tvmsk;∆;BenID;parttab;pencfs;penspcfs;tvtab;ratio;cfs;spcfs;tvinf;partinf;liab
[1]   ⍝ QSMWIN.sf#2
[2]   ⍝ Make up Member and Spouse CashFlows for Cash Transfer Benefits
[3]   ⍝ Calculate Retirement Transfer Proportions
[4]   
[5]   ⍝ Update cashflow variables with manufactured cashflow for Capitalised Transfer Values
[6]   :if ∨/benmsk←3=cash←restab at 'CashBenefit'
[7]         cfs←restab at 'MemberCashFlow'
[8]       spcfs←restab at 'SpouseCashFlow'
[9]       (benmsk/cash)←1
[10]      :for tvmsk :in (⎕split benmsk×[1](⍳∆)∘.=⍳∆)~⊂(∆←⍴benmsk)/0                          ⍝ Unique Transfer events
[11]          (ResID BenID ContID)←↑¨(tvtab←restab for tvmsk) at 'ResultsCategoryID' 'BenefitTypeID' 'ContingencyID'
[12]          :if     ∨/msk←    (∊restab at 'ResultsCategoryID')∊ResID
[13]          :andif  ∨/msk←msk^(∊restab at 'BenefitTypeID')∊BenID
[14]              ∆←(ContID=31 32 33 37 38 39)/2 2 21 2 2 21
[15]              :if     ∨/∆←msk^(∊restab at 'ContingencyID')=∆ ⋄ msk←∆                      ⍝ Use LR/NR cashflows (if available)
[16]              :elseif ∨/∆←msk^(∊restab at 'ContingencyID')=2 ⋄ msk←∆                      ⍝ else NR cashflows
[17]              :elseif ∨/∆←msk^(∊restab at 'ContingencyID')=1 ⋄ msk←∆                      ⍝ else ER cashflows
[18]              :else                                          ⋄ :continue                  ⍝ else give up
[19]              :endif
[20]              parttab←restab for msk
[21]              partinf←parttab at 'Inflator' ⋄ tvinf←tvtab at 'Inflator'
[22]              pencfs←  tvinf×(parttab at 'MemberCashFlow') CDIV partinf
[23]              penspcfs←tvinf×(parttab at 'SpouseCashFlow') CDIV partinf
[24]              liab←+/¨,¨(tvtab at 'Discount')×pencfs+penspcfs
[25]              ratio←(↑tvtab at 'LiabilityValue') CDIV liab
[26]              (tvmsk/cfs)←ratio×pencfs
[27]              (tvmsk/spcfs)←ratio×penspcfs
[28]              (tvmsk/cash)←¯1
[29]          :endif
[30]      :endfor
[31]      restab←restab amend 'CashBenefit' cash
[32]      restab←restab amend 'MemberCashFlow' cfs
[33]      restab←restab amend 'SpouseCashFlow' spcfs
[34]  :endif
[35]  
[36]  TVprop←(rowsIn restab)⍴0
[37]  :if ∨/msk←(ContID←∊restab at 'ContingencyID')∊31 32 33 ⍝⍝⍝ 37 38 39 ⍝ Perhaps Transfers Out as well
[38]      ResIDs←nub (restab for msk) at 'ResultsCategoryID'
[39]      :for ResID :in ResIDs
[40]          IDmsk←ResID=∊restab at 'ResultsCategoryID'
[41]          :if ∨/IDmsk^ContID∊32 33                    ⍝ Normal and Late Retirements
[42]              sql←↑⍙DBPivot "SUM" "SVValue" "ResultsData" ("LiabilityTypeID = 13 AND ResultsCategoryID = ",⍕ResID) "SVYear" "ContingencyID" (2 21 32 33) maxpay
[43]              tab←0 1↓0 ⍙DBRemoveNulls 1 ⍙DBadoCONCommand sql
[44]              TVadj←(+/tab[;3 4]) CDIV +/tab
[45]              msk←IDmsk^ContID∊2 21 32 33
[46]              (msk/TVprop)←⊂TVadj
[47]          :endif
[48]          :if ∨/IDmsk^ContID∊31                       ⍝ Early Retirements
[49]              sql←↑⍙DBPivot "SUM" "SVValue" "ResultsData" ("LiabilityTypeID = 13 AND ResultsCategoryID = ",⍕ResID) "SVYear" "ContingencyID" (1 31) maxpay
[50]              tab←0 1↓0 ⍙DBRemoveNulls 1 ⍙DBadoCONCommand sql
[51]              TVadj←tab[;2] CDIV +/tab
[52]              msk←IDmsk^ContID∊1 31
[53]              (msk/TVprop)←⊂TVadj
[54]          :endif
[55]      :endfor
[56]  :endif
[57]  
[58]  restab←restab amend 'TVProportion' TVprop
    ∇
