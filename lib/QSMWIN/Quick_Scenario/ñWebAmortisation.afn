    ∇ larg ⍙WebAmortisation arg;parttab;methods;addtab;contID;∆;tbl;method;termam;liab;disc;i;vals;rate;sals;cap;col
[1]   ⍝ QSMWIN.sf#2
[2]   ⍝ Process the Amortisation records
[3]   
[4]   :select arg
[5]   :case 'Create'
[6]       methods←m2n 1 0↓⍙POPUPSdict at 'AmortMeth' ⋄ methods←(~∨/¨(⊂'Salaries')⍷¨methods)/methods ⍝ Non-Salaries methods
[7]       addtab←MATRIX keysIn restab
[8]       :for contID :in 10 28
[9]           parttab←(restab for (⊂'ContingencyID'),,¨contID) for (⊂'BenefitTypeID'),,¨11 ⍝ Current Amortisation Contributions
[10]          method←↑parttab at 'BenefitBasis'
[11]  
[12]          :if ∆←~∨/'Salaries'⍷method ⍝ Add V1% records if required
[13]          :andif ×rowsIn tbl←(restab for (⊂'ContingencyID'),,¨11) for (⊂'BenefitTypeID'),,¨11
[14]              tbl←tbl amend 'ContingencyID' ((rowsIn tbl)⍴⊂,contID)
[15]              ∆←((restab for 'ClassName' 'Active' 'Active New Entrant') at 'ResultsCategoryID' 'ClassName') mapp tbl at 'ResultsCategoryID'
[16]              ∆←('Active' 'Active New Entrant') ('Current Salaries' 'NE Salaries') mapp ∆
[17]              tbl←tbl amend 'BenefitBasis' ∆
[18]              tbl←tbl amend 'PreInterestGroup' ((rowsIn tbl)⍴parttab at 'PreInterestGroup')
[19]              tbl←tbl amend 'PreInterestValue' ((rowsIn tbl)⍴parttab at 'PreInterestValue')
[20]              tbl←tbl amend 'PreInterestTableID' ((rowsIn tbl)⍴parttab at 'PreInterestTableID')
[21]              tbl←tbl amend 'LiabilityValue' ((rowsIn tbl)⍴⊂,0)
[22]              parttab←parttab append tbl
[23]          :endif
[24]          tbl←parttab for ((rowsIn parttab) OVERTAKE 1 0)
[25]          tbl←tbl amend 'ClassName' (1⍴⊂'Contributions')
[26]          tbl←tbl amend 'ContingencyID' (⊂,contID)
[27]          tbl←tbl amend 'BenefitTypeID' (⊂,999)
[28]          tbl←tbl amend 'LiabilityValue' (⊂,0)
[29]          tbl←tbl amend 'ResultsCategoryID' (⊂,0)
[30]          tbl←tbl amend 'BasisCategoryID' (⊂,0)
[31]          tbl←tbl amend 'InflationGroup' (1⍴⊂'')
[32]          tbl←tbl amend 'InflationValue' (1⍴⊂'')
[33]          tbl←tbl amend 'InflationTableID' (⊂,0)
[34]  
[35]          :for method :in methods~⊂method
[36]              tbl←tbl amend 'BenefitBasis' (1⍴⊂method)
[37]              parttab←parttab append tbl
[38]          :endfor
[39]          parttab←parttab amend 'PaymentMode' (parttab at 'ClassName')
[40]          parttab←parttab amend 'ClassName' ((rowsIn parttab)⍴⊂'Contributions')
[41]          addtab←addtab append parttab
[42]      :endfor
[43]      restab←restab for ~(((∊restab at 'ContingencyID')∊10 28)^(∊restab at 'BenefitTypeID')∊11)
[44]      restab←restab append addtab
[45]  
[46]  :case 'Initialisation'
[47]      (disc termam)←larg
[48]      :if sals←∨/'Salaries'⍷∆←↑tab at 'BenefitBasis' ⍝ % of Salaries
[49]          vals←1 ⍙DBadoCONCommand "SELECT SVYear, SUM(SVValue) FROM ResultsData WHERE LiabilityTypeID=8",resID,benID," AND ContingencyID=11",anddbid," GROUP BY SVYear"
[50]          yrval←maxyr/0 ⋄ yrval[vals[;1]]←vals[;2]
[51]          yrval←amortmsk×[2]yrval
[52]      :else
[53]          yrval←amortmsk
[54]          :if 'F'=↑∆ ⍝ Fixed Amount plus Accrued Interest
[55]              (i cap col)←↑¨tab at 'PreInterestValue' 'PreInterestCap' 'PreInterestCollar'
[56]              i←cap⌊col⌈,i
[57]              yrval←yrval+((i-1) CDIV i*0.5)×[2]⊃MID¨⎕split (⌽+\⌽yrval),0
[58]          :endif
[59]      :endif
[60]      liab←↑tab at 'LiabilityValue'
[61]      :if 0≠accadj←rate←-liab CDIV +/yrval[termam+1;]×disc[1;]
[62]          accadj←⊃(amortmaxterm+1) OVERTAKE (termam 1 1)/0 (maxyr/accadj) 0 ⍝ Use AccrualLimit to get correct term
[63]      :endif
[64]  ⍝⍝⍝ accadj←(amortmaxterm maxyr)⍴maxyr/amortmaxterm OVERTAKE ∊((↑termam-1) 1 1)/0 (weighting×mult) 0 ⍝⍝⍝ Required if non-integral terms in Consolidation
[65]      :if 0≠liab ⋄ :andif 11=↑tab at 'BenefitTypeID'
[66]          :if sals ⋄ (DLTB 'M<->F10.2' ⎕fmt rate) ASSIGN∆Dict 'Ratepc',(10 28=↑tab at 'ContingencyID')/'12'
[67]          :else    ⋄ (DLTB 'M<->I15' ⎕fmt rate) ASSIGN∆Dict 'Cont',(10 28=↑tab at 'ContingencyID')/'12'
[68]          :endif
[69]      :endif
[70]  
[71]  :case 'Update'
[72]      (amortamount1 amortamount2)←m2n 'M<->I20' ⎕fmt -∊↑¨+/¨1↓(amorttab for (⊂'BenefitTypeID'),,¨11) groupby 'ContingencyID' 'NewLiabilityValue'
[73]  
[74]      tbl←         (parent,'pgFunding.fAmort1.edRatepc1') 'text' Ratepc1
[75]      tbl←tbl OVER (parent,'pgFunding.fAmort2.edRatepc2') 'text' Ratepc2
[76]      tbl←tbl OVER (parent,'pgFunding.fAmort1.edCont1') 'text' Cont1
[77]      tbl←tbl OVER (parent,'pgFunding.fAmort2.edCont2') 'text' Cont2
[78]      tbl←tbl OVER (parent,'pgFunding.fAmort1.edTERMAM1') 'text' TERMAM1
[79]      tbl←tbl OVER (parent,'pgFunding.fAmort2.edTERMAM2') 'text' TERMAM2
[80]      tbl←tbl OVER (parent,'pgFunding.fAmort1.edamortamount1') 'text' amortamount1
[81]      tbl←tbl OVER (parent,'pgFunding.fAmort2.edamortamount2') 'text' amortamount2
[82]      1 ⍙WebUpdateControls tbl
[83]  
[84]  :endselect
    ∇
