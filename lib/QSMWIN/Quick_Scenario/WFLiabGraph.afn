    ∇ WFView←WFLiabGraph;liability;bb;data;∆;new_liability;colours;values;tabsel;ppt;expinc;default;legend[1]   ⍝ QSMWIN.sf#2[2]   ⍝ Graph the Liability Build Up[3]   [4]   :if mt WFView←(parent,currentpage,'picGraph') ⎕wi 'self'[5]       :return ⍝ Graph Control doesn't exist yet!![6]   :endif[7]   psWipe parent,currentpage,'picGraph'[8]   [9]   Win∆AssignVars ControlName ⍝ Get current Adjustment settings[10]  [11]  default←+/¯999 1×2 4=finMethod⍳1[12]  ⍝ Reset all adjustments back to zero[13]  Profit←1 ⋄ Capind←0[14]  restab←((lmt groupings) pr¨default) ⍙WebFinancials restab 0[15]  :if expinc←incexp ⋄ :andif expinc←0≠+/∊(amorttab for 'ClassName' 'Expenses') at 'LiabilityValue'[16]      amorttab←((lmt groupings) pr¨default) ⍙WebFinancials amorttab 1[17]      amorttab←amorttab amend 'NewLiabilityValue' (amorttab at 'LiabilityValue')[18]      amorttab←amorttab amend 'NewInflator'       (amorttab at 'Inflator')[19]      amorttab←amorttab amend 'NewDiscount'       (amorttab at 'Discount')[20]      amorttab←amorttab amend 'RFDiscount'        (amorttab at 'Discount')[21]  :endif[22]  restab←restab amend 'NewLiabilityValue'   (restab at 'LiabilityValue')[23]  restab←restab amend 'NewMemberMortAdjust' (restab at 'MemberMortAdjust')[24]  restab←restab amend 'NewSpouseMortAdjust' (restab at 'SpouseMortAdjust')[25]  restab←restab amend 'PropMarrAdjust'      ((rowsIn restab)⍴⊂1)[26]  restab←restab amend 'DISPMAdjust'         ((rowsIn restab)⍴⊂1)[27]  restab←restab amend 'AccrualLimit'        ((rowsIn restab)⍴⊂1)[28]  restab←restab amend 'AccrualAdjust'       ((rowsIn restab)⍴⊂1)[29]  restab←restab amend 'SpouseRevAdjust'     ((rowsIn restab)⍴⊂1)[30]  restab←restab amend 'CashAmtAdjust'       ((rowsIn restab)⍴⊂1)[31]  restab←restab amend 'CashFactAdjust'      ((rowsIn restab)⍴⊂1)[32]  restab←restab amend 'TVAmtAdjust'         ((rowsIn restab)⍴⊂1)[33]  restab←restab amend 'TVPropAdjust'        ((rowsIn restab)⍴⊂1)[34]  restab←restab amend 'NewInflator'         (restab at 'Inflator')[35]  restab←restab amend 'NewDiscount'         (restab at 'Discount')[36]  restab←restab amend 'RFDiscount'          (restab at 'Discount')[37]  ⍝⍝⍝ 'RollForwardAdjust'[38]  [39]  ∆←(^/¨⎕vi¨∆) sel¨∆←(READTBL¨rate01 rate02 rate03 rate04 rate05 rate06 rate07 rate08 rate09 rate10 rate11 rate12 rate13 rate14 rate15)~¨'+'[40]  (rate01 rate02 rate03 rate04 rate05 rate06 rate07 rate08 rate09 rate10 rate11 rate12 rate13 rate14 rate15)←maxyr OVERTAKE¨0.01×EXECUTE¨∆[41]  [42]  tabsel←classsel^~(⊂'Contributions')≡¨restab at 'ClassName'[43]  [44]  liability←↑↑+/((restab for tabsel) append amorttab for 'ClassName' (expinc/'Expenses')) at 'LiabilityValue'[45]  :for ∆ :in (~mt¨groupings)/groupings pr¨rate01 rate02 rate03 rate04 rate05 rate06 rate07 rate08 rate09 rate10 rate11 rate12 rate13 rate14 rate15[46]      :if ^/default=↑1↓∆[47]          liability←liability,¯1↑liability[48]      :else[49]          restab←(⊂∆) ⍙WebFinancials restab 0[50]          :if expinc[51]              amorttab←(⊂∆) ⍙WebFinancials amorttab 1[52]          :endif[53]          liability←liability,↑↑+/((restab for tabsel) append amorttab for 'ClassName' (expinc/'Expenses')) at 'NewLiabilityValue'[54]      :endif[55]  :endfor[56]  legend←',' join lmt (⊂', ') REPL¨lmt groupings ⍝ ???[57]  :if mortadj[58]      :if ^/0=∆←EXECUTE mortality~'+'[59]          liability←liability,¯1↑liability[60]      :else[61]          (zwb perannum) ⍙WebMortality maxyr OVERTAKE 1+0.01×∆[62]          liability←liability,↑↑+/((restab for tabsel) append amorttab for 'ClassName' (expinc/'Expenses')) at 'NewLiabilityValue'[63]      :endif[64]      :if ^/0=∆←EXECUTE propmarried~'+'[65]          liability←liability,¯1↑liability[66]      :else[67]          ⍙WebPropMarried 1+0.01×∆[68]          liability←liability,↑↑+/((restab for tabsel) append amorttab for 'ClassName' (expinc/'Expenses')) at 'NewLiabilityValue'[69]      :endif[70]      legend←legend,',Mortality,Proportion Married'[71]  :endif[72]  ⍝⍝⍝:if decadj[73]  ⍝⍝⍝:endif[74]  :if active ⍝⍝⍝ (⊂'Active')∊restab at 'ClassName'[75]      :if accruallimit>maxpay[76]          liability←liability,¯1↑liability[77]      :else[78]          ⍙WebAccrual accruallimit[79]          liability←liability,↑↑+/((restab for tabsel) append amorttab for 'ClassName' (expinc/'Expenses')) at 'NewLiabilityValue'[80]      :endif[81]      :if ^/0=∆←EXECUTE futaccrual~'+'[82]          liability←liability,¯1↑liability[83]      :else[84]          ⍙WebFutAccrual 1+0.01×∆[85]          liability←liability,↑↑+/((restab for tabsel) append amorttab for 'ClassName' (expinc/'Expenses')) at 'NewLiabilityValue'[86]      :endif[87]      :if ^/0=∆←EXECUTE spouserev~'+'[88]          liability←liability,¯1↑liability[89]      :else[90]          ⍙WebSpouseRev 1+0.01×∆[91]          liability←liability,↑↑+/((restab for tabsel) append amorttab for 'ClassName' (expinc/'Expenses')) at 'NewLiabilityValue'[92]      :endif[93]      legend←legend,',Limit Accrual,Future Accrual,Spouse Reversion'[94]  :endif[95]  :if active[96]      :if ^/0=∆←EXECUTE commfact~'+'[97]          liability←liability,¯1↑liability[98]      :else[99]          'factor' ⍙WebCash 0,1+0.01×∆[100]         liability←liability,↑↑+/((restab for tabsel) append amorttab for 'ClassName' (expinc/'Expenses')) at 'NewLiabilityValue'[101]     :endif[102]     :if ^/0=∆←EXECUTE commpc~'+'[103]         liability←liability,¯1↑liability[104]     :else[105]         'amount' ⍙WebCash 35,1+0.01×∆[106]         liability←liability,↑↑+/((restab for tabsel) append amorttab for 'ClassName' (expinc/'Expenses')) at 'NewLiabilityValue'[107]     :endif[108]     :if ^/0=∆←EXECUTE cotpc~'+'[109]         liability←liability,¯1↑liability[110]     :else[111]         'amount' ⍙WebCash 36,1+0.01×∆[112]         liability←liability,↑↑+/((restab for tabsel) append amorttab for 'ClassName' (expinc/'Expenses')) at 'NewLiabilityValue'[113]     :endif[114]     legend←legend,',Commutation Factor,Commutation Rate,COT Rate'[115] :endif[116] :if deferred[117]     :if ^/0=∆←EXECUTE TVpc~'+'[118]         liability←liability,¯1↑liability[119]     :else[120]         'pc' ⍙WebTransferValue 1+0.01×∆[121]         liability←liability,↑↑+/((restab for tabsel) append amorttab for 'ClassName' (expinc/'Expenses')) at 'NewLiabilityValue'[122]     :endif[123]     :if ^/0=∆←EXECUTE TVprop~'+'[124]         liability←liability,¯1↑liability[125]     :else[126]         'prop' ⍙WebTransferValue 1+0.01×∆[127]         liability←liability,↑↑+/((restab for tabsel) append amorttab for 'ClassName' (expinc/'Expenses')) at 'NewLiabilityValue'[128]     :endif[129]     legend←legend,',Transfer Amounts,Transfer Proportions'[130] :endif[131] Capind←zwb capind ⋄ Profit←1+Capind×0.01×zwb profit[132] restab←0 ⍙WebRecalculate restab[133] legend←legend,',Capitalising Profit/Expense'[134] liability←liability,↑↑+/((restab for tabsel) append amorttab for 'ClassName' (expinc/'Expenses')) at 'NewLiabilityValue'[135] [136] values←⌊0.5+(↑liability),(DIFF liability), ¯1↑liability[137] [138] data←(0,¯1↓liability),0[139] data←data,(∆∘.=∆←⍳1+⍴liability)×[1](DIFF 0,liability),¯1↑liability[140] colours←',' join m2n (2 2⍴'GRRE')[1+1=×DIFF liability;][141] colours←colours,',',,(3 2⍴'REBLGR')[2+×DIFF 2↑¯1⌽liability;][142] [143] chSet 'QFmt' ("<",pound,">,CLI20")[144] chSet 'HMargin' 60 36[145] chSet 'Heading' ('Waterfall Total Liabilities',(0=rfperiod)/VDATEtxt)[146] chSet 'HFont' 'tii,12,blue'[147] chSet 'Style' 'fbar,stacked,boxed,ForceZero,Values,Floating,nomarkers'[148] chSet 'YRange' (⌊/0,∆),⌈/∆,1.1×↑∆←+/data[149] chSet ('XS' 'angled') ('XA' 25)[150] chSet ('colour' ('BL,',colours)) ('pattern' 15)[151] [152] chSet 'XLab' ('Original Liability',((0≠rfperiod)/';',VDATEtxt),',',legend,',New Liability',((0≠rfperiod)/';',RFDatetxt))[153] ⍝⍝⍝ chSet 'Key' 'Reduced Cash Flows,Original Cash Flows,Increased Cash Flows'[154] ⍝⍝⍝ chSet 'KFont' 'he,8'[155] chSet 'Values' values[156] ⍝⍝⍝ chSet 'vpic' (pound,"###,###,###,###,###,##0")[157] chSet 'vstyle' 'transparent'[158] chBar data[159] [160] :if ~mt WFView←chClose[161]     bb←psReadHeader WFView '%%BoundingBox:' ⍝ Bounding Box[162]     ppt←.5+.×(((parent,currentpage,'picGraph') ⎕wi 'scale')[1+4 3])÷-⌿2 2⍴bb ⍝ Pixels per point[163]     ps_exec WFView (parent,currentpage,'picGraph') ppt ps∆cmap 1[164] :endif    ∇