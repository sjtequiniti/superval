    ∇ ⍙WebProcessFinancials;tabids;∆;value;tabid;val;ids;⍙;H;x;v;n;type
[1]   ⍝ QSMWIN.sf#2
[2]   ⍝ Get values for any yield curve tables/remove any "Fixed Revaluation"s
[3]   
[4]   (1 7 'Reading Table Values from the Database') Win∆ProgressBar 'MemberUpdate'
[5]   
[6]   :if ~mt tabids←(nub ∊restab at 'PreInterestTableID' 'PostInterestTableID' 'InflationTableID' 'RevaluationTableID' 'IncreaseTableID' 'PropMarrTableID')~0
[7]       tabids←'ID' 'Age' 'Durn' 'Value' OVER 1 ⍙DBadoCONCommand 'SELECT TableID, TableAge, TableDuration, TableValue FROM TableValues WHERE TableID IN (',(0 ⍙DBNumList tabids),') ORDER BY TableID, TableAge, TableDuration'
[8]   :endif
[9]   
[10]  :for ∆ :in ('PreInterestValue' 'PreInterestTableID') ('PostInterestValue' 'PostInterestTableID') ('InflationValue' 'InflationTableID') ('RevaluationValue' 'RevaluationTableID') ('IncreaseValue' 'IncreaseTableID') ('PropMarrTable' 'PropMarrTableID')
[11]      (value tabid)←∆
[12]      n←1+'PreInterestValue' 'PostInterestValue'  'InflationValue'  'RevaluationValue'  'IncreaseValue'  'PropMarrTable'⍳⊂value
[13]      (n 7 'Writing Table Values') Win∆ProgressBar 'MemberUpdate'
[14]      val←restab at value
[15]      :if ∨/∆←×ids←∊restab at tabid
[16]          restab←restab amend tabid ((~^/¨⎕vi¨val) sel¨val)   ⍝ Keep table names in ...TableID column
[17]          :if tabid≡'PropMarrTableID'
[18]              ⍙←0⍴⊂⍬
[19]              :for ids :in ∆/ids
[20]                  H←121⍴0
[21]                  (x v)←(tabids for 'ID' ids) at 'Age' 'Value'
[22]                  H[⎕io+x]←v
[23]                  ⍙←⍙,⊂MID H
[24]              :endfor
[25]              (∆/val)←⍙
[26]              ∆←~∆
[27]              :if     ∨/⍙←∆^~mt¨val ⋄ (⍙/val)←120⍴¨0.01×zwb¨⍙/val
[28]              :elseif ∨/⍙←∆^~⍙      ⋄ (⍙/val)←(+/⍙)⍴⊂120⍴1
[29]              :endif
[30]          :else
[31]              (∆/val)←((⊂tabids) for¨(⊂⊂'ID'),¨∆/ids) at¨⊂'Value'
[32]          :endif
[33]      :elseif tabid≡'PropMarrTableID'
[34]          ⍙←~mt¨val ⋄ (⍙/val)←120⍴¨0.01×zwb¨⍙/val
[35]          ⍙←~⍙      ⋄ (⍙/val)←(+/⍙)⍴⊂120⍴1
[36]      :endif
[37]      :if ∨/∆←val∊⊂'Fixed Revaluation'                        ⍝ Changed Fixed Revaluation to 0
[38]          (∆/val)←⊂0
[39]      :endif
[40]      restab←restab amend value val                       ⍝ Update values with numbers
[41]  :endfor
[42]  
[43]  ⍝ Change all percentages to rates
[44]  :for ∆ :in 'PreInterestValue' 'PostInterestValue' 'InflationValue' 'RevaluationValue' 'IncreaseValue'
[45]      restab←restab amend ∆ (MATRIX¨1+.01×maxyr OVERTAKE¨EXECUTE¨⍕¨restab at ∆)
[46]  :endfor
[47]  
[48]  ⍝ Make Placeholders for changed Assumptions
[49]  restab←restab amend 'NewPreInterestValue'  (restab at 'PreInterestValue')
[50]  restab←restab amend 'NewPostInterestValue' (restab at 'PostInterestValue')
[51]  restab←restab amend 'NewInflationValue'    (restab at 'InflationValue')
[52]  restab←restab amend 'NewRevaluationValue'  (restab at 'RevaluationValue')
[53]  restab←restab amend 'NewIncreaseValue'     (restab at 'IncreaseValue')
[54]  
[55]  ⍝ Change all Caps and Collars to numeric
[56]  :for type :in 'PreInterestCap' 'PostInterestCap' 'InflationCap' 'RevaluationCap' 'IncreaseCap'
[57]      :if ∨/∆←~mt¨val←restab at type
[58]          val←∆\1+.01×zwb¨∆/val ⋄ ((~∆)/val)←⊂9999
[59]          restab←restab amend type val
[60]      :else
[61]          restab←restab amend type ((rowsIn restab)⍴⊂9999)
[62]      :endif
[63]  :endfor
[64]  :for type :in 'PreInterestCollar' 'PostInterestCollar' 'InflationCollar' 'RevaluationCollar' 'IncreaseCollar'
[65]      :if ∨/∆←~mt¨val←restab at type
[66]          val←∆\1+.01×zwb¨∆/val ⋄ ((~∆)/val)←⊂¯9999
[67]          restab←restab amend type val
[68]      :else
[69]          restab←restab amend type ((rowsIn restab)⍴⊂¯9999)
[70]      :endif
[71]  :endfor
    ∇
