    ∇ ILLCASH∆COMMUTE;CASHIR;MAXILLCASH;XSILLERACCPN;CASHT;∆C;T1;fillcash;∆
[1]   ⍝ ACTWIN.sf#4
[2]   ⍝
[3]   ⍝ Commuted ill health pension
[4]   XSILLERACCPN←ILLERACCPEN ⍝ Initialise as whole
[5]   :if ~ICGMP ⍝ If GMP is ignored the XS is taken to be the whole
[6]       T1←(+/[⎕io]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]ILLERACCPEN)[⎕io;]  ⍝ T1 is a temp var
[7]       XSILLERACCPN[;⎕io;;;;;]←XSILLERACCPN[;⎕io;;;;;]×[⎕io+5](0⌈T1-GMPR) CDIV T1
[8]   :endif
[9]   COMT←+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]XSILLERACCPN  ⍝ Sum over all but Dyn Time and Term
[10]  CASHT←COMT×(⍴COMT)⍴4⌿cfs
[11]  MAXILLCASH←+/[⎕io]+/[⎕io+1]CASHT
[12]  ⍝⍝⍝ :if test
[13]  ⍝⌿⍝    ∆C←'Priority:  ',ICASHP,'   Include Prospective Cash:  ',COMMIND⊃'No' 'Yes'
[14]  ⍝⌿⍝    AUDIT '1450' ⋄ AUDIT '1451' ⋄ AUDIT '1452a'
[15]  ⍝⍝⍝ :endif
[16]  :if ~ICTYPE∆L∊2 8 9
[17]      CASHIR←IRILLC⌊CALCILLCASH⌊MAXILLCASH
[18]      1 CASH∆SPLIT 'ILL'
[19]  :else   ⍝ Calculate the lower of Commutable pension and 0.25×Pen, taking priorities into account
[20]      1 CASH∆SPLIT2 'ILL'
[21]  :endif
[22]  ⍝ Put numbers in full matrix
[23]  ILLCOMPEN[⎕io  ;⎕io  ;;;;;]←XSILLERACCPN[⎕io  ;⎕io  ;;;;;]×[⎕io+4]CASH1S CDIV CASHT[⎕io  ;⎕io  ;]
[24]  ILLCOMPEN[⎕io+1;⎕io  ;;;;;]←XSILLERACCPN[⎕io+1;⎕io  ;;;;;]×[⎕io+4]CASH1M CDIV CASHT[⎕io+1;⎕io  ;]
[25]  ILLCOMPEN[⎕io+2;⎕io  ;;;;;]←XSILLERACCPN[⎕io+2;⎕io  ;;;;;]×[⎕io+4]CASH1L CDIV CASHT[⎕io+2;⎕io  ;]
[26]  ILLCOMPEN[⎕io+3;⎕io  ;;;;;]←XSILLERACCPN[⎕io+3;⎕io  ;;;;;]×[⎕io+4]CASH14 CDIV CASHT[⎕io+3;⎕io  ;]
[27]  ILLCOMPEN[⎕io  ;⎕io+1;;;;;]←XSILLERACCPN[⎕io  ;⎕io+1;;;;;]×[⎕io+4]CASH2S CDIV CASHT[⎕io  ;⎕io+1;]
[28]  ILLCOMPEN[⎕io+1;⎕io+1;;;;;]←XSILLERACCPN[⎕io+1;⎕io+1;;;;;]×[⎕io+4]CASH2M CDIV CASHT[⎕io+1;⎕io+1;]
[29]  ILLCOMPEN[⎕io+2;⎕io+1;;;;;]←XSILLERACCPN[⎕io+2;⎕io+1;;;;;]×[⎕io+4]CASH2L CDIV CASHT[⎕io+2;⎕io+1;]
[30]  ILLCOMPEN[⎕io+3;⎕io+1;;;;;]←XSILLERACCPN[⎕io+3;⎕io+1;;;;;]×[⎕io+4]CASH24 CDIV CASHT[⎕io+3;⎕io+1;]
[31]  ILLCOMPEN[⎕io  ;⎕io+2;;;;;]←XSILLERACCPN[⎕io  ;⎕io+2;;;;;]×[⎕io+4]CASH3S CDIV CASHT[⎕io  ;⎕io+2;]
[32]  ILLCOMPEN[⎕io+1;⎕io+2;;;;;]←XSILLERACCPN[⎕io+1;⎕io+2;;;;;]×[⎕io+4]CASH3M CDIV CASHT[⎕io+1;⎕io+2;]
[33]  ILLCOMPEN[⎕io+2;⎕io+2;;;;;]←XSILLERACCPN[⎕io+2;⎕io+2;;;;;]×[⎕io+4]CASH3L CDIV CASHT[⎕io+2;⎕io+2;]
[34]  ILLCOMPEN[⎕io+3;⎕io+2;;;;;]←XSILLERACCPN[⎕io+3;⎕io+2;;;;;]×[⎕io+4]CASH34 CDIV CASHT[⎕io+3;⎕io+2;]
[35]  ⍝ Create totals
[36]  ILLCOMPENNDYN←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]ILLCOMPEN[⎕io  ;;;;;;]
[37]  ILLCOMPENDYN ←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]ILLCOMPEN[⎕io+1;;;;;;]
[38]  ILLCOMPENLDYN←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]ILLCOMPEN[⎕io+2;;;;;;]
[39]  ILLCOMPENDYN4←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]ILLCOMPEN[⎕io+3;;;;;;]
[40]  ⍝
[41]  COMT←+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]ILLCOMPEN  ⍝ Sum over all but Dyn Time and Term
[42]  fillcash←                                 +⌿splitcomFILLCASH←             COMT[;⎕io+2;] × cfs
[43]   ∆←+⌿+⌿+⌿+⌿+⌿ILLERACCPROSPEN[;⎕io+2;;;;;] CDIV ILLERACCPEN[;⎕io+2;;;;;]
[44]                        splitcomILLPROSCASH←splitcomFILLCASH×[⎕io+1]∆
[45]   ILLPROSCASH← ILLPROSCASH+ comILLPROSCASH←        fillcash×       ∆
[46]   ILLCASH    ← ILLCASH    + comILLCASH    ←+⌿splitcomILLCASH←⊃+/(⊂[⎕io+0 2]COMT         )×⊂cfs
[47]  FILLCASH    ←FILLCASH    +comFILLCASH    ←fillcash
[48]  ⍝
[49]  ⍝⍝⍝ :if test ⋄ AUDIT '1470' ⋄ AUDIT '1480' ⋄ :endif
[50]  ⍝⌿⍝ AUDIT '1470' ⋄ AUDIT '1480'
    ∇
