    ∇ CASH∆PUP∆ACT;temp;CASHT;CALCPEN;CALCCASH;XSPEN;∆;∆a;∆bb;∆b;∆f;COMT;MAXCASH;CASHIR;CASH1S;CASH1M;CASH1L;CASH14;CASH2S;CASH2M;CASH2L;CASH24;CASH3S;CASH3M;CASH3L;CASH34;COMPUPD;COMPUPN;COMPUPL;COMPUP4;FCOMPUPD;FCOMPUPN;FCOMPUPL;FCOMPUP4;∆d1;∆d2;∆d3;∆d4;∆CASHMULT;FASMP∆CASH;SERV∆CASH;FSERV∆CASH;SERV∆CASHNOMAX;cfs;∆cc;denom;COMADayPER∆L
[1]   ⍝ ACTWIN.sf#4
[2]   ⍝
[3]   COMPUPN←COMPUPD←COMPUPL←COMPUP4←0
[4]   LCASH←splitLCASHS←splitLCASHM←splitLCASHL←splitLCASH4←FLCASH←splitFLCASHS←splitFLCASHM←splitFLCASHL←splitFLCASH4←0
[5]   LGCASH←LGCASH∆M←LGCASH∆S←LGCASH∆L←LGCASH∆4←FLGCASH←FLGCASH∆S←FLGCASH∆M←FLGCASH∆L←FLGCASH∆4←0
[6]   ∆←PUPNRA
[7]   ∆a←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]∆
[8]   ∆bb←0⌈((NRA∆G⌈XMP)≥SPA)×RGMPR-GMP×1+GMPREV  ⍝ PUPNRA contains the 'pseudo' GMP
[9]   ⍝ Spread the balance over first tranche
[10]  :if 0≠+/temp←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]PUPNRA[;⎕io;;;;;]  ⍝ Can be zero if GMP only and GMPREV=0
[11]      ∆[;⎕io;;;;;]←∆[;⎕io;;;;;]×[⎕io+5]1+∆bb CDIV temp
[12]  :else
[13]      ∆[⎕io;⎕io;⎕io;⎕io+1;⎕io+1;⎕io;]←∆bb ⍝ Special, First trache, Revaluable, Not in Underpin or IRmax, ERF1
[14]  :endif
[15]  ⍝ Sum over all but escalation rate and term
[16]  ∆ ←+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]∆
[17]  :if IsAccrued ⋄ ∆d1←COMTAB1∆G  [X] ⋄ ∆d2←COMTAB2∆G  [X] ⋄ ∆d3←COMTAB3∆G  [X] ⋄ ∆d4←COMTAB4∆G  [X]
[18]  :else         ⋄ ∆d1←COMTAB1∆GMP[X] ⋄ ∆d2←COMTAB2∆GMP[X] ⋄ ∆d3←COMTAB3∆GMP[X] ⋄ ∆d4←COMTAB4∆GMP[X]
[19]  :endif
[20]  
[21]  cfs←∆d1⍪∆d2⍪∆d3⍪MATRIX ∆d4
[22]  COMADayPER∆L←COMADayPER
[23]  
[24]  :select CTYPE
[25]  :case 1
[26]      :return
[27]  :case 3
[28]   ∆fb←CALCCASH←2.25×+/[⎕io]∆
[29]  :case 5
[30]      FASMP∆CASH←((ENX-×LNX-SNX)↑FASMPvec[;COMSAL∆L]),(ENX-×LNX-SNX)↓FASvec[;COMSAL∆L]
[31]      :if 0=+/,TPEN[;⎕io+2;;;;;] ⍝ No Future Pension
[32]          SERV∆CASH←((ENX_1↑SRVMAXMP),ENX_1↓SRVMAX)⌊1↑⍎'P',COMDAT∆L      ⋄ FSERV∆CASH←0
[33]      :else
[34]          SERV∆CASHNOMAX←((ENX-×LNX-SNX)↑⍎'P',COMDAT∆L,'MP'),(ENX-×LNX-SNX)↓⍎'P',COMDAT∆L
[35]          FSERV∆CASH←0⌈SERV∆CASHNOMAX-1↑⍎'P',COMDAT∆L
[36]          SERV∆CASH←SERV∆CASHNOMAX⌊(ENX_1↑SRVMAXMP),ENX_1↓SRVMAX
[37]          :if CapAccrual ⋄ FSERV∆CASH←0⌈FSERV∆CASH×SERV∆CASH ZDIV SERV∆CASHNOMAX
[38]          :else          ⋄ FSERV∆CASH←0⌈SERV∆CASH-1↑⍎'P',COMDAT∆L
[39]          :endif
[40]      :endif
[41]      ∆fc←CALCCASH←COMACC∆L×SERV∆CASH×FASMP∆CASH×∆cc←(+/[⎕io]∆) CDIV +/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]TPEN
[42]  :caselist 4 6 7
[43]      ∆CASHMULT←COMMULT∆L
[44]   ∆fb←CALCCASH←∆CASHMULT×+/[⎕io]∆
[45]  :caselist 2 8
[46]      ∆CASHMULT←COMPER∆L
[47]      CALCPEN ←∆CASHMULT×  ∆
[48]  ∆fa←CALCCASH←∆CASHMULT×+⌿∆×cfs
[49]  :case 9 ⍝ A-Day Cash
[50]      denom←(CALCPEN←∆)×20+3×cfs
[51]      :if COMADaySep∆L ⋄ ∆CASHMULT←0⌈         ((20×  CALCPEN)-3×   LCASHONTOP +  COMADayInd×IndPUCASHONTOP) CDIV   denom
[52]      :else            ⋄ ∆CASHMULT←0⌈4⌿MATRIX ((20×+⌿CALCPEN)-3×(+⌿LCASHONTOP)++⌿COMADayInd×IndPUCASHONTOP) CDIV +⌿denom
[53]      :endif
[54]      ∆fa←CALCCASH←+⌿(CALCPEN←∆CASHMULT×CALCPEN)×cfs
[55]  :endselect
[56]  
[57]  XSPEN←PUPNRA ⍝ Initialise as whole
[58]  ∆b←GMP×1+GMPREV
[59]  ⍝ Allocate GMP over the whole of the first tranche
[60]  temp←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]PUPNRA[;⎕io;;;;;]
[61]  :if ~CGMP ⍝ If GMP is ignored the XS is taken to be the whole
[62]      XSPEN[;⎕io;;;;;]←XSPEN[;⎕io;;;;;]×[⎕io+5]0⌈1-∆b CDIV temp
[63]  :endif
[64]  ∆f←+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]XSPEN
[65]  ∆f←+⌿∆f×cfs
[66]  ⍝ Sum over all but Dyn, Time and Term
[67]  COMT←+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]XSPEN
[68]  CASHT←(⍴COMT)⍴0
[69]  CASHT[⎕io  ;;]←COMT[⎕io  ;;]×[1]∆d1
[70]  CASHT[⎕io+1;;]←COMT[⎕io+1;;]×[1]∆d2
[71]  CASHT[⎕io+2;;]←COMT[⎕io+2;;]×[1]∆d3
[72]  CASHT[⎕io+3;;]←COMT[⎕io+3;;]×[1]∆d4
[73]  ⍝⍝⍝ CASHT←COMT MultiDimMult cfs ???
[74]  
[75]  :if ~CTYPE∊2 8 9
[76]      CASHIR←CALCCASH⌊MAXCASH←+/[⎕io]+/[⎕io+1]CASHT   ⍝ Not really IR but this is the field used by CASH∆SPLIT
[77]      2 CASH∆SPLIT ''
[78]  :else
[79]      2 CASH∆SPLIT2 ''
[80]  :endif
[81]  
[82]  ⍝ Put numbers in full matrix
[83]  COMPUP[⎕io  ;⎕io  ;;;;;]←XSPEN[⎕io  ;⎕io  ;;;;;]×[⎕io+4]CASH1S CDIV CASHT[⎕io  ;⎕io  ;]
[84]  COMPUP[⎕io+1;⎕io  ;;;;;]←XSPEN[⎕io+1;⎕io  ;;;;;]×[⎕io+4]CASH1M CDIV CASHT[⎕io+1;⎕io  ;]
[85]  COMPUP[⎕io+2;⎕io  ;;;;;]←XSPEN[⎕io+2;⎕io  ;;;;;]×[⎕io+4]CASH1L CDIV CASHT[⎕io+2;⎕io  ;]
[86]  COMPUP[⎕io+3;⎕io  ;;;;;]←XSPEN[⎕io+3;⎕io  ;;;;;]×[⎕io+4]CASH14 CDIV CASHT[⎕io+3;⎕io  ;]
[87]  COMPUP[⎕io  ;⎕io+1;;;;;]←XSPEN[⎕io  ;⎕io+1;;;;;]×[⎕io+4]CASH2S CDIV CASHT[⎕io  ;⎕io+1;]
[88]  COMPUP[⎕io+1;⎕io+1;;;;;]←XSPEN[⎕io+1;⎕io+1;;;;;]×[⎕io+4]CASH2M CDIV CASHT[⎕io+1;⎕io+1;]
[89]  COMPUP[⎕io+2;⎕io+1;;;;;]←XSPEN[⎕io+2;⎕io+1;;;;;]×[⎕io+4]CASH2L CDIV CASHT[⎕io+2;⎕io+1;]
[90]  COMPUP[⎕io+3;⎕io+1;;;;;]←XSPEN[⎕io+3;⎕io+1;;;;;]×[⎕io+4]CASH24 CDIV CASHT[⎕io+3;⎕io+1;]
[91]  COMPUP[⎕io  ;⎕io+2;;;;;]←XSPEN[⎕io  ;⎕io+2;;;;;]×[⎕io+4]CASH3S CDIV CASHT[⎕io  ;⎕io+2;]
[92]  COMPUP[⎕io+1;⎕io+2;;;;;]←XSPEN[⎕io+1;⎕io+2;;;;;]×[⎕io+4]CASH3M CDIV CASHT[⎕io+1;⎕io+2;]
[93]  COMPUP[⎕io+2;⎕io+2;;;;;]←XSPEN[⎕io+2;⎕io+2;;;;;]×[⎕io+4]CASH3L CDIV CASHT[⎕io+2;⎕io+2;]
[94]  COMPUP[⎕io+3;⎕io+2;;;;;]←XSPEN[⎕io+3;⎕io+2;;;;;]×[⎕io+4]CASH34 CDIV CASHT[⎕io+3;⎕io+2;]
[95]  ⍝ Calculate totals
[96]  COMPUPN←+⌿+⌿+⌿+⌿+⌿COMPUP[⎕io  ;     ;;;;;]
[97]  COMPUPD←+⌿+⌿+⌿+⌿+⌿COMPUP[⎕io+1;     ;;;;;]
[98]  COMPUPL←+⌿+⌿+⌿+⌿+⌿COMPUP[⎕io+2;     ;;;;;]
[99]  COMPUP4←+⌿+⌿+⌿+⌿+⌿COMPUP[⎕io+3;     ;;;;;]
[100] FCOMPUPN ←+⌿+⌿+⌿+⌿COMPUP[⎕io  ;⎕io+2;;;;;]
[101] FCOMPUPD ←+⌿+⌿+⌿+⌿COMPUP[⎕io+1;⎕io+2;;;;;]
[102] FCOMPUPL ←+⌿+⌿+⌿+⌿COMPUP[⎕io+2;⎕io+2;;;;;]
[103] FCOMPUP4 ←+⌿+⌿+⌿+⌿COMPUP[⎕io+3;⎕io+2;;;;;]
[104]     :if ClntCode=4
[105]         COMPUP∆GEC←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]COMPUP[;;;⎕io;;;]
[106]     :endif
[107] ∆f←LCASH←(splitLCASHS←CASH1S+CASH2S+CASH3S)+(splitLCASHM←CASH1M+CASH2M+CASH3M)+(splitLCASHL←CASH1L+CASH2L+CASH3L)+(splitLCASH4←CASH14+CASH24+CASH34)
[108]   FLCASH←(splitFLCASHS←FCOMPUPN×∆d1)+(splitFLCASHM←FCOMPUPD×∆d2)+(splitFLCASHL←FCOMPUPL×∆d3)+splitFLCASH4←FCOMPUP4×∆d4
[109] ⍝⍝⍝ :if test ⋄ AUDIT '2530b' ⋄ :endif
[110] ⍝⌿⍝ AUDIT '2530b'
[111] :if ~WARCOMind ⋄ PUWNRA←PUWNRA×(PUPNRA-COMPUP) CDIV PUPNRA ⋄ :endif
[112] :if bQSM ⋄ :andif ~IsAccrued ⍝ Cash as a proportion of Pension for QSM
[113]     ∆←(∆>0.01)×∆←(COMPUP CDIV PUPNRA)×[6]PROBS[;3] CDIV +/PROBS[;3]
[114]     ⍙dbbenres←⍙dbbenres⍪((35 5 1 32) (⍬⍴dbXe) 0) ⍙DBValnRecords (↑(,+/∆[;⍳2;;;;;])~0) ⍝ Past
[115]     ⍙dbbenres←⍙dbbenres⍪((35 5 2 32) (⍬⍴dbXe) 0) ⍙DBValnRecords (↑(,+/∆[;,2;;;;;])~0) ⍝ Future
[116] :endif
[117] PUPNRA←PUPNRA-COMPUP
[118] ∆a←+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]PUPNRA
[119]  LGCASH∆S←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]COMPUP[⎕io  ;     ;;⎕io;;;]×[⎕io+4]∆d1
[120]  LGCASH∆M←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]COMPUP[⎕io+1;     ;;⎕io;;;]×[⎕io+4]∆d2
[121]  LGCASH∆L←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]COMPUP[⎕io+2;     ;;⎕io;;;]×[⎕io+4]∆d3
[122]  LGCASH∆4←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]COMPUP[⎕io+3;     ;;⎕io;;;]×[⎕io+4]∆d4
[123] FLGCASH∆S←+/[⎕io]+/[⎕io+1]+/[⎕io+2]         COMPUP[⎕io  ;⎕io+2;;⎕io;;;]×[⎕io+3]∆d1
[124] FLGCASH∆M←+/[⎕io]+/[⎕io+1]+/[⎕io+2]         COMPUP[⎕io+1;⎕io+2;;⎕io;;;]×[⎕io+3]∆d2
[125] FLGCASH∆L←+/[⎕io]+/[⎕io+1]+/[⎕io+2]         COMPUP[⎕io+2;⎕io+2;;⎕io;;;]×[⎕io+3]∆d3
[126] FLGCASH∆4←+/[⎕io]+/[⎕io+1]+/[⎕io+2]         COMPUP[⎕io+3;⎕io+2;;⎕io;;;]×[⎕io+3]∆d4
[127]  LGCASH← LGCASH∆S+ LGCASH∆M+ LGCASH∆L+ LGCASH∆4
[128] FLGCASH←FLGCASH∆S+FLGCASH∆M+FLGCASH∆L+FLGCASH∆4
[129] ⍝⍝⍝ :if test
[130] ⍝⌿⍝    :if mpuflag ⋄ AUDIT '2540b' ⋄ :endif
[131] ⍝⌿⍝    AUDIT '2550a'
[132] ⍝⍝⍝ :endif
    ∇
