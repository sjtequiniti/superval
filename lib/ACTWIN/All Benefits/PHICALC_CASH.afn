    ∇ PHICALC∆CASH R;ERACCPNC∆l;FERACCPNC∆l;GERACCPNC∆l;SERV∆CASHNOMAX;FASMP∆CASH;SERV∆CASH;FSERV∆CASH;∆CASHMULT;denom[1]   ⍝ ACTWIN.sf#4[2]   ⍝[3]   ⍝ R is 0 for Commutation Calcs and 1 for Cash on Top calcs[4]   ⍝ The variables with C as the final character are based on the cash ER factor if this is different from the pension ER factor[5]   ⍝[6]   :if R ⋄ ERACCPNC∆l←PHIERACCPNC ⋄ FERACCPNC∆l←PHIFERACCPNC ⋄ GERACCPNC∆l←PHIGERACCPNC[7]   :else ⋄ ERACCPNC∆l←PHIERACCPN  ⍝⍝⍝ ⋄ FERACCPNC∆l←PHIFERACCPN  ⋄ GERACCPNC∆l←PHIGERACCPN[8]   :endif[9]   [10]  :select CTYPE∆L ⍝ Note that "F" and "G" figures are used for Cash on Top only.[11]  :case 3[12]              PHICALCCASH ←(NX,NX)⍴PHIIRCASH[13]      :if R ⋄ PHIFCALCCASH←PHICALCCASH×[⎕io+1](PMMP-1↑PM) ZDIV PMMP ⋄ :endif ⍝ Split by Scheme Service[14]              PHICALCCASH ←3 rnk PHICALCCASH[15]  :case 5[16]      FASMP∆CASH←           (ENX-×LNX-SNX)↑[⎕io+1]'FASMP' PHISALS COMSAL∆L,(×PROBS[;2])/⍳NX[17]      FASMP∆CASH←FASMP∆CASH,(ENX-×LNX-SNX)↓[⎕io+1]'FAS'   PHISALS COMSAL∆L,(×PROBS[;2])/⍳NX[18]      :if 0=+/,PHITPEN[;⎕io+2;;;;;;] ⍝ No Future Pension[19]          SERV∆CASH←((ENX_1↑SRVMAXMP),ENX_1↓SRVMAX)⌊1↑⍎'P',COMDAT∆L ⋄ FSERV∆CASH←0[20]      :else[21]          SERV∆CASHNOMAX←((ENX-×LNX-SNX)↑⍎'P',COMDAT∆L,'MP'),(ENX-×LNX-SNX)↓⍎'P',COMDAT∆L[22]          FSERV∆CASH←0⌈SERV∆CASHNOMAX-1↑⍎'P',COMDAT∆L[23]          SERV∆CASH←SERV∆CASHNOMAX⌊(ENX_1↑SRVMAXMP),ENX_1↓SRVMAX[24]          :if CapAccrual ⋄ FSERV∆CASH←0⌈FSERV∆CASH×SERV∆CASH ZDIV SERV∆CASHNOMAX[25]          :else          ⋄ FSERV∆CASH←0⌈SERV∆CASH-1↑⍎'P',COMDAT∆L[26]          :endif[27]      :endif[28]              PHICALCCASH ←3 rnk COMACC∆L× SERV∆CASH×[⎕io+1]FASMP∆CASH[29]      :if R ⋄ PHIFCALCCASH←      COMACC∆L×FSERV∆CASH×[⎕io+1]FASMP∆CASH ⋄ :endif[30]  :caselist 4 6 7[31]      ∆CASHMULT←COMMULT∆L[32]              PHICALCCASH ←∆CASHMULT×   ERACCPNC∆l[33]      :if R ⋄ PHIFCALCCASH←∆CASHMULT×+⌿FERACCPNC∆l ⋄ PHIGCALCCASH←∆CASHMULT×+⌿GERACCPNC∆l ⋄ :endif[34]  :caselist 2 8[35]      ∆CASHMULT←COMPER∆L[36]              PHICALCCASH ←∆CASHMULT×   ERACCPNC∆l×cfs[37]      :if R ⋄ PHIFCALCCASH←∆CASHMULT×+⌿FERACCPNC∆l×cfs ⋄ PHIGCALCCASH←∆CASHMULT×+⌿GERACCPNC∆l×cfs[38]      :else ⋄ PHICALCPEN  ←∆CASHMULT×   ERACCPNC∆l ⍝⍝⍝ ⋄ PHIFCALCPEN←∆CASHMULT×+/[⎕io]FERACCPNC∆l ⋄ PHIGCALCPEN←∆CASHMULT×+/[⎕io]GERACCPNC∆l[39]      :endif[40]  :case 9 ⍝ A-Day Cash - can only be Commutation[41]      denom←(PHICALCPEN←ERACCPNC∆l)×20+3×cfs[42]      :if COMADaySep∆L ⋄ ∆CASHMULT←0⌈         ((20×  PHICALCPEN)-3×   PHICASHONTOP +  COMADayInd×IndPHICASHONTOP) CDIV   denom[43]      :else            ⋄ ∆CASHMULT←0⌈4⌿MATRIX ((20×+⌿PHICALCPEN)-3×(+⌿PHICASHONTOP)++⌿COMADayInd×IndPHICASHONTOP) CDIV +⌿denom[44]      :endif[45]      PHICALCCASH←(PHICALCPEN←∆CASHMULT×PHICALCPEN)×cfs[46]  :endselect[47]  [48]  :if ~R ⋄ PHICALCCASH←+⌿PHICALCCASH ⋄ :endif ⍝ Commutation    ∇