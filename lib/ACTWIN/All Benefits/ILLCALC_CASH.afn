    ∇ ILLCALC∆CASH R;ILLERACCPNC∆l;FILLERACCPNC∆l;ILLFACTC∆l;ILLSERVNOMAX;ihcSRVMAXMP;ihcSRVMAX;denom
[1]   ⍝ ACTWIN.sf#4
[2]   ⍝ R is 0 for Commutation Calcs and 1 for Cash on Top calcs
[3]   ⍝ The variables with C as the final character are based on the cash ER factor if this is different from the pension ER factor
[4]   ⍝
[5]   ⍝
[6]   ⍝
[7]   :if R ⋄ ILLFACTC∆l←ILLFACTC ⋄ ILLERACCPNC∆l←ILLERACCPNC ⋄ FILLERACCPNC∆l←FILLERACCPNC ⍝⍝⍝ ⋄ GILLERACCPNC∆l←GILLERACCPNC
[8]   :else ⋄ ILLFACTC∆l←ILLFACT  ⋄ ILLERACCPNC∆l←ILLERACCPN  ⍝⍝⍝ ⋄ FILLERACCPNC∆l←FILLERACCPN  ⋄ GILLERACCPNC∆l←GILLERACCPN
[9]   :endif
[10]  
[11]  ⍝ Ill Health Cash Definitions
[12]  :if ILLIND=3 ⋄ PROSCASH←   PROSPEN ×[⎕io+6]ILLFRAC×ILLFACTC∆l×~COMMIND∆L ⍝⍝⍝ FIXME
[13]  :else        ⋄ PROSCASH←ILLPROSPENC×[⎕io+6]ILLFRAC×ILLFACTC∆l×~COMMIND∆L
[14]  :endif
[15]  PROSCASHT←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]PROSCASH ⍝ Needed for Varprint
[16]  
[17]  :select ICTYPE∆L
[18]  :case 3
[19]               CALCILLCASH←MATRIX NX⍴IRILLC
[20]      :if R ⋄ FCALCILLCASH←(,CALCILLCASH)×(PMMP-1↑PM) ZDIV PMMP ⋄ :endif ⍝ Split by Scheme Service
[21]  :case 5
[22]      ILLFASMP←FASMPvec[;ILLCOMCASH∆L]
[23]      :if IsAccrued ⋄ ihcSRVMAXMP←                   ihcSRVMAX←,ihcSRVMAXT[X]
[24]      :else         ⋄ ihcSRVMAXMP←(MID ihcSRVMAX),¯1↑ihcSRVMAX←,ihcSRVMAXT[X]
[25]      :endif
[26]      :if 0=+/,ILLTPEN[;⎕io+2;;;;;] ⍝ No Future Pension
[27]                   CALCILLCASH←MATRIX ILLCOMACC∆L×ILLFASMP×ILLSERV←SRVMAXMP⌊ihcSRVMAXMP⌊1↑⍎'P',ILLSERVIND∆L
[28]          :if R ⋄ FCALCILLCASH←0×,CALCILLCASH ⋄ :endif
[29]      :else
[30]          ILLSERVNOMAX←⍎'P',ILLSERVIND∆L,'MP+EXIHSERV+COMMIND∆L×ILLFRAC×F',ILLSERVIND∆L,'MP'
[31]          FILLSERV←0⌈ILLSERVNOMAX-1↑⍎'P',ILLSERVIND∆L
[32]          :if COMMIND∆L ⋄ ILLSERV←SRVMAX[ENX_1]⌊ihcSRVMAX[ENX_1]⌊ILLSERVNOMAX
[33]          :else         ⋄ ILLSERV←SRVMAXMP     ⌊ihcSRVMAXMP     ⌊ILLSERVNOMAX
[34]          :endif
[35]          :if CapAccrual ⋄ FILLSERV←0⌈FILLSERV×ILLSERV ZDIV ILLSERVNOMAX
[36]          :else          ⋄ FILLSERV←0⌈ILLSERV-1↑⍎'P',ILLSERVIND∆L
[37]          :endif
[38]                   CALCILLCASH←MATRIX ILLCOMACC∆L×ILLFASMP×   ILLSERV
[39]          :if R ⋄ FCALCILLCASH←       ILLCOMACC∆L×ILLFASMP×0⌈FILLSERV ⋄ :endif
[40]      :endif
[41]  :caselist 4 6 7
[42]      ∆ILLCASHMULT←ILLCOMMULT∆L
[43]               CALCILLCASH←∆ILLCASHMULT×   ILLERACCPNC∆l- +/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]PROSCASH
[44]      :if R ⋄ FCALCILLCASH←∆ILLCASHMULT×+⌿FILLERACCPNC∆l-(         +/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]PROSCASH)[;⎕io+2;] ⋄ :endif
[45]  :caselist 2 8
[46]      ∆ILLCASHMULT←ILLCOMPER∆L
[47]                      ILLCALCPEN←∆ILLCASHMULT× ILLERACCPNC∆l- +/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]PROSCASH
[48]               CALCILLCASH←  cfs×ILLCALCPEN
[49]      :if R ⋄ FCALCILLCASH←+⌿cfs×∆ILLCASHMULT×FILLERACCPNC∆l-(         +/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]PROSCASH)[;⎕io+2;] ⋄ :endif
[50]  :case 9 ⍝ A-Day Cash - can only be Commutation
[51]      denom←(ILLCALCPEN←ILLERACCPNC∆l-+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]PROSCASH)×20+3×cfs
[52]      :if ILLCOMADaySep∆L ⋄ ∆ILLCASHMULT←0⌈         ((20×  ILLCALCPEN)-3×   ILLCASHONTOP +  ILLCOMADayInd×IndILLCASHONTOP) CDIV   denom
[53]      :else               ⋄ ∆ILLCASHMULT←0⌈4⌿MATRIX ((20×+⌿ILLCALCPEN)-3×(+⌿ILLCASHONTOP)++⌿ILLCOMADayInd×IndILLCASHONTOP) CDIV +⌿denom
[54]      :endif
[55]      CALCILLCASH←(ILLCALCPEN←∆ILLCASHMULT×ILLCALCPEN)×cfs
[56]  :endselect
[57]  
[58]  :if ~R ⋄ CALCILLCASH←+⌿CALCILLCASH ⋄ :endif ⍝ Commutation
    ∇
