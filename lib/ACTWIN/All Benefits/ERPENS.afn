    ∇ ERPENS;ERPostB;ERPostBD;ERPostBDF;ERPostBF;ERPostBN;ERPostBNF;ERPreB;ERPreBD;ERPreBDF;ERPreBF;ERPreBN;ERPreBNF;FILLACCPND;FILLACCPNN;FPostBD;FPostBN;FPreBD;FPreBN;FPROSPEN;NOTNEG;PostB;PostBD;PostBDF;PostBF;PostBN;PostBNF;PreB;PreBD;PreBDF;PreBF;PreBN;PreBNF;∆;∆a;SPreB;SPreBF;SPostB;SPostBF;SERPreB;SERPreBF;SERPostB;SERPostBF;S∆;S∆a;SERFAC;SERFACF;SBARBFAC;SBARBFACF;SILLFACT;SPREADFRACCOMP;COMPPROSPEN;SCOMPPROSPEN;COMPPROSPENT;FCOMPPROSPENT;PROSERFAC;∆aC;NoRF;∆C
[1]   ⍝ ACTWIN.sf#4
[2]   ⍝ Apply Early Retirement Reduction Factors
[3]   ⍝ Called from INIT∆CASH
[4]   ⍝
[5]   ⍝ Initialise variables
[6]   ERPEN←ERPENC←SERPEN←IRDED←0×TPEN
[7]   ⍝
[8]   ⍝
[9]   ⍝ Indices for PEN are:
[10]  ⍝   0 - 0 Special
[11]  ⍝       1 Main
[12]  ⍝       2 Limited
[13]  ⍝       3 PenInc4
[14]  ⍝   1 - 0 Before split
[15]  ⍝       1 After split
[16]  ⍝       2 Future
[17]  ⍝       3 Post 09 for PPF valuations
[18]  ⍝   2 - 0 Subject to Revaluation
[19]  ⍝       1 Auxrev
[20]  ⍝       2 Revrat3
[21]  ⍝   3 - 0 Include in Underpin
[22]  ⍝       1 Exclude from Underpin
[23]  ⍝   4 - 0 Include in IRMax
[24]  ⍝       1 Exclude from IRMax
[25]  ⍝   5 - 0 ER Factor 1/LR Factor 1
[26]  ⍝       1 ER Factor 2/LR Factor 2
[27]  ⍝   6 - Vector of term to NRA
[28]  ⍝
[29]  ⍝ Apply Early Retirement Factors
[30]  ERPEN [;;⎕io  ;;;⎕io  ;]←RETTPEN[;;⎕io  ;;;⎕io  ;]×[⎕io+4]ERFAC
[31]  ERPEN [;;⎕io  ;;;⎕io+1;]←RETTPEN[;;⎕io  ;;;⎕io+1;]×[⎕io+4]BARBFAC
[32]  ERPEN [;;⎕io+1;;;⎕io  ;]←RETTPEN[;;⎕io+1;;;⎕io  ;]×[⎕io+4]ERFACF
[33]  ERPEN [;;⎕io+1;;;⎕io+1;]←RETTPEN[;;⎕io+1;;;⎕io+1;]×[⎕io+4]BARBFACF
[34]  ERPEN [;;⎕io+2;;;⎕io  ;]←RETTPEN[;;⎕io+2;;;⎕io  ;]×[⎕io+4]ERFAC
[35]  ERPEN [;;⎕io+2;;;⎕io+1;]←RETTPEN[;;⎕io+2;;;⎕io+1;]×[⎕io+4]BARBFAC
[36]  ERPENC[;;⎕io  ;;;⎕io  ;]←RETTPEN[;;⎕io  ;;;⎕io  ;]×[⎕io+4]ERFACC
[37]  ERPENC[;;⎕io  ;;;⎕io+1;]←RETTPEN[;;⎕io  ;;;⎕io+1;]×[⎕io+4]BARBFACC
[38]  ERPENC[;;⎕io+1;;;⎕io  ;]←RETTPEN[;;⎕io+1;;;⎕io  ;]×[⎕io+4]ERFACFC
[39]  ERPENC[;;⎕io+1;;;⎕io+1;]←RETTPEN[;;⎕io+1;;;⎕io+1;]×[⎕io+4]BARBFACFC
[40]  ERPENC[;;⎕io+2;;;⎕io  ;]←RETTPEN[;;⎕io+2;;;⎕io  ;]×[⎕io+4]ERFACC
[41]  ERPENC[;;⎕io+2;;;⎕io+1;]←RETTPEN[;;⎕io+2;;;⎕io+1;]×[⎕io+4]BARBFACC
[42]  :if servind ⋄ :andif LRFApplies ⍝ LRF only to Pre NRA Pension
[43]      ERPEN [;;⎕io  ;;;⎕io  ;]←ERPEN [;;⎕io  ;;;⎕io  ;]-TPEN∆Post[;;⎕io  ;;;⎕io  ;]×[⎕io+4]ERFAC    -×ERFAC
[44]      ERPEN [;;⎕io  ;;;⎕io+1;]←ERPEN [;;⎕io  ;;;⎕io+1;]-TPEN∆Post[;;⎕io  ;;;⎕io+1;]×[⎕io+4]BARBFAC  -×BARBFAC
[45]      ERPEN [;;⎕io+1;;;⎕io  ;]←ERPEN [;;⎕io+1;;;⎕io  ;]-TPEN∆Post[;;⎕io+1;;;⎕io  ;]×[⎕io+4]ERFACF   -×ERFACF
[46]      ERPEN [;;⎕io+1;;;⎕io+1;]←ERPEN [;;⎕io+1;;;⎕io+1;]-TPEN∆Post[;;⎕io+1;;;⎕io+1;]×[⎕io+4]BARBFACF -×BARBFACF
[47]      ERPEN [;;⎕io+2;;;⎕io  ;]←ERPEN [;;⎕io+2;;;⎕io  ;]-TPEN∆Post[;;⎕io+2;;;⎕io  ;]×[⎕io+4]ERFAC    -×ERFAC
[48]      ERPEN [;;⎕io+2;;;⎕io+1;]←ERPEN [;;⎕io+2;;;⎕io+1;]-TPEN∆Post[;;⎕io+2;;;⎕io+1;]×[⎕io+4]BARBFAC  -×BARBFAC
[49]      ERPENC[;;⎕io  ;;;⎕io  ;]←ERPENC[;;⎕io  ;;;⎕io  ;]-TPEN∆Post[;;⎕io  ;;;⎕io  ;]×[⎕io+4]ERFACC   -×ERFACC
[50]      ERPENC[;;⎕io  ;;;⎕io+1;]←ERPENC[;;⎕io  ;;;⎕io+1;]-TPEN∆Post[;;⎕io  ;;;⎕io+1;]×[⎕io+4]BARBFACC -×BARBFACC
[51]      ERPENC[;;⎕io+1;;;⎕io  ;]←ERPENC[;;⎕io+1;;;⎕io  ;]-TPEN∆Post[;;⎕io+1;;;⎕io  ;]×[⎕io+4]ERFACFC  -×ERFACFC
[52]      ERPENC[;;⎕io+1;;;⎕io+1;]←ERPENC[;;⎕io+1;;;⎕io+1;]-TPEN∆Post[;;⎕io+1;;;⎕io+1;]×[⎕io+4]BARBFACFC-×BARBFACFC
[53]      ERPENC[;;⎕io+2;;;⎕io  ;]←ERPENC[;;⎕io+2;;;⎕io  ;]-TPEN∆Post[;;⎕io+2;;;⎕io  ;]×[⎕io+4]ERFACC   -×ERFACC
[54]      ERPENC[;;⎕io+2;;;⎕io+1;]←ERPENC[;;⎕io+2;;;⎕io+1;]-TPEN∆Post[;;⎕io+2;;;⎕io+1;]×[⎕io+4]BARBFACC -×BARBFACC
[55]  :endif
[56]  :if ClntCode=3
[57]      NoRF←(ENX,LNX)/(~WARERFind),~WARLRFind
[58]      SERPEN[;;⎕io  ;;;⎕io  ;]←RETSTPEN[;;⎕io  ;;;⎕io  ;]×[⎕io+4]NoRF+ERFAC   ×~NoRF
[59]      SERPEN[;;⎕io  ;;;⎕io+1;]←RETSTPEN[;;⎕io  ;;;⎕io+1;]×[⎕io+4]NoRF+BARBFAC ×~NoRF
[60]      SERPEN[;;⎕io+1;;;⎕io  ;]←RETSTPEN[;;⎕io+1;;;⎕io  ;]×[⎕io+4]NoRF+ERFACF  ×~NoRF
[61]      SERPEN[;;⎕io+1;;;⎕io+1;]←RETSTPEN[;;⎕io+1;;;⎕io+1;]×[⎕io+4]NoRF+BARBFACF×~NoRF
[62]      SERPEN[;;⎕io+2;;;⎕io  ;]←RETSTPEN[;;⎕io+2;;;⎕io  ;]×[⎕io+4]NoRF+ERFAC   ×~NoRF
[63]      SERPEN[;;⎕io+2;;;⎕io+1;]←RETSTPEN[;;⎕io+2;;;⎕io+1;]×[⎕io+4]NoRF+BARBFAC ×~NoRF
[64]      :if servind ⋄ :andif LRFApplies ⋄ :andif WARLRFind ⍝ LRF only to Pre NRA Pension
[65]          SERPEN[;;⎕io  ;;;⎕io  ;]←SERPEN[;;⎕io  ;;;⎕io  ;]-STPEN∆Post[;;⎕io  ;;;⎕io  ;]×[⎕io+4]ERFAC   -×ERFAC
[66]          SERPEN[;;⎕io  ;;;⎕io+1;]←SERPEN[;;⎕io  ;;;⎕io+1;]-STPEN∆Post[;;⎕io  ;;;⎕io+1;]×[⎕io+4]BARBFAC -×BARBFAC
[67]          SERPEN[;;⎕io+1;;;⎕io  ;]←SERPEN[;;⎕io+1;;;⎕io  ;]-STPEN∆Post[;;⎕io+1;;;⎕io  ;]×[⎕io+4]ERFACF  -×ERFACF
[68]          SERPEN[;;⎕io+1;;;⎕io+1;]←SERPEN[;;⎕io+1;;;⎕io+1;]-STPEN∆Post[;;⎕io+1;;;⎕io+1;]×[⎕io+4]BARBFACF-×BARBFACF
[69]          SERPEN[;;⎕io+2;;;⎕io  ;]←SERPEN[;;⎕io+2;;;⎕io  ;]-STPEN∆Post[;;⎕io+2;;;⎕io  ;]×[⎕io+4]ERFAC   -×ERFAC
[70]          SERPEN[;;⎕io+2;;;⎕io+1;]←SERPEN[;;⎕io+2;;;⎕io+1;]-STPEN∆Post[;;⎕io+2;;;⎕io+1;]×[⎕io+4]BARBFAC -×BARBFAC
[71]      :endif
[72]  :endif
[73]  
[74]  ⍝ Set IR deductions for later use.
[75]  IRTOT←(+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+5]ERPEN)[⎕io;] ⍝ sum over all dimensions except 'IRMax' and 'Term'
[76]  :if IRLIM='P'
[77]      IRDED[;;;;⎕io;;]←ERPEN[;;;;⎕io;;]×[⎕io+5]1⌊0⌈(IRTOT-IRPEN) CDIV IRTOT ⍝ deduction the same proportion of all relevant benefits
[78]  :else
[79]      IRTOTF←(+/[⎕io]+/[⎕io+2]+/[⎕io+3]+/[⎕io+5]ERPEN)[⎕io+2;⎕io;]
[80]      IRDED[;⎕io+2;;;⎕io;;]←ERPEN[;⎕io+2;;;⎕io;;]×[⎕io+4]1⌊0⌈(IRTOT-       IRPEN) CDIV       IRTOTF ⍝ apply limit to future first
[81]      IRDED[;⎕io  ;;;⎕io;;]←ERPEN[;⎕io  ;;;⎕io;;]×[⎕io+4]1⌊0⌈(IRTOT-IRTOTF+IRPEN) CDIV IRTOT-IRTOTF ⍝ take balance off past
[82]      IRDED[;⎕io+1;;;⎕io;;]←ERPEN[;⎕io+1;;;⎕io;;]×[⎕io+4]1⌊0⌈(IRTOT-IRTOTF+IRPEN) CDIV IRTOT-IRTOTF
[83]  :endif
[84]  NOTNEG←0<+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]IRDED
[85]  IRDED←IRDED×[⎕io+6]NOTNEG ⍝ Make sure that IRDED is not negative at any age
[86]  ⍝
[87]  ⍝ Restrict for IRMax
[88]  ERACCPEN ←ERPEN -IRDED
[89]  ERACCPENC←ERPENC-IRDED  ⍝ Dubious logic
[90]  :if ClntCode=3
[91]      SERACCPEN←SERPEN ⍝ NOT YET ADJUSTED FOR IRMAX
[92]  :endif
[93]  ⍝ and sum over all but escalation rate and term
[94]  ∆a←+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]ERACCPEN ⍝ For Varprint
[95]  ERACCPN←+/[⎕io+1]∆a
[96]  FERACCPN←∆a[;⎕io+2;]
[97]  GERACCPN←(+/[⎕io+1]+/[⎕io+2]+/[⎕io+4]+/[⎕io+5]ERACCPEN)[;⎕io;]
[98]  ∆aC←+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]ERACCPENC
[99]  ERACCPNC←+/[⎕io+1]∆aC
[100] FERACCPNC←∆aC[;⎕io+2;]
[101] GERACCPNC←(+/[⎕io+1]+/[⎕io+2]+/[⎕io+4]+/[⎕io+5]ERACCPENC)[;⎕io;]
[102] 
[103] :if PHI ⋄ PHIERPENS ⋄ :endif
[104] 
[105] ILLPROSPEN←ILLPROSPENC←(⍴PROSPEN)⍴0
[106] :if ClntCode=3 ⋄ SILLPROSPEN←SILLPROSPENC←ILLPROSPEN ⋄ :endif
[107] 
[108] ⍝ Apply Ill Health Reduction Factors
[109] :if ILLIND≠0
[110]     :if SPREADFRAC←ILLIND=1 ⍝ No Prospective
[111]     :elseif STYPEC ⋄ :andif CAREFutAcc ⍝ Want all of Prospective in Future
[112]         SPREADFRAC←1
[113]     →illCASH ⍝⍝⍝ Same Calc for first 3
[114]     :elseif IHCARESpread ⋄ :andif CAREFutAcc ⍝ Spread by Accrued Pension
[115]         SPREADFRAC←(+⌿+⌿+⌿+⌿+⌿ILLTPEN[;⎕io+2;;;;;]) ZDIV +⌿+⌿+⌿+⌿+⌿+⌿ILLTPEN
[116]     →illCASH ⍝⍝⍝ Same Calc for first 3
[117]     :elseif ~STYPEC ⋄ :andif 0≠(⍴SSDIH)×⍴SFDIH ⍝ Reposition components of PROSPEN
[118]         SPREADFRAC←(0⌈'DN' DURN VDATE TO sfdih) ZDIV 0⌈'DN' DURN ssdih TO sfdih
[119] 
[120] illCASH:ILLPROSPENC[;⎕io+1;;;;;]←+/[⎕io+1]PROSPEN×[⎕io+6]1-SPREADFRAC
[121]         ILLPROSPENC[;⎕io+2;;;;;]←+/[⎕io+1]PROSPEN×[⎕io+6]  SPREADFRAC
[122] 
[123]     :else
[124]         SPREADFRAC←1   ⋄   ILLPROSPENC← PROSPEN
[125]     :endif
[126]     ILLACCPENC      ←ILLTPEN+ILLPROSPENC×[⎕io+6] ILLFRAC
[127]     ILLERACCPENC    ←ILLACCPENC ×[⎕io+6]ILLFACTC
[128]     ILLERACCPROSPENC←ILLPROSPENC×[⎕io+6]ILLFACTC×ILLFRAC
[129]     ⍝ Sum over all but escalation rate and term
[130]      ILLERACCPNC← +/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]ILLERACCPENC
[131]     FILLERACCPNC←(         +/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]ILLERACCPENC)[;⎕io+2;]
[132]     GILLERACCPNC←(+/[⎕io+1]+/[⎕io+2]         +/[⎕io+4]+/[⎕io+5]ILLERACCPENC)[;⎕io  ;]
[133] 
[134]     :if ILLIND=1 ⍝ No Prospective
[135]     :elseif STYPE ⋄ :andif CAREFutAcc ⍝ Want all of Prospective in Future
[136]         SPREADFRAC←1
[137]     →illPEN ⍝⍝⍝ Same Calc for first 3
[138]     :elseif IHCARESpread ⋄ :andif CAREFutAcc ⍝ Spread by Accrued Pension
[139]         SPREADFRAC←(+⌿+⌿+⌿+⌿+⌿ILLTPEN[;⎕io+2;;;;;]) ZDIV +⌿+⌿+⌿+⌿+⌿+⌿ILLTPEN
[140]     →illPEN ⍝⍝⍝ Same Calc for first 3
[141]     :elseif ~STYPE ⋄ :andif 0≠(⍴SSDIH)×⍴SFDIH ⍝ Reposition components of PROSPEN
[142]         SPREADFRAC←(0⌈'DN' DURN VDATE TO sfdih) ZDIV 0⌈'DN' DURN ssdih TO sfdih
[143] 
[144] illPEN: ILLPROSPEN[;⎕io+1;;;;;]←+/[⎕io+1]PROSPEN×[⎕io+6]1-SPREADFRAC
[145]         ILLPROSPEN[;⎕io+2;;;;;]←+/[⎕io+1]PROSPEN×[⎕io+6]  SPREADFRAC
[146]         :if ClntCode=3
[147]             SILLPROSPEN[;⎕io+1;;;;;]←+/[⎕io+1]SPROSPEN×[⎕io+6]1-SPREADFRAC
[148]             SILLPROSPEN[;⎕io+2;;;;;]←+/[⎕io+1]SPROSPEN×[⎕io+6]  SPREADFRAC
[149]         :endif
[150]     :else
[151]         SPREADFRAC←1   ⋄   ILLPROSPEN← PROSPEN
[152]         :if ClntCode=3 ⋄  SILLPROSPEN←SPROSPEN ⋄ :endif
[153]     :endif
[154] 
[155]     ILLACCPEN       ←ILLTPEN+ILLPROSPEN×[⎕io+6]ILLFRAC
[156]     ILLERACCPEN     ←ILLACCPEN ×[⎕io+6]ILLFACT
[157]     ILLERACCPROSPEN ←ILLPROSPEN×[⎕io+6]ILLFACT×ILLFRAC
[158]     :if ClntCode=3
[159]         SILLACCPEN←ILLSTPEN+SILLPROSPEN×[⎕io+6]ILLFRAC
[160]         :if WIHERFind ⋄ SILLFACT←ILLFACT
[161]         :else         ⋄ SILLFACT←(⍴ILLFACT)⍴1
[162]         :endif
[163]         SILLERACCPEN    ←SILLACCPEN ×[⎕io+6]SILLFACT
[164]         SILLERACCPROSPEN←SILLPROSPEN×[⎕io+6]SILLFACT×ILLFRAC
[165]     :endif
[166]     ⍝ Sum over all but escalation rate and term
[167]      ILLERACCPN← +/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]ILLERACCPEN
[168]     FILLERACCPN←(         +/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]ILLERACCPEN)[;⎕io+2;]
[169]     GILLERACCPN←(+/[⎕io+1]+/[⎕io+2]         +/[⎕io+4]+/[⎕io+5]ILLERACCPEN)[;⎕io  ;]
[170] :endif
[171] 
[172] ⍝⍝⍝ :if test ⍝ New Varprint
[173] ⍝⌿⍝    PreB  ←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]RETTPEN[;;⎕io  ;;;⎕io  ;]
[174] ⍝⌿⍝    PreBF ←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]RETTPEN[;;⎕io+1;;;⎕io  ;]
[175] ⍝⌿⍝    PostB ←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]RETTPEN[;;⎕io  ;;;⎕io+1;]
[176] ⍝⌿⍝    PostBF←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]RETTPEN[;;⎕io+1;;;⎕io+1;]
[177] ⍝⌿⍝    ERPreB  ←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]ERPEN[;;⎕io  ;;;⎕io  ;]
[178] ⍝⌿⍝    ERPreBF ←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]ERPEN[;;⎕io+1;;;⎕io  ;]
[179] ⍝⌿⍝    ERPostB ←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]ERPEN[;;⎕io  ;;;⎕io+1;]
[180] ⍝⌿⍝    ERPostBF←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]ERPEN[;;⎕io+1;;;⎕io+1;]
[181] ⍝⌿⍝    ∆←+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]ERPEN
[182] ⍝⌿⍝    PROSPENT ←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]ILLPROSPEN
[183] ⍝⌿⍝    FPROSPENT←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]ILLPROSPEN[;⎕io+2;;;;;]
[184] ⍝⌿⍝    :if ClntCode=3
[185] ⍝⌿⍝        SPreB  ←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]RETSTPEN[;;⎕io  ;;;⎕io  ;]
[186] ⍝⌿⍝        SPreBF ←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]RETSTPEN[;;⎕io+1;;;⎕io  ;]
[187] ⍝⌿⍝        SPostB ←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]RETSTPEN[;;⎕io  ;;;⎕io+1;]
[188] ⍝⌿⍝        SPostBF←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]RETSTPEN[;;⎕io+1;;;⎕io+1;]
[189] ⍝⌿⍝        SERPreB  ←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]SERPEN[;;⎕io  ;;;⎕io  ;]
[190] ⍝⌿⍝        SERPreBF ←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]SERPEN[;;⎕io+1;;;⎕io  ;]
[191] ⍝⌿⍝        SERPostB ←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]SERPEN[;;⎕io  ;;;⎕io+1;]
[192] ⍝⌿⍝        SERPostBF←+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]SERPEN[;;⎕io+1;;;⎕io+1;]
[193] ⍝⌿⍝        S∆←+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]SERPEN
[194] ⍝⌿⍝        SERFAC  ←NoRF+ERFAC  ×~NoRF ⋄ SERFACF  ←NoRF+ERFACF  ×~NoRF
[195] ⍝⌿⍝        SBARBFAC←NoRF+BARBFAC×~NoRF ⋄ SBARBFACF←NoRF+BARBFACF×~NoRF
[196] ⍝⌿⍝    :endif
[197] ⍝⌿⍝    :if 0=+/[⎕io]+/[⎕io+1]+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]RETTPEN[;;;;;⎕io+1;]  ⍝ No ERF2 components
[198] ⍝⌿⍝        AUDIT '1100a'
[199] ⍝⌿⍝        :if ClntCode=3 ⋄ AUDIT '1101a'⋄ :endif
[200] ⍝⌿⍝    :else
[201] ⍝⌿⍝        AUDIT '1100b' ⋄ AUDIT '1110'
[202] ⍝⌿⍝        :if ClntCode=3 ⋄ AUDIT '1101b' ⋄ AUDIT '1111' ⋄ :endif
[203] ⍝⌿⍝    :endif
[204] ⍝⌿⍝    ∆C←'Application:',IRLIM
[205] ⍝⌿⍝    AUDIT '1120' ⋄ AUDIT '1130' ⋄ AUDIT '1131' ⋄ AUDIT '1140'
[206] ⍝⌿⍝    :if ClntCode=3 ⋄ AUDIT '1145' ⋄ AUDIT '1146' ⋄ AUDIT '1147' ⋄ AUDIT '1148' ⋄ :endif
[207] ⍝⌿⍝    AUDIT '1150' ⋄ AUDIT '1151' ⋄ AUDIT '1152' ⋄ AUDIT '1153'
[208] ⍝⌿⍝    :if ILLIND≠0
[209] ⍝⌿⍝        ∆←+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]ILLACCPEN
[210] ⍝⌿⍝        ∆a←+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]ILLERACCPEN
[211] ⍝⌿⍝        AUDIT '1200a' ⋄ AUDIT '1201a' ⋄ AUDIT '1202a' ⋄ AUDIT '1203a'
[212] ⍝⌿⍝        AUDIT '1210' ⋄ AUDIT '1211' ⋄ AUDIT '1212'
[213] ⍝⌿⍝        :if ClntCode=3
[214] ⍝⌿⍝            S∆←+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]SILLACCPEN
[215] ⍝⌿⍝            S∆a←+/[⎕io+2]+/[⎕io+3]+/[⎕io+4]+/[⎕io+5]SILLERACCPEN
[216] ⍝⌿⍝            AUDIT '1221a' ⋄ AUDIT '1222a' ⋄ AUDIT '1223a'
[217] ⍝⌿⍝            AUDIT '1226' ⋄ AUDIT '1230' ⋄ AUDIT '1231' ⋄ AUDIT '1232'
[218] ⍝⌿⍝        :endif
[219] ⍝⌿⍝    :endif
[220] ⍝⍝⍝ :endif
    ∇
