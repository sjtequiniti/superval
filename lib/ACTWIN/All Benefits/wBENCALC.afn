    ∇ wBENCALC;FPROSPENADD;FUTFRAC;PENADD;PROSFRAC;PROSPENADD;DPROSFRAC;PROSFRAC0;careTOexit;SPEN;SPEN∆NRA;SPEN∆Post;allserv∆Ratio;SPEN∆I;exitTOnrd;DexitTOnrd;IexitTOnrd
[1]   ⍝ ACTWIN.sf#4
[2]   ⍝ Benefit accumulators calculator
[3]   ⍝ Retirement pension accumulators
[4]   
[5]   :if AccMethod ⋄ :andif ~⍬≡,SRATAB∆L
[6]       allserv∆Ratio←allserv CDIV (4,NX)⍴+⌿allserv
[7]       TPEN     [dynind;       ;revdefind;upinslind;irind;barbind;]←TPEN     [dynind;       ;revdefind;upinslind;irind;barbind;]+ PEN           ×[1]allserv∆Ratio
[8]       TPEN∆NRA [dynind;       ;revdefind;upinslind;irind;barbind;]←TPEN∆NRA [dynind;       ;revdefind;upinslind;irind;barbind;]+ PEN∆NRA       ×[1]allserv∆Ratio
[9]       TPEN∆Post[dynind;       ;revdefind;upinslind;irind;barbind;]←TPEN∆Post[dynind;       ;revdefind;upinslind;irind;barbind;]+(PEN-PreNRAPEN)×[1]allserv∆Ratio
[10]      ILLTPEN  [dynind;       ;revdefind;upinslind;irind;barbind;]←ILLTPEN  [dynind;       ;revdefind;upinslind;irind;barbind;]+IPEN           ×[1]allserv∆Ratio
[11]      DTPEN    [dynind;       ;revdefind;upinslind;irind;barbind;]←DTPEN    [dynind;       ;revdefind;upinslind;irind;barbind;]+DPEN           ×[1]allserv∆Ratio
[12]      :if ClntCode=3
[13]          STPEN     [dynind;       ;revdefind;upinslind;irind;barbind;]←STPEN     [dynind;       ;revdefind;upinslind;irind;barbind;]+SPEN     ←(WARFRAC∆SL× PEN          )×[1]allserv∆Ratio
[14]          STPEN∆NRA [dynind;       ;revdefind;upinslind;irind;barbind;]←STPEN∆NRA [dynind;       ;revdefind;upinslind;irind;barbind;]+SPEN∆NRA ←(WARFRAC∆SL× PEN∆NRA      )×[1]allserv∆Ratio
[15]          STPEN∆Post[dynind;       ;revdefind;upinslind;irind;barbind;]←STPEN∆Post[dynind;       ;revdefind;upinslind;irind;barbind;]+SPEN∆Post←(WARFRAC∆SL× PEN-PreNRAPEN)×[1]allserv∆Ratio
[16]          ILLSTPEN  [dynind;       ;revdefind;upinslind;irind;barbind;]←ILLSTPEN  [dynind;       ;revdefind;upinslind;irind;barbind;]+SPEN∆I   ←(WARFRAC∆SL×IPEN          )×[1]allserv∆Ratio
[17]          :if PHI
[18]              allserv∆Ratio←1 0 2⍉(NX,⍴allserv∆Ratio)⍴allserv∆Ratio
[19]              PHITPEN      [dynind;       ;revdefind;upinslind;irind;barbind;;]←PHITPEN      [dynind;       ;revdefind;upinslind;irind;barbind;;]+allserv∆Ratio MultiDimMult             PHIPEN
[20]              PHITPEN∆Post [dynind;       ;revdefind;upinslind;irind;barbind;;]←PHITPEN∆Post [dynind;       ;revdefind;upinslind;irind;barbind;;]+allserv∆Ratio MultiDimMult             PHIPEN-PHIPreNRAPEN
[21]              PHIDTPEN     [dynind;       ;revdefind;upinslind;irind;barbind;;]←PHIDTPEN     [dynind;       ;revdefind;upinslind;irind;barbind;;]+allserv∆Ratio MultiDimMult             PHIDPEN
[22]              PHISTPEN     [dynind;       ;revdefind;upinslind;irind;barbind;;]←PHISTPEN     [dynind;       ;revdefind;upinslind;irind;barbind;;]+allserv∆Ratio MultiDimMult  WARFRAC∆SL×PHIPEN
[23]              PHISTPEN∆Post[dynind;       ;revdefind;upinslind;irind;barbind;;]←PHISTPEN∆Post[dynind;       ;revdefind;upinslind;irind;barbind;;]+allserv∆Ratio MultiDimMult  WARFRAC∆SL×PHIPEN-PHIPreNRAPEN
[24]          :endif
[25]      :endif
[26]  :else
[27]      TPEN     [dynind;sliceup;revdefind;upinslind;irind;barbind;]←TPEN     [dynind;sliceup;revdefind;upinslind;irind;barbind;]+ PEN
[28]      TPEN∆NRA [dynind;sliceup;revdefind;upinslind;irind;barbind;]←TPEN∆NRA [dynind;sliceup;revdefind;upinslind;irind;barbind;]+ PEN∆NRA
[29]      TPEN∆Post[dynind;sliceup;revdefind;upinslind;irind;barbind;]←TPEN∆Post[dynind;sliceup;revdefind;upinslind;irind;barbind;]+ PEN-PreNRAPEN
[30]      ILLTPEN  [dynind;sliceup;revdefind;upinslind;irind;barbind;]←ILLTPEN  [dynind;sliceup;revdefind;upinslind;irind;barbind;]+IPEN
[31]      DTPEN    [dynind;sliceup;revdefind;upinslind;irind;barbind;]←DTPEN    [dynind;sliceup;revdefind;upinslind;irind;barbind;]+DPEN
[32]      :if ClntCode=3
[33]          STPEN     [dynind;sliceup;revdefind;upinslind;irind;barbind;]←STPEN     [dynind;sliceup;revdefind;upinslind;irind;barbind;]+SPEN     ←WARFRAC∆SL× PEN
[34]          STPEN∆NRA [dynind;sliceup;revdefind;upinslind;irind;barbind;]←STPEN∆NRA [dynind;sliceup;revdefind;upinslind;irind;barbind;]+SPEN∆NRA ←WARFRAC∆SL× PEN∆NRA
[35]          STPEN∆Post[dynind;sliceup;revdefind;upinslind;irind;barbind;]←STPEN∆Post[dynind;sliceup;revdefind;upinslind;irind;barbind;]+SPEN∆Post←WARFRAC∆SL× PEN-PreNRAPEN
[36]          ILLSTPEN  [dynind;sliceup;revdefind;upinslind;irind;barbind;]←ILLSTPEN  [dynind;sliceup;revdefind;upinslind;irind;barbind;]+SPEN∆I   ←WARFRAC∆SL×IPEN
[37]          :if PHI
[38]              PHITPEN      [dynind;sliceup;revdefind;upinslind;irind;barbind;;]←PHITPEN      [dynind;sliceup;revdefind;upinslind;irind;barbind;;]+           PHIPEN
[39]              PHITPEN∆Post [dynind;sliceup;revdefind;upinslind;irind;barbind;;]←PHITPEN∆Post [dynind;sliceup;revdefind;upinslind;irind;barbind;;]+           PHIPEN-PHIPreNRAPEN
[40]              PHIDTPEN     [dynind;sliceup;revdefind;upinslind;irind;barbind;;]←PHIDTPEN     [dynind;sliceup;revdefind;upinslind;irind;barbind;;]+          PHIDPEN
[41]              PHISTPEN     [dynind;sliceup;revdefind;upinslind;irind;barbind;;]←PHISTPEN     [dynind;sliceup;revdefind;upinslind;irind;barbind;;]+WARFRAC∆SL×PHIPEN
[42]              PHISTPEN∆Post[dynind;sliceup;revdefind;upinslind;irind;barbind;;]←PHISTPEN∆Post[dynind;sliceup;revdefind;upinslind;irind;barbind;;]+WARFRAC∆SL×PHIPEN-PHIPreNRAPEN
[43]          :endif
[44]      :endif
[45]  :endif
[46]  PPF∆DIDTPEN[dynind;sliceup;revdefind;upinslind;irind;barbind;]←PPF∆DIDTPEN[dynind;sliceup;revdefind;upinslind;irind;barbind;]+PPF∆DIDPEN
[47]  
[48]  exitTOnrd←SERVRND∆L DURN LDATE TO NRD
[49]  DexitTOnrd←0⌈exitTOnrd+EXWDDISSERV×((~bGAD)∨exitTOnrd≠0) ⋄ IexitTOnrd←0⌈exitTOnrd+EXIHSERV×((~bGAD)∨exitTOnrd≠0) ⍝⍝⍝ FIXME
[50]  exitTOnrd←0⌈exitTOnrd
[51]  FUTFRAC←NX/slice=0 ⋄ PROSFRAC←DPROSFRAC←NX/PROSFRAC0←0 ⍝ "Defaults"
[52]  
[53]  :if slice=0 ⋄ :andif (~accind)∨∨/CAREProspective
[54]      :if bGAD
[55]          PROSFRAC0←↑0⌈IexitTOnrd⌊ SRVMAXMP[ENX_1]                  - TOTSRVM ⍝⍝⍝ FIXME
[56]          PROSFRAC←  0⌈IexitTOnrd⌊(SRVMAXMP[ENX_1]⌊ IHSRVMAX[ENX_1])-ITOTSRVM
[57]          DPROSFRAC← 0⌈DexitTOnrd⌊(SRVMAXMP[ENX_1]⌊DISSRVMAX[ENX_1])-DTOTSRVM
[58]      :else
[59]          PROSFRAC0←↑0⌈IexitTOnrd⌊   SRVMAX[ENX_1]- TOTSRVM ⍝⍝⍝ ? exitTOnrd
[60]          PROSFRAC←  0⌈IexitTOnrd⌊ IHSRVMAX[ENX_1]-ITOTSRVM
[61]          DPROSFRAC← 0⌈DexitTOnrd⌊DISSRVMAX[ENX_1]-DTOTSRVM
[62]      :endif
[63]  
[64]      :if ~accind ⋄ :orif DISCAREProspective
[65]                 DPROSPEN [dynind;sliceup;revdefind;upinslind;irind;barbind; ]←   DPROSPEN [dynind;sliceup;revdefind;upinslind;irind;barbind; ]+FPROSPENADD←  FUTFRAC×PROSPENADD←DPROSFRAC×UNITPEN
[66]          :if PHI
[67]              PHIDPROSPEN [dynind;sliceup;revdefind;upinslind;irind;barbind;;]←PHIDPROSPEN [dynind;sliceup;revdefind;upinslind;irind;barbind;;]+PHIUNITPEN×[1]FUTFRAC×           DPROSFRAC
[68]          :endif
[69]          :if WOBAS=5
[70]              DIS2D∆L←0⌈(DISSRVMAX[ENX_1]⌊DTOTSRVM+DIS2D∆L)-DTOTSRVM
[71]                     DPROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind; ]←   DPROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind; ]+   UNITPEN
[72]              :if PHI
[73]                  PHIDPROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind;;]←PHIDPROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind;;]+PHIUNITPEN
[74]              :endif
[75]          :endif
[76]      :endif
[77]  
[78]      :if ~accind ⋄ :orif IHCAREProspective
[79]                   PROSPEN [dynind;sliceup;revdefind;upinslind;irind;barbind;]← PROSPEN [dynind;sliceup;revdefind;upinslind;irind;barbind;]+FPROSPENADD←FUTFRAC×PROSPENADD←PROSFRAC×UNITPEN
[80]          :if ClntCode=3
[81]                  SPROSPEN [dynind;sliceup;revdefind;upinslind;irind;barbind;]←SPROSPEN [dynind;sliceup;revdefind;upinslind;irind;barbind;]+            FUTFRAC×           PROSFRAC×UNITPEN×WARFRAC∆SL
[82]          :endif
[83]          :if ILLIND=3
[84]              ILL2D∆L←0⌈( IHSRVMAX[ENX_1]⌊ITOTSRVM+ILL2D∆L)-ITOTSRVM ⍝ Done here because ITOTSRVM is required
[85]                   PROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind;]← PROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind;]+UNITPEN
[86]              :if ClntCode=3
[87]                  SPROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind;]←SPROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind;]+UNITPEN×WARFRAC∆SL
[88]              :endif
[89]          :endif
[90]  ⍝⍝⍝        :if test ⋄ PROSFRAC←PROSFRAC CDIV 0⌈SERVRND∆L DURN VDATE TO LDATE DATEMIN NRD ⋄ :endif ⍝ Restore previous method
[91]  ⍝⌿⍝        PROSFRAC←PROSFRAC CDIV 0⌈SERVRND∆L DURN VDATE TO LDATE DATEMIN NRD ⍝ Restore previous method
[92]      :endif
[93]  :endif
[94]  
[95]  :if CAREInc∆L
[96]      careTOexit←0⌈SERVRND∆L DURN CAREServ TO LDATE DATEMIN NRD
[97]  
[98]      :if ~DISCAREProspective
[99]          :if WOBAS=5
[100]                       DPROSFRAC←DIS2D∆L CDIV careTOexit
[101]             DIS2D∆L←0⌈(DISSRVMAX[ENX_1]⌊DTOTSRVM+DIS2D∆L)-DTOTSRVM
[102]                    DPROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind; ]←   DPROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind; ]+   DPEN CDIV careTOexit
[103]             :if PHI
[104]                 PHIDPROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind;;]←PHIDPROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind;;]+PHIDPEN ZDIV (NX,NX)⍴careTOexit
[105]             :endif
[106]         :elseif bGAD
[107]             DPROSFRAC ← (0⌈DexitTOnrd⌊(SRVMAXMP[ENX_1]⌊DISSRVMAX[ENX_1])-DTOTSRVM) CDIV careTOexit ⍝⍝⍝ FIXME
[108]         :elseif slice=0
[109]             DPROSFRAC ← (0⌈DexitTOnrd⌊DISSRVMAX[ENX_1]-DTOTSRVM) ZDIV careTOexit
[110]         :endif
[111]         FPROSPENADD←FUTFRAC×PROSPENADD←DPROSFRAC×DPEN
[112]                DPROSPEN[dynind;sliceup;revdefind;upinslind;irind;barbind; ]←   DPROSPEN[dynind;sliceup;revdefind;upinslind;irind;barbind; ]+DPROSFRAC×DPEN
[113]         :if PHI
[114]             PHIDPROSPEN[dynind;sliceup;revdefind;upinslind;irind;barbind;;]←PHIDPROSPEN[dynind;sliceup;revdefind;upinslind;irind;barbind;;]+DPROSFRAC×[1]PHIDPEN
[115]         :endif
[116]     :endif
[117] 
[118]     :if ~IHCAREProspective
[119]         :if ILLIND=3
[120]             PROSFRAC0←↑PROSFRAC←ILL2D∆L CDIV careTOexit
[121]             ILL2D∆L←0⌈( IHSRVMAX[ENX_1]⌊ITOTSRVM+ILL2D∆L)-ITOTSRVM ⍝ Done here because ITOTSRVM is required
[122]              PROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind;]← PROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind;]+           IPEN CDIV careTOexit
[123]             SPROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind;]←SPROSPEN2[dynind;sliceup;revdefind;upinslind;irind;barbind;]+WARFRAC∆SL×IPEN CDIV careTOexit
[124]         :elseif bGAD
[125]              PROSFRAC0←↑(0⌈IexitTOnrd⌊ SRVMAXMP[ENX_1]                  - TOTSRVM) CDIV careTOexit ⍝⍝⍝ ? exitTOnrd FIXME CDIV/ZDIV
[126]              PROSFRAC ← (0⌈IexitTOnrd⌊(SRVMAXMP[ENX_1]⌊IHSRVMAX [ENX_1])-ITOTSRVM) CDIV careTOexit
[127]         :elseif slice=0
[128]              PROSFRAC0←↑(0⌈IexitTOnrd⌊   SRVMAX[ENX_1]- TOTSRVM) ZDIV careTOexit ⍝⍝⍝ ? exitTOnrd
[129]              PROSFRAC ← (0⌈IexitTOnrd⌊ IHSRVMAX[ENX_1]-ITOTSRVM) ZDIV careTOexit
[130]         :endif
[131]         FPROSPENADD←FUTFRAC×PROSPENADD←PROSFRAC×IPEN
[132]              PROSPEN[dynind;sliceup;revdefind;upinslind;irind;barbind;]← PROSPEN[dynind;sliceup;revdefind;upinslind;irind;barbind;]+PROSFRAC×IPEN
[133]         :if ClntCode=3
[134]             SPROSPEN[dynind;sliceup;revdefind;upinslind;irind;barbind;]←SPROSPEN[dynind;sliceup;revdefind;upinslind;irind;barbind;]+PROSFRAC×IPEN×WARFRAC∆SL
[135]         :endif
[136]     :endif
[137] :endif
[138] 
[139] ⍝ Accrued and total pension accumulators
[140] :if AltFlag=0 ⍝ Don't add in Gtee slices
[141]     :if accind ⋄ :andif ~IHCAREProspective
[142]         TOTPEN0←TOTPEN0+SALADJ×PEN[0]         ×1+PROSFRAC0
[143]     :else
[144]         TOTPEN0←TOTPEN0+SALADJ×PEN[0]+UNITPEN[0]×PROSFRAC0
[145]     :endif
[146]     ACCPEN0←ACCPEN0+SALADJ×PEN[0]×1-FUTFRAC[0]
[147] :endif
[148] ⍝⍝⍝ :if test ⋄ wPENSVAR ⋄ :endif
[149] ⍝⌿⍝ wPENSVAR
    ∇
