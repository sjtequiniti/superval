    ∇ PRELIM∆ver;QYdis∆l;QYret∆l;idx;PRE∆l;POST∆l;SPOST∆l;L0;DY1XXA;DY2XXA;DYPreXXA;DYPostXXA;DY1XX;DY2XX;QY∆l;penadj;ILL∆l;DY3XX;DY4XX;DY6XX;DY7XX;DYPreXX;DYPostXX;DY3XXA;DY4XXA;DY6XXA;DY7XXA;QXdef∆l;AgeMP;DurnMP;FreqAdj;∆[1]   ⍝ ACTWIN.sf#3[2]   ⍝ Sets up the Annuity Values[3]   ⍝[4]   ⍝[5]   ⍝ V Windows RSE Aug 98 "Windowised"[6]   [7]   AC0←ACW←ZWB REC[fACW] ⋄ AC←PAC0←0[8]   GMP0←GMP0×~IGNOREPre ⋄ GMPE0←GMPE0×~IGNOREPost[9]   data←6↑PAC0,GMP0,GMPE0 ⍝ UK Data Fields[10]  ⍝⍝⍝ GMP0←GMP0×preADJ ⋄ GMPE0←GMPE0×postADJ[11]  [12]  ⍝ Execute Member Specific Parameters[13]    PRE∆l←1+0.01×ZWB   PREMEMB[14]   POST∆l←1+0.01×ZWB PPOSTMEMB[15]  SPOST∆l←1+0.01×ZWB SPOSTMEMB[16]    ILL∆l←1+0.01×ZWB   ILLMEMB[17]  [18]  WOFRAC∆l←0.01×ZWB WOFRAC[19]  ILLCOMMULT←    ZWB ILLCOMMult[20]  ILLCOMPER←0.01×ZWB ILLCOMPer[21]  ILLCOMADayPER←0.01×ZWB ILLCOMADayPer[22]  ILLCOMMULT2←    ZWB ILLCOMMult2[23]  ILLCOMPER2←0.01×ZWB ILLCOMPer2[24]  WARFRAC∆l←,0.01×ZWB WARFRAC[25]  COMMULT←    ZWB COMMult[26]  COMPER←0.01×ZWB COMPer[27]  COMADayPER←0.01×ZWB COMADayPer[28]  COMMULT2←    ZWB COMMult2[29]  COMPER2←0.01×ZWB COMPer2[30]  [31]  :if ExactProsPen ⋄ AgeMP←MID (Xe+⍳ENX_1),DOB YDAYS NRD ⋄ :endif[32]  [33]  :if ILL2D∆L←ILLIND=3 ⋄ :andif ILL2D∆L←↑ENX>1[34]      :if ExactProsPen[35]          DurnMP←MID (((⍎ SDIH2D) YDAYS ValDATE)+⍳ENX_1),(⍎ SDIH2D) YDAYS NRD[36]          ILL2D∆L←NX↑ILL2D TableInterpolation AgeMP DurnMP[37]      :else[38]          ILL2D∆L←NX↑ENX_1↑X0↓,1↑[1](Xe≥X0)⊖(((1+'YD' DURN (⍎SDIH2D)  TO ValDATE)-⌊Xe+1)+⍳lra+1)⌽ILL2D[39]      :endif[40]  :endif[41]  :if DIS2D∆L←WOBAS=5  ⋄ :andif DIS2D∆L←↑ENX>1 ⍝⍝⍝ lra≥X0[42]      :if ExactProsPen[43]          DurnMP←MID (((⍎SDDIS2D) YDAYS ValDATE)+⍳ENX_1),(⍎SDDIS2D) YDAYS NRD[44]          DIS2D∆L←NX↑DIS2D TableInterpolation AgeMP DurnMP[45]      :else[46]          DIS2D∆L←NX↑ENX_1↑X0↓,1↑[1](Xe≥X0)⊖(((1+'YD' DURN (⍎SDDIS2D) TO ValDATE)-⌊Xe+1)+⍳lra+1)⌽DIS2D[47]      :endif[48]  :endif[49]  ⍝⍝⍝    WL←(SPA-16)⌊20⌈⌊ (COD1-1 0 0) YDAYS SRD[50]  [51]  ⍝⍝⍝ ⍝ Pre Retirement Mortality Improvement[52]  ⍝⍝⍝ :if aosind  ⍝ Need to use Cur or Prev versions of mortality improvement if 2D Table[53]  ⍝⍝⍝    IVper←0⌈(¯1↑ValDATE)-¯1↑pvDATE[54]  ⍝⍝⍝    :if 1 ⍝⍝⍝prevind[55]  ⍝⍝⍝        :if MORTIMPR ='2' ⋄ PreImp  ←(⊂MATRIX(⎕io⊃AllPreImp  )[IVper;;]),1↓AllPreImp   ⋄ :endif[56]  ⍝⍝⍝        :if PMORTIMPR='2' ⋄ PostImpM←(⊂MATRIX(⎕io⊃AllPostImpM)[IVper;;]),1↓AllPostImpM ⋄ :endif[57]  ⍝⍝⍝        :if SMORTIMPR='2'[58]  ⍝⍝⍝            PostImpS←(⊂MATRIX(⎕io⊃AllPostImpS)[IVper;;]),1↓AllPostImpS[59]  ⍝⍝⍝            DisImp←(⊂MATRIX(⎕io⊃AllDisImp)[IVper;;]),1↓AllDisImp[60]  ⍝⍝⍝        :endif[61]  ⍝⍝⍝        :if IMORTIMPR='2' ⋄ IllImp←(⊂MATRIX(⎕io⊃AllIllImp)[IVper;;]),1↓AllIllImp ⋄ :endif[62]  ⍝⍝⍝    :else[63]  ⍝⍝⍝        :if MORTIMPR ='2' ⋄ PreImp  ←CurPreImp   ⋄ :endif[64]  ⍝⍝⍝        :if PMORTIMPR='2' ⋄ PostImpM←CurPostImpM ⋄ :endif[65]  ⍝⍝⍝        :if SMORTIMPR='2'[66]  ⍝⍝⍝            PostImpS←CurPostImpS ⋄ DisImp←CurDisImp[67]  ⍝⍝⍝        :endif[68]  ⍝⍝⍝        :if IMORTIMPR='2' ⋄ IllImp←CurIllImp ⋄ :endif[69]  ⍝⍝⍝    :endif[70]  ⍝⍝⍝ :endif[71]  [72]  DXX∆l←(X0,DecPS) Dec∆Select DXX[73]  ⍝⍝⍝ DXX∆l←PRE∆l×DXX∆l×lra OVERTAKE MORTIMPR RedFact PreImp,X0[74]  DXX∆l←PRE∆l×DXX∆l×lra OVERTAKE ∆←(MORTIMPR (term+aosterm)) RedFactCalc PreImp,X0[75]  [76]  :if ~s143[77]  ⍝⍝⍝    QXdef∆l←PRE∆l ×QXdef×120 OVERTAKE MORTIMPR  RedFact PreImp,X0[78]  ⍝⍝⍝    QXret∆l←POST∆l×QXret×120 OVERTAKE PMORTIMPR RedFact PostImpM,X0[79]      QXdef∆l←PRE∆l ×QXdef×120 OVERTAKE ∆[80]      QXret∆l←POST∆l×QXret×120 OVERTAKE (PMORTIMPR (term+aosterm)) RedFactCalc PostImpM,X0[81]      :if ppf           ⋄ QXill∆l←0[82]  ⍝⍝⍝    :elseif 2=⍴⍴QXill ⋄ QXill∆l←ILL∆l×QXill×120 120⍴120 OVERTAKE IMORTIMPR RedFact IllImp,X0[83]  ⍝⍝⍝    :else             ⋄ QXill∆l←ILL∆l×QXill×        120 OVERTAKE IMORTIMPR RedFact IllImp,X0[84]      :elseif 2=⍴⍴QXill ⋄ QXill∆l←ILL∆l×QXill×120 120⍴120 OVERTAKE (IMORTIMPR (term+aosterm)) RedFactCalc IllImp,X0[85]      :else             ⋄ QXill∆l←ILL∆l×QXill×        120 OVERTAKE (IMORTIMPR (term+aosterm)) RedFactCalc IllImp,X0[86]      :endif[87]      :if varyAge∆[88]  ⍝⍝⍝        QYdis∆l←SPOST∆l×(19 120⍴QY)×19 120⍴SMORTIMPR RedFact DisImp[89]  ⍝⍝⍝        QYret∆l←SPOST∆l×(19 120⍴QY)×19 120⍴SMORTIMPR RedFact PostImpS[90]  ⍝⍝⍝        QY∆l←120 OVERTAKE (∣0⌊AGEDIF[X0])↓((0⌈AGEDIF[X0])⍴0),SPOST∆l×QY×120 OVERTAKE SMORTIMPR RedFact DisImpDID[91]          ∆←AGEDIF[X0][92]          QYdis∆l←SPOST∆l×QY×[1]59 120⍴(SMORTIMPR (term+aosterm)) RedFactCalc DisImp  ,⊂X0+29-⍳59[93]          QYret∆l←SPOST∆l×QY×[1]59 120⍴(SMORTIMPR (term+aosterm)) RedFactCalc PostImpS,⊂X0+29-⍳59[94]          QY∆l←120 OVERTAKE (∣0⌊∆)↓((0⌈∆)⍴0),SPOST∆l×QY×120 OVERTAKE (SMORTIMPR (term+aosterm)) RedFactCalc DisImpDID,X0-∆[95]      :else[96]  ⍝⍝⍝        QYdis∆l←SPOST∆l×QY×120 OVERTAKE SMORTIMPR RedFact DisImp[97]  ⍝⍝⍝        QYret∆l←SPOST∆l×QY×120 OVERTAKE SMORTIMPR RedFact PostImpS[98]          QYdis∆l←SPOST∆l×QY×120 OVERTAKE (SMORTIMPR (term+aosterm)) RedFactCalc DisImp  ,X0-AGEDIF[99]          QYret∆l←SPOST∆l×QY×120 OVERTAKE (SMORTIMPR (term+aosterm)) RedFactCalc PostImpS,X0-AGEDIF[100]         QY∆l←120 OVERTAKE (∣0⌊AGEDIF)↓((0⌈AGEDIF)⍴0),QYdis∆l[101]     :endif[102] [103]     L0←34489[104]     ⍝ Annuities are indexed by member's age - need to move origin[105]     DX3 ←ANN∆SHAPE DX3XX ←NRA PREP∆RATE DX3XXA ←120↑L0×1,×\(1-QXdef∆l) CDIV 120 OVERTAKE (X0⍴1↑pi),pi[106]     DX1 ←ANN∆SHAPE DX1XX ←NRA PREP∆RATE DX1XXA ←120↑L0×1,×\(1-QXret∆l) CDIV 120 OVERTAKE (X0⍴1↑pi),pi[107]     DX2 ←ANN∆SHAPE DX2XX ←NRA PREP∆RATE DX2XXA ←120↑L0×1,×\(1-QXret∆l)×(120 OVERTAKE (X0⍴1↑ DYNINC), DYNINC) CDIV 120 OVERTAKE (X0⍴1↑pi),pi[108]     DX4 ←ANN∆SHAPE DX4XX ←NRA PREP∆RATE DX4XXA ←120↑L0×1,×\(1-QXret∆l)×(120 OVERTAKE (X0⍴1↑NDYNINC),NDYNINC) CDIV 120 OVERTAKE (X0⍴1↑pi),pi[109]     DX5 ←ANN∆SHAPE DX5XX ←NRA PREP∆RATE DX5XXA ←120↑L0×1,×\(1-QXret∆l)×(120 OVERTAKE (X0⍴1↑DYNINC3),DYNINC3) CDIV 120 OVERTAKE (X0⍴1↑pi),pi[110]     DX10←ANN∆SHAPE DX10XX←NRA PREP∆RATE DX10XXA←120↑L0×1,×\(1-QXret∆l)×(120 OVERTAKE (X0⍴1↑DYNINC4),DYNINC4) CDIV 120 OVERTAKE (X0⍴1↑pi),pi[111] [112]     ⍝ Annuities are indexed by member's age - need to move origin[113]     DY1XX   ←120↑MID DY1XXA   ←120↑L0×1,×\(1-QY∆l)×(120 OVERTAKE (X0⍴1↑   NDYNINC),NDYNINC   ) CDIV 120 OVERTAKE (X0⍴1↑pi),pi[114]     DY2XX   ←120↑MID DY2XXA   ←120↑L0×1,×\(1-QY∆l)×(120 OVERTAKE (X0⍴1↑    DYNINC), DYNINC   ) CDIV 120 OVERTAKE (X0⍴1↑pi),pi[115]     DY3XX   ←120↑MID DY3XXA   ←120↑L0×1,×\(1-QY∆l)×(120 OVERTAKE (X0⍴1↑ B88GMPINC),B88GMPINC ) CDIV 120 OVERTAKE (X0⍴1↑pi),pi[116]     DY4XX   ←120↑MID DY4XXA   ←120↑L0×1,×\(1-QY∆l)×(120 OVERTAKE (X0⍴1↑ A88GMPINC),A88GMPINC ) CDIV 120 OVERTAKE (X0⍴1↑pi),pi[117]     DY6XX   ←120↑MID DY6XXA   ←120↑L0×1,×\(1-QY∆l)×(120 OVERTAKE (X0⍴1↑   DYNINC3),DYNINC3   ) CDIV 120 OVERTAKE (X0⍴1↑pi),pi[118]     DY7XX   ←120↑MID DY7XXA   ←120↑L0×1,×\(1-QY∆l)×(120 OVERTAKE (X0⍴1↑   DYNINC4),DYNINC4   ) CDIV 120 OVERTAKE (X0⍴1↑pi),pi[119] [120]     penadj←((FREQ+¯1+2×MODE)÷2×FREQ)-0.5[121]     :if ppf ⍝ Need figures for all NRAs for DID[122]         DA1∆l←penadj+X0↓(⌽+\⌽DY1XX) CDIV DY1XXA[123]         DA2∆l←penadj+X0↓(⌽+\⌽DY2XX) CDIV DY2XXA[124]     :else[125]         DA1∆l←penadj+ANN∆SHAPE LatestRA PREP∆RATE (⌽+\⌽DY1XX) CDIV DY1XXA[126]         DA2∆l←penadj+ANN∆SHAPE LatestRA PREP∆RATE (⌽+\⌽DY2XX) CDIV DY2XXA[127]     :endif[128]     :if bencap[129]         DYPreXX ←120↑MID DYPreXXA ←120↑L0×1,×\(1-QY∆l)×(120 OVERTAKE (X0⍴1↑ DYNINCPre),DYNINCPre ) CDIV 120 OVERTAKE (X0⍴1↑pi),pi[130]         DYPostXX←120↑MID DYPostXXA←120↑L0×1,×\(1-QY∆l)×(120 OVERTAKE (X0⍴1↑DYNINCPost),DYNINCPost) CDIV 120 OVERTAKE (X0⍴1↑pi),pi[131]         DAPre∆l ←penadj+ANN∆SHAPE LatestRA PREP∆RATE (⌽+\⌽DYPreXX ) CDIV DYPreXXA[132]         DAPost∆l←penadj+ANN∆SHAPE LatestRA PREP∆RATE (⌽+\⌽DYPostXX) CDIV DYPostXXA[133]     :endif[134]     DA3∆l←penadj+ANN∆SHAPE LatestRA PREP∆RATE (⌽+\⌽DY3XX) CDIV DY3XXA[135]     DA4∆l←penadj+ANN∆SHAPE LatestRA PREP∆RATE (⌽+\⌽DY4XX) CDIV DY4XXA[136]     DA6∆l←penadj+ANN∆SHAPE LatestRA PREP∆RATE (⌽+\⌽DY6XX) CDIV DY6XXA[137]     DA7∆l←penadj+ANN∆SHAPE LatestRA PREP∆RATE (⌽+\⌽DY7XX) CDIV DY7XXA[138] [139]     ⍝ Use the Annuity at the particular Age if over NRA[140]     RA1←ANN∆SHAPE RA1XX ⋄ LA1 ←ANN∆SHAPE LA1XX[141]     RA2←ANN∆SHAPE RA2XX ⋄ LA2 ←ANN∆SHAPE LA2XX[142]     RA6←ANN∆SHAPE RA6XX ⋄ LA10←ANN∆SHAPE LA10XX[143]     RA7←ANN∆SHAPE RA7XX ⋄ LA12←ANN∆SHAPE LA12XX[144] [145]     :if 0≠∆←1⊃KnownExit ⍝ Known Death[146]         :if ∆<0 ⍝ Died on or before Valn Date[147]             QXret∆l←120⍴0.99999[148]         :else[149]             FreqAdj←⍬⍴(FREQ+¯1+2×MODE)÷2×FREQ[150]             QXret∆l←(⍴QXret∆l) OVERTAKE ((X0+⌊∆)↑QXret∆l),(0.99999⌊(1-1∣∆)÷1-FreqAdj),0.99999[151]         :endif[152]     :endif[153] [154]     Memb∆Output←X0 dbX0 dbXe ENX LNX NX SNX "" ⍬ (⌈/X0,NRA∆G) DXX∆l (120⍴0) QXret∆l QYret∆l QYdis∆l QXill∆l AGEDIF ""[155]     :if aggopt[0] ⋄ Memb∆All[⎕io+X0;]←Memb∆Output ⋄ :endif⍝ Header row so move down one[156]     Memb∆Output←PREPARE_MembAPP Memb∆Output[157] :endif[158] [159] :if ~NoInd ⍝ Member details in headers[160]     H0[2;(23+⍳10),40,(,47 62 77 ∘.+⍳10),, 105 124 ∘.+⍳7]←H1[2;(23+⍳10),40,(, 47 62 77 ∘.+⍳10),, 105 124 ∘.+⍳7]←(10↑NAME),SEX,(,SDATE DOB,DJS,DJF),,'CI7' ⎕FMT GMP0,GMPE0[161] :endif[162] [163] :if ppf[164]     OffCap←0.01×ZWB OFFCAP[165]     capflag←0[166]     PPF∆ageadj←X0=⌊100∣(dfDOB DATEEXP REC[fDOB])YDAYS ValDATE ⍝ Means that age exact is more than age nearest[167] ⍝??⍝    PPF∆ageadj←X0=⌊Xe ⍝ Means that age exact is more than age nearest[168]     v09←ppfI20*-⍳NX[169]     v09MP←ppfI20*-NX_1⌊0.5+⍳NX[170]     DXX∆PPF∆l←(X0,DecPS) Dec∆Select DXX∆PPF[171] ⍝⍝⍝    DXX∆PPF∆l←DXX∆PPF∆l×(⍴DXX∆PPF∆l) OVERTAKE MORTIMPR RedFact PreImp,X0[172]     DXX∆PPF∆l←DXX∆PPF∆l×(⍴DXX∆PPF∆l) OVERTAKE (MORTIMPR (term+aosterm)) RedFactCalc PreImp,X0[173] :endif[174] [175] :if PHI[176]     PHIMatMY ←(NX,NX)↑0.5×(XMP∘.≤x)+XMP∘.<x←(XMP<PHIEndAge)/XMP ⍝ Variables for setting PHI bens/conts[177] [178]     PHIMYBen ←(NX,NX)↑0.5×(XMP∘.<x)+XMP∘.≤x←(XMP<X0+ENX_1)/XMP ⍝ Variables for non-PHI Benefits[179]     PHINRABen←(PHISYBen←(NX,NX)↑X∘.≤(X≤X0+ENX_1)/X)-×PHIMYBen[180] :endif[181] [182] :if ppf∨bencap ⋄ :andif PPFServiceCap[183]      PPFCAP←ppfcap×2⌊1+0.03×⌊0⌈((⍎PPFServCapBDate) YDAYS ⍎PPFServCapEDate)-20[184] :endif    ∇