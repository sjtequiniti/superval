    ∇ INIT∆AltSLICES;TPEN1;STPEN1;PROSPEN1;SPROSPEN1;PPF∆DIDTPEN1;idx;DPROSPEN1;ratio;ProRate∆pp1;diff;ERPEN1;ERPEN;TPEN∆NRA1;STPEN∆NRA1;TPEN∆Post1;STPEN∆Post1;ILLTPEN1;ILLSTPEN1;DTPEN1;PHITPEN1;PHISTPEN1;PHIDTPEN1;PHIDPROSPEN1;PHIERPEN1;ct;PHISTPEN∆Post1;PHITPEN∆Post1;totdiff;PHICAREProRate1;bens
[1]   ⍝ ACTWIN.sf#3
[2]   ⍝ Do the necessary comparisons with the Alternate Slices
[3]   
[4]   ⍝ Keep copies of the "normal" slices calculations
[5]   AltFlag←1 ⋄ TPEN1←TPEN    ⋄    STPEN1←   STPEN ⋄ TPEN∆NRA1 ←TPEN∆NRA  ⋄ STPEN∆NRA1 ←STPEN∆NRA
[6]            ILLTPEN1←ILLTPEN ⋄ ILLSTPEN1←ILLSTPEN ⋄ TPEN∆Post1←TPEN∆Post ⋄ STPEN∆Post1←STPEN∆Post
[7]              DTPEN1←DTPEN   ⋄ PROSPEN1 ← PROSPEN ⋄ SPROSPEN1 ←SPROSPEN  ⋄  DPROSPEN1 ←DPROSPEN
[8]   :if PHI⋄ PHITPEN1←PHITPEN ⋄ PHISTPEN1←PHISTPEN ⋄ PHITPEN∆Post1←PHITPEN∆Post ⋄ PHISTPEN∆Post1←PHISTPEN∆Post ⋄ PHIDTPEN1←PHIDTPEN ⋄ PHIDPROSPEN1←PHIDPROSPEN ⋄ :endif
[9]   
[10]  PPF∆DIDTPEN1←PPF∆DIDTPEN
[11]  :if ~IsAccrued
[12]      ProRate∆pp1←ProRate∆pp
[13]      ERPEN1←(TPEN[;;0;;;0;]×[4]ERFAC)+(TPEN[;;0;;;1;]×[4]BARBFAC)+(TPEN[;;1;;;0;]×[4]ERFACF)+(TPEN[;;1;;;1;]×[4]BARBFACF)
[14]      :if PHI
[15]          PHICAREProRate1←PHICAREProRate
[16]          PHIERPEN1←(PHITPEN[;;0;;;0;;] MultiDimMult (NX,NX)⍴ERFAC)+(PHITPEN[;;0;;;1;;] MultiDimMult (NX,NX)⍴BARBFAC)+(PHITPEN[;;1;;;0;;] MultiDimMult (NX,NX)⍴ERFACF)+(PHITPEN[;;1;;;1;;] MultiDimMult (NX,NX)⍴BARBFACF)
[17]      :endif
[18]  :endif
[19]  
[20]  TPEN←STPEN←PROSPEN←DPROSPEN←SPROSPEN←ILLTPEN←ILLSTPEN←DTPEN←PPF∆DIDTPEN←TPEN∆NRA←STPEN∆NRA←TPEN∆Post←STPEN∆Post←(4,4,3,2,2,2,NX)⍴TOTSRVM←TOTSRVMSY←ITOTSRVM←DTOTSRVM←0
[21]  :if PHI ⋄ PHITPEN←PHISTPEN←PHITPEN∆Post←PHISTPEN∆Post←PHIDPROSPEN←PHIDTPEN←((⍴TPEN),NX)⍴0 ⋄ :endif
[22]  
[23]  wBENS
[24]  
[25]  RETTPEN←TPEN ⋄ RETSTPEN←STPEN ⍝ Store unadjusted figure for ER comparison
[26]  
[27]  :if ~IsAccrued
[28]      ERPEN←(TPEN[;;0;;;0;]×[4]ERFAC)+(TPEN[;;0;;;1;]×[4]BARBFAC)+(TPEN[;;1;;;0;]×[4]ERFACF)+(TPEN[;;1;;;1;]×[4]BARBFACF)
[29]  :endif
[30]  
[31]  :if AltSw∊1 2 ⍝ Greater of or Lessor of
[32]      idx←(+⌿+⌿+⌿+⌿+⌿+⌿TPEN   )<+⌿+⌿+⌿+⌿+⌿+⌿TPEN1
[33]      :if 2=AltSw ⋄ idx←~idx ⋄ :endif
[34]      idx←idx/⍳⍴idx
[35]           TPEN[;;;;;;idx]←     TPEN1[;;;;;;idx] ⋄      STPEN[;;;;;;idx]←     STPEN1[;;;;;;idx]
[36]      TPEN∆Post[;;;;;;idx]←TPEN∆Post1[;;;;;;idx] ⋄ STPEN∆Post[;;;;;;idx]←STPEN∆Post1[;;;;;;idx]
[37]  
[38]      ⍝ Retirement NRA figures for N/NS
[39]      idx←(+⌿+⌿+⌿+⌿+⌿+⌿TPEN∆NRA)<+⌿+⌿+⌿+⌿+⌿+⌿TPEN∆NRA1
[40]      :if 2=AltSw ⋄ idx←~idx ⋄ :endif
[41]      idx←idx/⍳⍴idx
[42]      TPEN∆NRA[;;;;;;idx]← TPEN∆NRA1[;;;;;;idx] ⋄  STPEN∆NRA[;;;;;;idx]← STPEN∆NRA1[;;;;;;idx]
[43]  
[44]      ⍝ Now select ER after applying ER Factors if not Accrued
[45]      :if IsAccrued
[46]          RETTPEN←TPEN ⋄ RETSTPEN←STPEN
[47]      :else
[48]          idx←(+⌿+⌿+⌿+⌿ERPEN)<+⌿+⌿+⌿+⌿ERPEN1
[49]          :if 2=AltSw ⋄ idx←~idx ⋄ :endif
[50]          idx←idx/⍳⍴idx
[51]          RETTPEN[;;;;;;idx]←TPEN1[;;;;;;idx] ⋄ RETSTPEN[;;;;;;idx]←STPEN1[;;;;;;idx]
[52]          ProRate∆pp[idx;]←ProRate∆pp1[idx;]
[53]          :if ~bGAD ⋄ ProRate∆RServ←ProRate∆pp ⋄ :endif ⍝⍝⍝ FIXME: fix for Alternate Slices
[54]      :endif
[55]  
[56]      ⍝ Now select IH, including prospective
[57]      idx←(+⌿+⌿+⌿+⌿+⌿+⌿ILLTPEN+PROSPEN×ILLFRAC)<+⌿+⌿+⌿+⌿+⌿+⌿ILLTPEN1+PROSPEN1×ILLFRAC
[58]      :if 2=AltSw ⋄ idx←~idx ⋄ :endif
[59]      idx←idx/⍳⍴idx
[60]      ILLTPEN[;;;;;;idx]←ILLTPEN1[;;;;;;idx] ⋄ ILLSTPEN[;;;;;;idx]←ILLSTPEN1[;;;;;;idx]
[61]      :if ILLIND∊2 3 ⋄ PROSPEN[;;;;;;idx]←PROSPEN1[;;;;;;idx] ⋄ SPROSPEN[;;;;;;idx]←SPROSPEN1[;;;;;;idx] ⋄ :endif
[62]  
[63]      ⍝8.50⍝ WOFRAC was applied to the Prospective only - has now been omitted!
[64]      ⍝ Now select DIS, including prospective
[65]      idx←(+⌿+⌿+⌿+⌿+⌿+⌿DTPEN+(WOBAS∊4 5)×DPROSPEN)<+⌿+⌿+⌿+⌿+⌿+⌿DTPEN1+(WOBAS∊4 5)×DPROSPEN1
[66]      :if 2=AltSw ⋄ idx←~idx ⋄ :endif
[67]      idx←idx/⍳⍴idx
[68]      DTPEN[;;;;;;idx]←DTPEN1[;;;;;;idx]
[69]      :if WOBAS∊4 5 ⋄ DPROSPEN[;;;;;;idx]←DPROSPEN1[;;;;;;idx] ⋄ :endif
[70]  
[71]      ⍝ PPF∆DIDTPEN is not adjusted for PPFADJ and so the test may be different
[72]      idx←(+⌿+⌿+⌿+⌿+⌿+⌿PPF∆DIDTPEN)<+⌿+⌿+⌿+⌿+⌿+⌿PPF∆DIDTPEN1
[73]      :if 2=AltSw ⋄ idx←~idx ⋄ :endif
[74]      idx←idx/⍳⍴idx ⋄ PPF∆DIDTPEN[;;;;;;idx]←PPF∆DIDTPEN1[;;;;;;idx]
[75]  
[76]  :else ⍝ Scale Down
[77]      :if CapAccrual ⍝ Uniform Cap Accrual
[78]          ratio←1⌊(+⌿+⌿+⌿+⌿+⌿+⌿TPEN    ) CDIV +⌿+⌿+⌿+⌿+⌿+⌿TPEN1
[79]               TPEN←     TPEN1×[6]ratio ⋄      STPEN←     STPEN1×[6]ratio
[80]          TPEN∆Post←TPEN∆Post1×[6]ratio ⋄ STPEN∆Post←STPEN∆Post1×[6]ratio
[81]  
[82]          ratio←1⌊(+⌿+⌿+⌿+⌿+⌿+⌿TPEN∆NRA) CDIV +⌿+⌿+⌿+⌿+⌿+⌿TPEN∆NRA1
[83]           TPEN∆NRA← TPEN∆NRA1×[6]ratio ⋄  STPEN∆NRA← STPEN∆NRA1×[6]ratio
[84]  
[85]          :if IsAccrued
[86]              RETTPEN←TPEN ⋄ RETSTPEN←STPEN
[87]          :else ⍝ Now select ER after applying ER Factors if not Accrued
[88]              ratio←1⌊(+⌿+⌿+⌿+⌿ERPEN) CDIV +⌿+⌿+⌿+⌿ERPEN1
[89]              RETTPEN←TPEN1×[6]ratio ⋄ RETSTPEN←STPEN1×[6]ratio
[90]          :endif
[91]  
[92]          ratio←1⌊(+⌿+⌿+⌿+⌿+⌿+⌿ILLTPEN+PROSPEN×ILLFRAC) CDIV +⌿+⌿+⌿+⌿+⌿+⌿ILLTPEN1+PROSPEN1×ILLFRAC
[93]          ILLTPEN←ILLTPEN1×[6]ratio ⋄ ILLSTPEN←ILLSTPEN1×[6]ratio
[94]          :if ILLIND∊2 3 ⋄ PROSPEN←PROSPEN1×[6]ratio ⋄ SPROSPEN←SPROSPEN1×[6]ratio ⋄ :endif
[95]  
[96]          ratio←1⌊(+⌿+⌿+⌿+⌿+⌿+⌿DTPEN+(WOBAS∊4 5)×DPROSPEN) CDIV +⌿+⌿+⌿+⌿+⌿+⌿DTPEN1+(WOBAS∊4 5)×DPROSPEN1
[97]          DTPEN←DTPEN1×[6]ratio
[98]          :if WOBAS∊4 5 ⋄ DPROSPEN←DPROSPEN1×[6]ratio ⋄ :endif
[99]  
[100]     :else ⍝ Non-Uniform Cap Accrual
[101]         totdiff←diff←0⌊(+⌿+⌿+⌿+⌿+⌿+⌿     TPEN)-+⌿+⌿+⌿+⌿+⌿+⌿     TPEN1 ⍝ Cap - Benefit (keep the negatives)
[102]         ct←2 ⋄      TPEN←     TPEN1 ⋄      STPEN←     STPEN1
[103]         :while ∨/0≠diff ⍝ Apply reduction to FS first, then remaining to PS
[104]             ratio←(0⌈diff++⌿+⌿+⌿+⌿+⌿     TPEN1[;ct;;;;;]) CDIV +⌿+⌿+⌿+⌿+⌿     TPEN1[;ct;;;;;]
[105]                  TPEN[;ct;;;;;]←     TPEN1[;ct;;;;;]×[5]ratio ⋄      STPEN[;ct;;;;;]←     STPEN1[;ct;;;;;]×[5]ratio
[106]             diff←  0⌊diff++⌿+⌿+⌿+⌿+⌿     TPEN1[;ct;;;;;]
[107]             :if 0>ct←ct-1 ⋄ :leave ⋄ :endif
[108]         :endwhile
[109] 
[110] ⍝⍝⍝        diff←totdiff ⍝ Should we use difference between Total Benefits??? FIXME ???
[111]         diff←0⌊(+⌿+⌿+⌿+⌿+⌿+⌿TPEN∆Post)-+⌿+⌿+⌿+⌿+⌿+⌿TPEN∆Post1
[112]         ct←2 ⋄ TPEN∆Post←TPEN∆Post1 ⋄ STPEN∆Post←STPEN∆Post1
[113]         :while ∨/0≠diff ⍝ Apply reduction to FS first, then remaining to PS
[114]             ratio←(0⌈diff++⌿+⌿+⌿+⌿+⌿TPEN∆Post1[;ct;;;;;]) CDIV +⌿+⌿+⌿+⌿+⌿TPEN∆Post1[;ct;;;;;]
[115]             TPEN∆Post[;ct;;;;;]←TPEN∆Post1[;ct;;;;;]×[5]ratio ⋄ STPEN∆Post[;ct;;;;;]←STPEN∆Post1[;ct;;;;;]×[5]ratio
[116]             diff←  0⌊diff++⌿+⌿+⌿+⌿+⌿TPEN∆Post1[;ct;;;;;]
[117]             :if 0>ct←ct-1 ⋄ :leave ⋄ :endif
[118]         :endwhile
[119] 
[120]         diff←0⌊(+⌿+⌿+⌿+⌿+⌿+⌿ TPEN∆NRA)-+⌿+⌿+⌿+⌿+⌿+⌿ TPEN∆NRA1
[121]         ct←2 ⋄  TPEN∆NRA← TPEN∆NRA1 ⋄  STPEN∆NRA← STPEN∆NRA1
[122]         :while ∨/0≠diff ⍝ Apply reduction to FS first, then remaining to PS
[123]             ratio←(0⌈diff++⌿+⌿+⌿+⌿+⌿ TPEN∆NRA1[;ct;;;;;]) CDIV +⌿+⌿+⌿+⌿+⌿ TPEN∆NRA1[;ct;;;;;]
[124]              TPEN∆NRA[;ct;;;;;]← TPEN∆NRA1[;ct;;;;;]×[5]ratio ⋄  STPEN∆NRA[;ct;;;;;]← STPEN∆NRA1[;ct;;;;;]×[5]ratio
[125]             diff←  0⌊diff++⌿+⌿+⌿+⌿+⌿ TPEN∆NRA1[;ct;;;;;]
[126]             :if 0>ct←ct-1 ⋄ :leave ⋄ :endif
[127]         :endwhile
[128] 
[129]         :if IsAccrued
[130]             RETTPEN←TPEN ⋄ RETSTPEN←STPEN
[131]         :else ⍝ Now select ER after applying ER Factors if not Accrued
[132]             diff←0⌊(+⌿+⌿+⌿+⌿ERPEN)-+⌿+⌿+⌿+⌿ERPEN1
[133]             ct←2 ⋄ RETTPEN←TPEN1 ⋄ RETSTPEN←STPEN1
[134]             :while ∨/0≠diff ⍝ Apply reduction to FS first, then remaining to PS
[135]                 ratio←(0⌈diff++⌿+⌿+⌿ERPEN1[;ct;;;]) CDIV +⌿+⌿+⌿ERPEN1[;ct;;;]
[136]                 RETTPEN[;ct;;;;;]←TPEN1[;ct;;;;;]×[5]ratio ⋄ RETSTPEN[;ct;;;;;]←STPEN1[;ct;;;;;]×[5]ratio
[137]                 diff←  0⌊diff++⌿+⌿+⌿ERPEN1[;ct;;;]
[138]                 :if 0>ct←ct-1 ⋄ :leave ⋄ :endif
[139]             :endwhile
[140]         :endif
[141] 
[142]         bens←NX↑ENX_1/1 ⍝ Limit the DIS/IH benefits tested
[143] 
[144]         ⍝ Now select IH, including prospective
[145]         diff←bens×0⌊(+⌿+⌿+⌿+⌿+⌿+⌿ILLTPEN+PROSPEN×ILLFRAC)-+⌿+⌿+⌿+⌿+⌿+⌿ILLTPEN1+PROSPEN1×ILLFRAC
[146]         ILLTPEN←ILLTPEN1 ⋄ ILLSTPEN←ILLSTPEN1
[147]         :if ILLIND∊2 3 ⋄ PROSPEN←PROSPEN1 ⋄ SPROSPEN←SPROSPEN1 ⋄ :endif
[148]         :if ∨/0≠diff
[149]             :if ILLIND∊2 3
[150]                 ratio←(   0⌈diff++⌿+⌿+⌿+⌿+⌿+⌿PROSPEN1×ILLFRAC) CDIV +⌿+⌿+⌿+⌿+⌿+⌿PROSPEN1×ILLFRAC
[151]                 PROSPEN←PROSPEN1×[6]ratio ⋄ SPROSPEN←SPROSPEN1×[6]ratio
[152]                 diff←bens×0⌊diff++⌿+⌿+⌿+⌿+⌿+⌿PROSPEN1×ILLFRAC
[153]             :endif
[154] 
[155]             ct←2
[156]             :while ∨/0≠diff ⍝ Apply reduction to FS first, then remaining to PS
[157]                 ratio←(   0⌈diff++⌿+⌿+⌿+⌿+⌿ILLTPEN1[;ct;;;;;]) CDIV +⌿+⌿+⌿+⌿+⌿ILLTPEN1[;ct;;;;;]
[158]                 ILLTPEN[;ct;;;;;]←ILLTPEN1[;ct;;;;;]×[5]ratio ⋄ ILLSTPEN[;ct;;;;;]←ILLSTPEN1[;ct;;;;;]×[5]ratio
[159]                 diff←bens×0⌊diff++⌿+⌿+⌿+⌿+⌿ILLTPEN1[;ct;;;;;]
[160]                 :if 0>ct←ct-1 ⋄ :leave ⋄ :endif
[161]             :endwhile
[162]         :endif
[163] 
[164]         ⍝ Now select DIS, including prospective
[165]         diff←bens×0⌊(+⌿+⌿+⌿+⌿+⌿+⌿DTPEN+(WOBAS∊4 5)×DPROSPEN)-+⌿+⌿+⌿+⌿+⌿+⌿DTPEN1+(WOBAS∊4 5)×DPROSPEN1
[166]         DTPEN←DTPEN1
[167]         :if WOBAS∊4 5 ⋄ DPROSPEN←DPROSPEN1 ⋄ :endif
[168]         :if ∨/0≠diff
[169]             :if WOBAS∊4 5
[170]                 ratio←(   0⌈diff++⌿+⌿+⌿+⌿+⌿+⌿DPROSPEN1) CDIV +⌿+⌿+⌿+⌿+⌿+⌿DPROSPEN1
[171]                 DPROSPEN←DPROSPEN1×[6]ratio
[172]                 diff←bens×0⌊diff++⌿+⌿+⌿+⌿+⌿+⌿DPROSPEN1
[173]             :endif
[174] 
[175]             ct←2
[176]             :while ∨/0≠diff ⍝ Apply reduction to FS first, then remaining to PS
[177]                 ratio←(   0⌈diff++⌿+⌿+⌿+⌿+⌿DTPEN1[;ct;;;;;]) CDIV +⌿+⌿+⌿+⌿+⌿DTPEN1[;ct;;;;;]
[178]                 DTPEN[;ct;;;;;]←DTPEN1[;ct;;;;;]×[5]ratio
[179]                 diff←bens×0⌊diff++⌿+⌿+⌿+⌿+⌿DTPEN1[;ct;;;;;]
[180]                 :if 0>ct←ct-1 ⋄ :leave ⋄ :endif
[181]             :endwhile
[182]         :endif
[183]     :endif
[184] 
[185]     ⍝ PPF∆DIDTPEN is not adjusted for PPFADJ and so the test may be different (Cap not accrued uniformly)
[186]     ratio←1⌊(+⌿+⌿+⌿+⌿+⌿+⌿PPF∆DIDTPEN) CDIV +⌿+⌿+⌿+⌿+⌿+⌿PPF∆DIDTPEN1
[187]     PPF∆DIDTPEN←PPF∆DIDTPEN1×[6]ratio
[188] 
[189]     :if ~IsAccrued ⋄ ProRate∆pp←ProRate∆pp1 ⋄ :endif
[190] ⍝⍝⍝    :if ~IsAccrued ⋄ :andif ~bGAD ??? ⋄ ProRate∆pp←ProRate∆pp1 ⋄ :endif ⍝⍝⍝ FIXME for Alternate Slices (insert ProRate∆RServ←)
[191] :endif
[192] 
[193] :if PHI ⋄ INIT∆PHIAltSLICES ⋄ :endif
    ∇
