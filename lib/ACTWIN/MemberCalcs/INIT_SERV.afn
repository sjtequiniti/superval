    ∇ INIT∆SERV;VDATES[1]   ⍝ ACTWIN.sf#3[2]   :if ClntCode=4[3]       ⍝ GEC Factors[4]       GTEE1∆GEC←zwb GTEE1GEC ⋄ GTEE2∆GEC←zwb GTEE2GEC[5]       WITH∆GEC←NRA∆GEC←RET60∆GEC←3⍴0[6]   :endif[7]   ⍝ Initialise Service Variables[8]   :if X0>LRA ⍝⍝⍝ ⌈SPA ⍝ Cope with late retirements[9]       NAME←'#',NAME[10]      LRD←NRD←ValDATE ⋄ DOB←ValDATE-0 0,LRA ⍝⍝⍝ ⋄ XMP←LRA ⍝⍝ Ugh!![11]  :endif[12]  LDATE←(ENX_1⌿ldate) OVER (1+LNX)⌿MATRIX ValDATE[13]  LDATE  [⍳ENX_1;2]←LDATE  [⍳ENX_1;2]+⍳ENX_1[14]  LDATE[ENX_1+⍳LNX+1;]←(LNX+1)⌿MATRIX NRD DATEMAX ValDATE×~bGAD ⍝⍝⍝ FIXME[15]  :if servind[16]      :if IsAccrued[17]          LDATE[ENX_1+⍳LNX+1;2]←LDATE[ENX_1+⍳LNX+1;2]+(LNX+1)OVERTAKE⍳1+LNX-SNX ⋄ LDATE[ENX_1+⍳LNX+1;]←                NRD DATEMAX LDATE[ENX_1+⍳LNX+1;][18]  ⍝⍝⍝        LDATE[ENX_1+⍳LNX+1;2]←LDATE[ENX_1+⍳LNX+1;2]+(LNX+1)OVERTAKE⍳1+LNX-SNX ⋄ LDATE[ENX_1+⍳LNX+1;]←ValDATE DATEMAX NRD DATEMAX LDATE[ENX_1+⍳LNX+1;] FIXME[19]      :else[20]          LDATE[ENX_1+⍳LNX+1; ]←ValDATE DATEMAX ((LNX+1)⌿MATRIX LRD[0 1]),(LNX+1) OVERTAKE LRD[2]-⌽⍳1+LNX-SNX[21]      :endif[22]  :endif[23]  [24]  XS←SPA⌈X ⋄ XL←SPA⌈NRA∆G ⋄ XR←NRA⌈X ⍝⍝⍝ Previously: XL←SPA⌈bGAD⊃NRA NRA∆G[25]  ⍝ Initialise accumulator variables[26]  DYNPEN←NDYNPEN←LDYNPEN←DYN4PEN←0[27]  FDYNPEN←FNDYNPEN←FLDYNPEN←FDYN4PEN←TOTSRVM←ITOTSRVM←DTOTSRVM←0[28]  PROSPENN←PROSPEND←PROSPENL←PROSPEN4←FPROSPENN←FPROSPEND←FPROSPENL←FPROSPEN4←DPROSPENN←DPROSPEND←DPROSPENL←DPROSPEN4←FDPROSPENN←FDPROSPEND←FDPROSPENL←FDPROSPEN4←0[29]  ACCPEN0←TOTPEN0←0[30]  [31]  ⍝ Cash factors for adjusting IRPEN if cash on-top[32]  :if ~IsAccrued ⋄ :orif ppf[33]      :if COMValBas∨COMAdjbyEx[34]          :if COMValBas[35]              (CASHFAC1 CASHFAC2 CASHFAC3 CASHFAC4)←COMValpc CommTabCalc SelSex 'CR' COMValmsk[36]          :elseif COMAdjbyEx ⍝ Adjust Commutation Factors for Ex improvement[37]              (CASHFAC1 CASHFAC2 CASHFAC3 CASHFAC4)←(NX↑¨X0↓¨COMTAB1 COMTAB2 COMTAB3 COMTAB4) CommTabMIAdj 'R' QXret∆l PMORTIMPR PostImpM[38]          :endif[39]          COMTAB1∆G←(NRA↑0,NRA PREP∆RATE COMTAB1∆GMP),NRA↓COMTAB1∆GMP←(-1+X0⌈LatestRA)↑(↑CASHFAC1),CASHFAC1[40]          COMTAB2∆G←(NRA↑0,NRA PREP∆RATE COMTAB2∆GMP),NRA↓COMTAB2∆GMP←(-1+X0⌈LatestRA)↑(↑CASHFAC2),CASHFAC2[41]          COMTAB3∆G←(NRA↑0,NRA PREP∆RATE COMTAB3∆GMP),NRA↓COMTAB3∆GMP←(-1+X0⌈LatestRA)↑(↑CASHFAC3),CASHFAC3[42]          COMTAB4∆G←(NRA↑0,NRA PREP∆RATE COMTAB4∆GMP),NRA↓COMTAB4∆GMP←(-1+X0⌈LatestRA)↑(↑CASHFAC4),CASHFAC4[43]          ⍝ Withdrawal/Accrued Benefits Commutation Factors[44]          COMTAB1∆GMP←(NRA∆G/COMTAB1∆G[NRA∆G]),NRA∆G↓COMTAB1∆GMP ⋄ COMTAB1∆G←(NRA∆G/COMTAB1∆G[NRA∆G]),NRA∆G↓COMTAB1∆G[45]          COMTAB2∆GMP←(NRA∆G/COMTAB2∆G[NRA∆G]),NRA∆G↓COMTAB2∆GMP ⋄ COMTAB2∆G←(NRA∆G/COMTAB2∆G[NRA∆G]),NRA∆G↓COMTAB2∆G[46]          COMTAB3∆GMP←(NRA∆G/COMTAB3∆G[NRA∆G]),NRA∆G↓COMTAB3∆GMP ⋄ COMTAB3∆G←(NRA∆G/COMTAB3∆G[NRA∆G]),NRA∆G↓COMTAB3∆G[47]          COMTAB4∆GMP←(NRA∆G/COMTAB4∆G[NRA∆G]),NRA∆G↓COMTAB4∆GMP ⋄ COMTAB4∆G←(NRA∆G/COMTAB4∆G[NRA∆G]),NRA∆G↓COMTAB4∆G[48]      :else[49]          CASHFAC1←NX↑(NX-GNX)↑X0↓(1+X0⌈LatestRA)↑COMTAB1[50]          CASHFAC2←NX↑(NX-GNX)↑X0↓(1+X0⌈LatestRA)↑COMTAB2[51]          CASHFAC3←NX↑(NX-GNX)↑X0↓(1+X0⌈LatestRA)↑COMTAB3[52]          CASHFAC4←NX↑(NX-GNX)↑X0↓(1+X0⌈LatestRA)↑COMTAB4[53]      :endif[54]  :endif[55]  [56]  ⍝⍝⍝ :if test[57]  ⍝⌿⍝    VARDESC INIT∆VARPRINT TotNumVars OVER CharVars OVER DateVars[58]  ⍝⍝⍝    :if TEST≠3[59]  ⍝⌿⍝    VDATES←(NX,3)⍴ValDATE ⋄ VDATES[;2]←VDATES[;2]+⍳NX[60]  ⍝⌿⍝    AUDIT '  19'[61]  ⍝⍝⍝    :endif[62]  ⍝⍝⍝ :endif[63]  [64]  :if ~0∊⍴SSDIH ⋄ ssdih←⍎SSDIH ⋄ :endif[65]  :if ~0∊⍴SFDIH ⋄ sfdih←⍎SFDIH ⋄ :endif[66]  :if ~0∊⍴CareServ ⋄ CAREServ←⍎CareServ ⋄ :endif[67]  DOEQS←(NX,3)⍴⍎DoEqS    ∇