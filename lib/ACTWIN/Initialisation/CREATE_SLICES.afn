    ∇ CREATE∆SLICES;z[1]   ⍝ ACTWIN.sf#2[2]   ⍝ Assign all the Slices Variables[3]   [4]   ldate←VDATE+0 6 0 ⋄ ldate←ldate+0 ¯12 1×ldate[1]>12[5]   ⍎(~DATECHECK ldate)/'ldate[0]←ldate[0]-1 ⋄ →⎕lc'[6]   ldate←MATRIX ldate[7]   [8]   ⍝ Normal Slices[9]   NoSlices←↑⍴SliceDesc[10]  z←^/' '=STDate←ConvertDates ↑⌽'Date' SwapRelFields lrSTDATE STDATE ⋄ STDate←⎕split STDate,z\z/'⍬'[11]  MINSDAT←MATRIX 'DD/MM/YYYY' DATEEXP MINSDAT[12]  z←^/' '=FNDate←ConvertDates ↑⌽'Date' SwapRelFields lrFNDATE FNDATE ⋄ FNDate←⎕split FNDate,z\z/'⍬'[13]  :if ∨/z←∨/' '≠MAXFDAT ⋄ MAXFDAT←z⍀MATRIX 'DD/MM/YYYY' DATEEXP z⌿MAXFDAT ⋄ z←~z ⋄ MAXFDAT[z/⍳↑⍴MAXFDAT;]←z⌿NoSlices⌿MATRIX 99 99 9999[14]  :else                 ⋄ MAXFDAT←NoSlices⌿MATRIX 99 99 9999[15]  :endif[16]  :if ∨/z←^/' '=SERVRND←SelectRounding SERVRND[17]      :for z :in z/⍳⍴z ⋄ SERVRND[z;]←servrnd ⋄ :endfor[18]  :endif[19]  z←^/' '=AddYrs←'Act' DescToVariableUK ADDYRS ⋄ AddYrs←AddYrs,z\z/'0'[20]  SERVINDM←,'Y'=1↑[1]SERVINDM[21]  [22]  REVDEFIND←('' 'Rate 1' 'Rate 2' 'Rate 3')⍳m2n REVDEFIND[23]  DYNIND←,' MS34'[('' 'Main Pension' 'Special Pension' 'Pension Increase 3' 'Pension Increase 4')⍳m2n DYNIND][24]  IRIND←,'Y'=1↑[1]IRIND[25]  UPINSLIND←,'Y'=1↑[1]UPINSLIND[26]  :if CAREFutAcc←'C'=↑ACCBASIS←,1↑[1]ACCBASIS[27]      STDate[0]←⊂'VDATE' ⋄ FNDate[0]←⊂'LDATE' ⍝ Default Dates for CARE[28]  :endif[29]  BARBIND←1+∨/'ERF2'⍷BARBIND[30]  :if bGAD ⋄ CAREInc←~,'N'=1↑[1]CAREInc[31]  :else    ⋄ CAREInc←NoSlices OVERTAKE 0 1[32]  :endif[33]  WARFrac2←⊃(⊂WARFRAC,' '),¨⎕split WARFRAC2[34]  [35]  :if ppf[36]      PPFPAYINCA←,(⍕1⌈('' 'Pre 97' '97 to 09' 'Post 09')⍳m2n PPFPAYINCA)~' '[37]      PPFNRA←,MatrixZWB PPFNRA[38]  :endif[39]  [40]  SALCOD←(SAL_TLU SALCOD1),(SAL_TLU SALCOD2),[0.5]SAL_TLU SALCOD3[41]  z←^/' '=ACCMLT1 ⋄ ACCMLT←      ,     ZWB ACCMLT1,z\z/'⍬'[42]  z←^/' '=ACCMLT2 ⋄ ACCMLT←ACCMLT,[0.5]ZWB ACCMLT2,z\z/'⍬'[43]  z←^/' '=ACCMLT3 ⋄ ACCMLT←ACCMLT,     ZWB ACCMLT3,z\z/'⍬'[44]  z←^/' '=ACCDIV1 ⋄ ACCDIV←      ,     ZWB ACCDIV1,z\z/'⍬'[45]  z←^/' '=ACCDIV2 ⋄ ACCDIV←ACCDIV,[0.5]ZWB ACCDIV2,z\z/'⍬'[46]  z←^/' '=ACCDIV3 ⋄ ACCDIV←ACCDIV,     ZWB ACCDIV3,z\z/'⍬'[47]  [48]  z←^/' '=ACCDATA1←'Act' DescToVariableUK ACCDATA1 ⋄ AccData←             ⎕split ACCDATA1,z\z/'⍬'[49]  z←^/' '=ACCDATA2←'Act' DescToVariableUK ACCDATA2 ⋄ AccData←AccData,[0.5]⎕split ACCDATA2,z\z/'⍬'[50]  z←^/' '=ACCDATA3←'Act' DescToVariableUK ACCDATA3 ⋄ AccData←AccData,     ⎕split ACCDATA3,z\z/'⍬'[51]  [52]  ASTAB←(NoSlices,3)⍴⊂⍬[53]  :for z :in z/⍳⍴z←∨/' '≠ASTAB1 ⋄ ASTAB[z;0]←⊂lra OVERTAKE ¯1 DEC∆CHECK ASTAB1[z;] ⋄ :endfor[54]  :for z :in z/⍳⍴z←∨/' '≠ASTAB2 ⋄ ASTAB[z;1]←⊂lra OVERTAKE ¯1 DEC∆CHECK ASTAB2[z;] ⋄ :endfor[55]  :for z :in z/⍳⍴z←∨/' '≠ASTAB3 ⋄ ASTAB[z;2]←⊂lra OVERTAKE ¯1 DEC∆CHECK ASTAB3[z;] ⋄ :endfor[56]  [57]  ARTAB∆xt←(2↑[1]ARTAB1)[;,1],(2↑[1]ARTAB2)[;,1],(2↑[1]ARTAB3)[;,1][58]  ARTAB←(NoSlices,3)⍴⊂⍬[59]  :for z :in z/⍳⍴z←∨/' '≠ARTAB1 ⋄ ARTAB[z;0]←⊂100↑¯1 DEC∆CHECK ARTAB1[z;] ⋄ :endfor[60]  :for z :in z/⍳⍴z←∨/' '≠ARTAB2 ⋄ ARTAB[z;1]←⊂100↑¯1 DEC∆CHECK ARTAB2[z;] ⋄ :endfor[61]  :for z :in z/⍳⍴z←∨/' '≠ARTAB3 ⋄ ARTAB[z;2]←⊂100↑¯1 DEC∆CHECK ARTAB3[z;] ⋄ :endfor[62]  [63]  SRATAB←(NoSlices,3)⍴⊂⍬[64]  :for z :in z/⍳⍴z←∨/' '≠SRATAB1 ⋄ SRATAB[z;0]←⊂lra OVERTAKE ¯1 DEC∆CHECK SRATAB1[z;] ⋄ :endfor[65]  :for z :in z/⍳⍴z←∨/' '≠SRATAB2 ⋄ SRATAB[z;1]←⊂lra OVERTAKE ¯1 DEC∆CHECK SRATAB2[z;] ⋄ :endfor[66]  :for z :in z/⍳⍴z←∨/' '≠SRATAB3 ⋄ SRATAB[z;2]←⊂lra OVERTAKE ¯1 DEC∆CHECK SRATAB3[z;] ⋄ :endfor[67]  [68]  z←^/' '=FIXPEN1←'Act' DescToVariableUK FIXPEN1 ⋄ FixPEN←            ⎕split FIXPEN1,z\z/'⍬'[69]  z←^/' '=FIXPEN2←'Act' DescToVariableUK FIXPEN2 ⋄ FixPEN←FixPEN,[0.5]⎕split FIXPEN2,z\z/'⍬'[70]  z←^/' '=FIXPEN3←'Act' DescToVariableUK FIXPEN3 ⋄ FixPEN←FixPEN,     ⎕split FIXPEN3,z\z/'⍬'[71]  [72]  z←^/' '=MINPEN1←'Act' DescToVariableUK MINPEN1 ⋄ MinPEN←            ⎕split MINPEN1,z\z/'⍬'[73]  z←^/' '=MINPEN2←'Act' DescToVariableUK MINPEN2 ⋄ MinPEN←MinPEN,[0.5]⎕split MINPEN2,z\z/'⍬'[74]  z←^/' '=MINPEN3←'Act' DescToVariableUK MINPEN3 ⋄ MinPEN←MinPEN,     ⎕split MINPEN3,z\z/'⍬'[75]  [76]  z←^/' '=MAXPEN1←'Act' DescToVariableUK MAXPEN1 ⋄ MaxPEN←            ⎕split MAXPEN1,z\z/'⍬'[77]  z←^/' '=MAXPEN2←'Act' DescToVariableUK MAXPEN2 ⋄ MaxPEN←MaxPEN,[0.5]⎕split MAXPEN2,z\z/'⍬'[78]  z←^/' '=MAXPEN3←'Act' DescToVariableUK MAXPEN3 ⋄ MaxPEN←MaxPEN,     ⎕split MAXPEN3,z\z/'⍬'[79]  [80]  PENADJ1←ProcessNumerics¨spin m2n¨sCEN_PENADJ1 PENADJ1 ⋄ PENAdj←             PENADJ1[81]  PENADJ2←ProcessNumerics¨spin m2n¨sCEN_PENADJ2 PENADJ2 ⋄ PENAdj← PENAdj OVER PENADJ2[82]  PENADJ3←ProcessNumerics¨spin m2n¨sCEN_PENADJ3 PENADJ3 ⋄ PENAdj←⍉PENAdj OVER PENADJ3[83]  [84]  DeductTier←(NoSlices,3)⍴0 ⋄ DeductTier[;1]←'Y'=1↑[1]DeductTier12 ⋄ DeductTier[;2]←('Y'=1↑[1]DeductTier13)+('Y'=1↑[1]DeductTier23)[85]  [86]  :if ppf[87]      PPFADJ1←ProcessNumerics¨spin m2n¨sCEN_PPFADJ1 PPFADJ1 ⋄ PPFAdj←             PPFADJ1[88]      PPFADJ2←ProcessNumerics¨spin m2n¨sCEN_PPFADJ2 PPFADJ2 ⋄ PPFAdj← PPFAdj OVER PPFADJ2[89]      PPFADJ3←ProcessNumerics¨spin m2n¨sCEN_PPFADJ3 PPFADJ3 ⋄ PPFAdj←⍉PPFAdj OVER PPFADJ3[90]  :endif[91]  [92]  :if NoAltSlices←×AltSw ⍝ Alternate Slices[93]      NoAltSlices←↑⍴AltSliceDesc[94]      z←^/' '=AltSTDate←ConvertDates ↑⌽'Date' SwapRelFields lrAltSTDATE AltSTDATE ⋄ AltSTDate←⎕split AltSTDate,z\z/'⍬'[95]      AltMINSDAT←MATRIX 'DD/MM/YYYY' DATEEXP AltMINSDAT[96]      z←^/' '=AltFNDate←ConvertDates ↑⌽'Date' SwapRelFields lrAltFNDATE AltFNDATE ⋄ AltFNDate←⎕split AltFNDate,z\z/'⍬'[97]      :if ∨/z←∨/' '≠AltMAXFDAT ⋄ AltMAXFDAT←z⍀MATRIX 'DD/MM/YYYY' DATEEXP z⌿AltMAXFDAT ⋄ z←~z ⋄ AltMAXFDAT[z/⍳↑⍴AltMAXFDAT;]←z⌿NoAltSlices⌿MATRIX 99 99 9999[98]      :else                    ⋄ AltMAXFDAT←NoAltSlices⌿MATRIX 99 99 9999[99]      :endif[100]     :if ∨/z←^/' '=AltSERVRND←SelectRounding AltSERVRND[101]         :for z :in z/⍳⍴z ⋄ AltSERVRND[z;]←servrnd ⋄ :endfor[102]     :endif[103]     z←^/' '=AltAddYrs←'Act' DescToVariableUK AltADDYRS ⋄ AltAddYrs←AltAddYrs,z\z/'0'[104]     AltSERVINDM←,'Y'=1↑[1]AltSERVINDM[105] [106]     AltREVDEFIND←('' 'Rate 1' 'Rate 2' 'Rate 3')⍳m2n AltREVDEFIND[107]     AltDYNIND←,' MS34'[('' 'Main Pension' 'Special Pension' 'Pension Increase 3' 'Pension Increase 4')⍳m2n AltDYNIND][108]     AltIRIND←,'Y'=1↑[1]AltIRIND[109]     AltUPINSLIND←,'Y'=1↑[1]AltUPINSLIND[110]     :if 'C'=↑AltACCBASIS←,1↑[1]AltACCBASIS[111]         AltSTDate[0]←⊂'VDATE' ⋄ AltFNDate[0]←⊂'LDATE' ⍝ Default Dates for CARE[112]     :endif[113]     AltBARBIND←1+∨/'ERF2'⍷AltBARBIND[114]     :if bGAD ⋄ AltCAREInc←~,'N'=1↑[1]AltCAREInc[115]     :else    ⋄ AltCAREInc←NoAltSlices OVERTAKE 0 1[116]     :endif[117]     AltWARFrac2←⊃(⊂WARFRAC,' '),¨⎕split AltWARFRAC2[118] [119]     :if ppf[120]         AltPPFPAYINCA←,(⍕1⌈('' 'Pre 97' '97 to 09' 'Post 09')⍳m2n AltPPFPAYINCA)~' '[121]         AltPPFNRA←,MatrixZWB AltPPFNRA[122]     :endif[123] [124]     AltSALCOD←(SAL_TLU AltSALCOD1),(SAL_TLU AltSALCOD2),[0.5]SAL_TLU AltSALCOD3[125]     z←^/' '=AltACCMLT1 ⋄ AltACCMLT←         ,     ZWB AltACCMLT1,z\z/'⍬'[126]     z←^/' '=AltACCMLT2 ⋄ AltACCMLT←AltACCMLT,[0.5]ZWB AltACCMLT2,z\z/'⍬'[127]     z←^/' '=AltACCMLT3 ⋄ AltACCMLT←AltACCMLT,     ZWB AltACCMLT3,z\z/'⍬'[128]     z←^/' '=AltACCDIV1 ⋄ AltACCDIV←         ,     ZWB AltACCDIV1,z\z/'⍬'[129]     z←^/' '=AltACCDIV2 ⋄ AltACCDIV←AltACCDIV,[0.5]ZWB AltACCDIV2,z\z/'⍬'[130]     z←^/' '=AltACCDIV3 ⋄ AltACCDIV←AltACCDIV,     ZWB AltACCDIV3,z\z/'⍬'[131] [132]     z←^/' '=AltACCDATA1←'Act' DescToVariableUK AltACCDATA1 ⋄ AltAccData←                ⎕split AltACCDATA1,z\z/'⍬'[133]     z←^/' '=AltACCDATA2←'Act' DescToVariableUK AltACCDATA2 ⋄ AltAccData←AltAccData,[0.5]⎕split AltACCDATA2,z\z/'⍬'[134]     z←^/' '=AltACCDATA3←'Act' DescToVariableUK AltACCDATA3 ⋄ AltAccData←AltAccData,     ⎕split AltACCDATA3,z\z/'⍬'[135] [136]     AltASTAB←(NoAltSlices,3)⍴⊂⍬[137]     :for z :in z/⍳⍴z←∨/' '≠AltASTAB1 ⋄ AltASTAB[z;0]←⊂lra OVERTAKE ¯1 DEC∆CHECK AltASTAB1[z;] ⋄ :endfor[138]     :for z :in z/⍳⍴z←∨/' '≠AltASTAB2 ⋄ AltASTAB[z;1]←⊂lra OVERTAKE ¯1 DEC∆CHECK AltASTAB2[z;] ⋄ :endfor[139]     :for z :in z/⍳⍴z←∨/' '≠AltASTAB3 ⋄ AltASTAB[z;2]←⊂lra OVERTAKE ¯1 DEC∆CHECK AltASTAB3[z;] ⋄ :endfor[140] [141]     AltARTAB∆xt←(2↑[1]AltARTAB1)[;,1],(2↑[1]AltARTAB2)[;,1],(2↑[1]AltARTAB3)[;,1][142]     AltARTAB←(NoAltSlices,3)⍴⊂⍬[143]     :for z :in z/⍳⍴z←∨/' '≠AltARTAB1 ⋄ AltARTAB[z;0]←⊂100↑¯1 DEC∆CHECK AltARTAB1[z;] ⋄ :endfor[144]     :for z :in z/⍳⍴z←∨/' '≠AltARTAB2 ⋄ AltARTAB[z;1]←⊂100↑¯1 DEC∆CHECK AltARTAB2[z;] ⋄ :endfor[145]     :for z :in z/⍳⍴z←∨/' '≠AltARTAB3 ⋄ AltARTAB[z;2]←⊂100↑¯1 DEC∆CHECK AltARTAB3[z;] ⋄ :endfor[146] [147]     AltSRATAB←(NoAltSlices,3)⍴⊂⍬[148]     :for z :in z/⍳⍴z←∨/' '≠AltSRATAB1 ⋄ AltSRATAB[z;0]←⊂lra OVERTAKE ¯1 DEC∆CHECK AltSRATAB1[z;] ⋄ :endfor[149]     :for z :in z/⍳⍴z←∨/' '≠AltSRATAB2 ⋄ AltSRATAB[z;1]←⊂lra OVERTAKE ¯1 DEC∆CHECK AltSRATAB2[z;] ⋄ :endfor[150]     :for z :in z/⍳⍴z←∨/' '≠AltSRATAB3 ⋄ AltSRATAB[z;2]←⊂lra OVERTAKE ¯1 DEC∆CHECK AltSRATAB3[z;] ⋄ :endfor[151] [152]     z←^/' '=AltFIXPEN1←'Act' DescToVariableUK AltFIXPEN1 ⋄ AltFixPEN←               ⎕split AltFIXPEN1,z\z/'⍬'[153]     z←^/' '=AltFIXPEN2←'Act' DescToVariableUK AltFIXPEN2 ⋄ AltFixPEN←AltFixPEN,[0.5]⎕split AltFIXPEN2,z\z/'⍬'[154]     z←^/' '=AltFIXPEN3←'Act' DescToVariableUK AltFIXPEN3 ⋄ AltFixPEN←AltFixPEN,     ⎕split AltFIXPEN3,z\z/'⍬'[155] [156]     z←^/' '=AltMINPEN1←'Act' DescToVariableUK AltMINPEN1 ⋄ AltMinPEN←               ⎕split AltMINPEN1,z\z/'⍬'[157]     z←^/' '=AltMINPEN2←'Act' DescToVariableUK AltMINPEN2 ⋄ AltMinPEN←AltMinPEN,[0.5]⎕split AltMINPEN2,z\z/'⍬'[158]     z←^/' '=AltMINPEN3←'Act' DescToVariableUK AltMINPEN3 ⋄ AltMinPEN←AltMinPEN,     ⎕split AltMINPEN3,z\z/'⍬'[159] [160]     z←^/' '=AltMAXPEN1←'Act' DescToVariableUK AltMAXPEN1 ⋄ AltMaxPEN←               ⎕split AltMAXPEN1,z\z/'⍬'[161]     z←^/' '=AltMAXPEN2←'Act' DescToVariableUK AltMAXPEN2 ⋄ AltMaxPEN←AltMaxPEN,[0.5]⎕split AltMAXPEN2,z\z/'⍬'[162]     z←^/' '=AltMAXPEN3←'Act' DescToVariableUK AltMAXPEN3 ⋄ AltMaxPEN←AltMaxPEN,     ⎕split AltMAXPEN3,z\z/'⍬'[163] [164]     AltPENADJ1←ProcessNumerics¨spin m2n¨sCEN_AltPENADJ1 AltPENADJ1 ⋄ AltPENAdj←                AltPENADJ1[165]     AltPENADJ2←ProcessNumerics¨spin m2n¨sCEN_AltPENADJ2 AltPENADJ2 ⋄ AltPENAdj← AltPENAdj OVER AltPENADJ2[166]     AltPENADJ3←ProcessNumerics¨spin m2n¨sCEN_AltPENADJ3 AltPENADJ3 ⋄ AltPENAdj←⍉AltPENAdj OVER AltPENADJ3[167] [168]     AltDeductTier←(NoAltSlices,3)⍴0 ⋄ AltDeductTier[;1]←'Y'=1↑[1]AltDeductTier12 ⋄ AltDeductTier[;2]←('Y'=1↑[1]AltDeductTier13)+('Y'=1↑[1]AltDeductTier23)[169] [170]     :if ppf[171]         AltPPFADJ1←ProcessNumerics¨spin m2n¨sCEN_AltPPFADJ1 AltPPFADJ1 ⋄ AltPPFAdj←                AltPPFADJ1[172]         AltPPFADJ2←ProcessNumerics¨spin m2n¨sCEN_AltPPFADJ2 AltPPFADJ2 ⋄ AltPPFAdj← AltPPFAdj OVER AltPPFADJ2[173]         AltPPFADJ3←ProcessNumerics¨spin m2n¨sCEN_AltPPFADJ3 AltPPFADJ3 ⋄ AltPPFAdj←⍉AltPPFAdj OVER AltPPFADJ3[174]     :endif[175] :endif[176] [177] :if NoIndSlices←IndSlices ⍝ Independent Slices[178]     NoIndSlices←↑⍴IndSliceDesc[179]     z←^/' '=IndSTDate←ConvertDates ↑⌽'Date' SwapRelFields lrIndSTDATE IndSTDATE ⋄ IndSTDate←⎕split IndSTDate,z\z/'⍬'[180]     IndMINSDAT←MATRIX 'DD/MM/YYYY' DATEEXP IndMINSDAT[181]     z←^/' '=IndFNDate←ConvertDates ↑⌽'Date' SwapRelFields lrIndFNDATE IndFNDATE ⋄ IndFNDate←⎕split IndFNDate,z\z/'⍬'[182]     :if ∨/z←∨/' '≠IndMAXFDAT ⋄ IndMAXFDAT←z⍀MATRIX 'DD/MM/YYYY' DATEEXP z⌿IndMAXFDAT ⋄ z←~z ⋄ IndMAXFDAT[z/⍳↑⍴IndMAXFDAT;]←z⌿NoIndSlices⌿MATRIX 99 99 9999[183]     :else                    ⋄ IndMAXFDAT←NoIndSlices⌿MATRIX 99 99 9999[184]     :endif[185]     :if ∨/z←^/' '=IndSERVRND←SelectRounding IndSERVRND[186]         :for z :in z/⍳⍴z ⋄ IndSERVRND[z;]←servrnd ⋄ :endfor[187]     :endif[188]     z←^/' '=IndAddYrs←'Act' DescToVariableUK IndADDYRS ⋄ IndAddYrs←IndAddYrs,z\z/'0'[189]     IndPaySTART←'Act' DescToVariableUK IndPayStart[190]     IndPayEND←'Act' DescToVariableUK IndPayEnd[191] [192]     IndREVDEFIND←('' 'Rate 1' 'Rate 2' 'Rate 3')⍳m2n IndREVDEFIND[193]     IndDYNIND ←,' MS34'[('' 'Main Pension' 'Special Pension' 'Pension Increase 3' 'Pension Increase 4')⍳m2n IndDYNIND ][194]     IndDYNIND2←,' MS34'[('' 'Main Pension' 'Special Pension' 'Pension Increase 3' 'Pension Increase 4')⍳m2n IndDYNIND2][195]     IndUPINSLIND←,'Y'=1↑[1]IndUPINSLIND[196]     :if 'C'=↑IndACCBASIS←,1↑[1]IndACCBASIS[197]         IndSTDate[0]←⊂'VDATE' ⋄ IndFNDate[0]←⊂'LDATE' ⍝ Default Dates for CARE[198]     :endif[199]     IndBARBIND←1+∨/'ERF2'⍷IndBARBIND[200]     IndWARFrac2←⊃(⊂WARFRAC,' '),¨⎕split IndWARFRAC2[201] [202]     :if ppf[203]         IndPPFPAYINCA←,(⍕1⌈('' 'Pre 97' '97 to 09' 'Post 09')⍳m2n IndPPFPAYINCA)~' '[204]         IndPPFNRA←,MatrixZWB IndPPFNRA[205]     :endif[206] [207]     IndSALCOD←(SAL_TLU IndSALCOD1),(SAL_TLU IndSALCOD2),[0.5]SAL_TLU IndSALCOD3[208]     z←^/' '=IndACCMLT1 ⋄ IndACCMLT←         ,     ZWB IndACCMLT1,z\z/'⍬'[209]     z←^/' '=IndACCMLT2 ⋄ IndACCMLT←IndACCMLT,[0.5]ZWB IndACCMLT2,z\z/'⍬'[210]     z←^/' '=IndACCMLT3 ⋄ IndACCMLT←IndACCMLT,     ZWB IndACCMLT3,z\z/'⍬'[211]     z←^/' '=IndACCDIV1 ⋄ IndACCDIV←         ,     ZWB IndACCDIV1,z\z/'⍬'[212]     z←^/' '=IndACCDIV2 ⋄ IndACCDIV←IndACCDIV,[0.5]ZWB IndACCDIV2,z\z/'⍬'[213]     z←^/' '=IndACCDIV3 ⋄ IndACCDIV←IndACCDIV,     ZWB IndACCDIV3,z\z/'⍬'[214] [215]     z←^/' '=IndACCDATA1←'Act' DescToVariableUK IndACCDATA1 ⋄ IndAccData←                ⎕split IndACCDATA1,z\z/'⍬'[216]     z←^/' '=IndACCDATA2←'Act' DescToVariableUK IndACCDATA2 ⋄ IndAccData←IndAccData,[0.5]⎕split IndACCDATA2,z\z/'⍬'[217]     z←^/' '=IndACCDATA3←'Act' DescToVariableUK IndACCDATA3 ⋄ IndAccData←IndAccData,     ⎕split IndACCDATA3,z\z/'⍬'[218] [219]     IndASTAB←(NoIndSlices,3)⍴⊂⍬[220]     :for z :in z/⍳⍴z←∨/' '≠IndASTAB1 ⋄ IndASTAB[z;0]←⊂lra OVERTAKE ¯1 DEC∆CHECK IndASTAB1[z;] ⋄ :endfor[221]     :for z :in z/⍳⍴z←∨/' '≠IndASTAB2 ⋄ IndASTAB[z;1]←⊂lra OVERTAKE ¯1 DEC∆CHECK IndASTAB2[z;] ⋄ :endfor[222]     :for z :in z/⍳⍴z←∨/' '≠IndASTAB3 ⋄ IndASTAB[z;2]←⊂lra OVERTAKE ¯1 DEC∆CHECK IndASTAB3[z;] ⋄ :endfor[223] [224]     IndARTAB∆xt←(2↑[1]IndARTAB1)[;,1],(2↑[1]IndARTAB2)[;,1],(2↑[1]IndARTAB3)[;,1][225]     IndARTAB←(NoIndSlices,3)⍴⊂⍬[226]     :for z :in z/⍳⍴z←∨/' '≠IndARTAB1 ⋄ IndARTAB[z;0]←⊂100↑¯1 DEC∆CHECK IndARTAB1[z;] ⋄ :endfor[227]     :for z :in z/⍳⍴z←∨/' '≠IndARTAB2 ⋄ IndARTAB[z;1]←⊂100↑¯1 DEC∆CHECK IndARTAB2[z;] ⋄ :endfor[228]     :for z :in z/⍳⍴z←∨/' '≠IndARTAB3 ⋄ IndARTAB[z;2]←⊂100↑¯1 DEC∆CHECK IndARTAB3[z;] ⋄ :endfor[229] [230]     z←^/' '=IndFIXPEN1←'Act' DescToVariableUK IndFIXPEN1 ⋄ IndFixPEN←               ⎕split IndFIXPEN1,z\z/'⍬'[231]     z←^/' '=IndFIXPEN2←'Act' DescToVariableUK IndFIXPEN2 ⋄ IndFixPEN←IndFixPEN,[0.5]⎕split IndFIXPEN2,z\z/'⍬'[232]     z←^/' '=IndFIXPEN3←'Act' DescToVariableUK IndFIXPEN3 ⋄ IndFixPEN←IndFixPEN,     ⎕split IndFIXPEN3,z\z/'⍬'[233] [234]     z←^/' '=IndMINPEN1←'Act' DescToVariableUK IndMINPEN1 ⋄ IndMinPEN←               ⎕split IndMINPEN1,z\z/'⍬'[235]     z←^/' '=IndMINPEN2←'Act' DescToVariableUK IndMINPEN2 ⋄ IndMinPEN←IndMinPEN,[0.5]⎕split IndMINPEN2,z\z/'⍬'[236]     z←^/' '=IndMINPEN3←'Act' DescToVariableUK IndMINPEN3 ⋄ IndMinPEN←IndMinPEN,     ⎕split IndMINPEN3,z\z/'⍬'[237] [238]     z←^/' '=IndMAXPEN1←'Act' DescToVariableUK IndMAXPEN1 ⋄ IndMaxPEN←               ⎕split IndMAXPEN1,z\z/'⍬'[239]     z←^/' '=IndMAXPEN2←'Act' DescToVariableUK IndMAXPEN2 ⋄ IndMaxPEN←IndMaxPEN,[0.5]⎕split IndMAXPEN2,z\z/'⍬'[240]     z←^/' '=IndMAXPEN3←'Act' DescToVariableUK IndMAXPEN3 ⋄ IndMaxPEN←IndMaxPEN,     ⎕split IndMAXPEN3,z\z/'⍬'[241] [242]     IndPENADJ1←ProcessNumerics¨spin m2n¨sCEN_IndPENADJ1 IndPENADJ1 ⋄ IndPENAdj←                IndPENADJ1[243]     IndPENADJ2←ProcessNumerics¨spin m2n¨sCEN_IndPENADJ2 IndPENADJ2 ⋄ IndPENAdj← IndPENAdj OVER IndPENADJ2[244]     IndPENADJ3←ProcessNumerics¨spin m2n¨sCEN_IndPENADJ3 IndPENADJ3 ⋄ IndPENAdj←⍉IndPENAdj OVER IndPENADJ3[245] [246]     IndDeductTier←(NoIndSlices,3)⍴0 ⋄ IndDeductTier[;1]←'Y'=1↑[1]IndDeductTier12 ⋄ IndDeductTier[;2]←('Y'=1↑[1]IndDeductTier13)+('Y'=1↑[1]IndDeductTier23)[247] [248]     :if ppf[249]         IndPPFADJ1←ProcessNumerics¨spin m2n¨sCEN_IndPPFADJ1 IndPPFADJ1 ⋄ IndPPFAdj←                IndPPFADJ1[250]         IndPPFADJ2←ProcessNumerics¨spin m2n¨sCEN_IndPPFADJ2 IndPPFADJ2 ⋄ IndPPFAdj← IndPPFAdj OVER IndPPFADJ2[251]         IndPPFADJ3←ProcessNumerics¨spin m2n¨sCEN_IndPPFADJ3 IndPPFADJ3 ⋄ IndPPFAdj←⍉IndPPFAdj OVER IndPPFADJ3[252]     :endif[253] :endif    ∇