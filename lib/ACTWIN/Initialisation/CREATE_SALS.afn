    ∇ CREATE∆SALS;N;I;Z;∆;vars[1]   ⍝ ACTWIN.sf#2[2]   ⍝ Create Salary Definition Variables[3]   ⍝[4]   ⍝[5]   ⍝[6]   ⍝ V2.50u RE 1/11/93 Standardised[7]   [8]   salmult←(salfreq='ASQMLFW')/ 1 2 4 12 13 26.09 52.18[9]   N←↑⍴SalData←'Act' DescToVariableUK SALdata[10]  [11]  salinf←lrsalinc←(N,LatestRA+newent×projTerm)⍴1 ⋄ sxx←N⍴⊂100⍴1[12]  :if ~ValMeth≡'UCM'[13]      :for Z :in ⍳N[14]          :if ^/' '=(  SALinf,sCEN_SALinf  )[Z;] ⋄ salinf[Z;]←(LatestRA+newent×projTerm) OVERTAKE ∆←f[15]          :else                                  ⋄ salinf[Z;]←(LatestRA+newent×projTerm) OVERTAKE ∆←termAdjFin BlendRates (SALinf[Z;]) (sCEN_SALinf[Z;])[16]          :endif[17]          FinAdjTable←FinAdjTable OVER ('salinf[',(⍕Z),';]') ('SALinf[',(⍕Z),']') ∆[18]          :if ^/' '=(LRSalInc,sCEN_LRSalInc)[Z;] ⋄ lrsalinc[Z;]←(LatestRA+newent×projTerm) OVERTAKE ∆←f[19]          :else                                  ⋄ lrsalinc[Z;]←(LatestRA+newent×projTerm) OVERTAKE ∆←termAdjFin BlendRates (LRSalInc[Z;]) (sCEN_LRSalInc[Z;])[20]          :endif[21]          FinAdjTable←FinAdjTable OVER ('lrsalinc[',(⍕Z),';]') ('LRSalInc[',(⍕Z),']') ∆[22]          :if~¯1≡∆←(0 0 0) Rate∆Create ⊃SXX[;Z][23]              sxx[Z]←⊂1+100↑[2=⍴⍴∆]∆[24]          :endif[25]      :endfor[26]  :endif[27]  SALadj←,↑+/MatrixZWB¨sCEN_SALadj SALadj[28]  [29]  :if ∨/Z←0≠salind←,(salind≠3)×salind←,'CRW'⍳1↑[1]salind[30]      RevDATE←Z⍀EXECUTE Z⌿'/ ' REPL RevDATE[31]  :else[32]      RevDATE←(⍴,Z)⌿MATRIX 0 0[33]  :endif[34]  fASPERIOD←,(MatrixZWB fASPERIOD)+2×((×salind)∨×uk)×,'N'=1↑[1]SALlastinc[35]  fAScease←,'A'=1↑[1]MATRIX fAScease[36]  FasData←('Act' DescToVariableUK MATRIX FASdata),Z\(Z←^/' '=FASdata)/'0'[37]  [38]  :if uk=2 ⍝⍝⍝ uk≠0[39]      :for I :in ⍳N[40]          :if ∨/' '≠SALdedntab[I;] ⋄ SALdedn[I]←SALdedntab[I;] FACTOR VDATE ⋄ :endif[41]      :endfor[42]  :endif[43]  SalDedn←('Act' DescToVariableUK SALdedn),Z\(Z←^/' '=SALdedn)/'0'[44]  SALdednadj←,↑+/MatrixZWB¨sCEN_SALdednadj SALdednadj[45]  saldednf←(N,LatestRA+newent×projTerm)⍴1[46]  :if ~ValMeth≡'UCM'[47]      :for Z :in ⍳N ⍝ Different Defaults according to version[48]          :if ∨/' '≠(SALdednf,sCEN_SALdednf)[Z;] ⋄ saldednf[Z;]←(LatestRA+newent×projTerm) OVERTAKE ∆←termAdjFin BlendRates (SALdednf[Z;]) (sCEN_SALdednf[Z;])[49]          :elseif uk=1                           ⋄ saldednf[Z;]←salinf[Z;] ⋄ ∆←((¯1↑salinf[Z;]) DTZ salinf[Z;]),¯1↑salinf[Z;][50]          :else                                  ⋄ saldednf[Z;]←(LatestRA+newent×projTerm) OVERTAKE ∆←f[51]          :endif[52]          FinAdjTable←FinAdjTable OVER ('saldednf[',(⍕Z),';]') ('SALdednf[',(⍕Z),']') ∆[53]      :endfor[54]  :endif[55]  [56]  :if uk=2 ⍝⍝⍝ uk≠0[57]      :for I :in ⍳N[58]          :if ∨/' '≠SALmaxtab[I;] ⋄ SALmax[I]←SALmaxtab[I;] FACTOR VDATE ⋄ :endif[59]      :endfor[60]  :endif[61]  SalMax←('Act' DescToVariableUK SALmax),Z⍀(+/Z←^/' '=SALmax)⌿MATRIX '1E200'[62]  SALmaxadj←,↑+/MatrixZWB¨sCEN_SALmaxadj SALmaxadj[63]  salmaxf←(N,LatestRA+newent×projTerm)⍴1[64]  :if ~ValMeth≡'UCM'[65]      :for Z :in ⍳N ⍝ Different Defaults according to version[66]          :if ∨/' '≠(SALmaxf,sCEN_SALmaxf)[Z;] ⋄ salmaxf[Z;]←(LatestRA+newent×projTerm) OVERTAKE ∆←termAdjFin BlendRates (SALmaxf[Z;]) (sCEN_SALmaxf[Z;])[67]          :elseif uk=1                         ⋄ salmaxf[Z;]←salinf[Z;] ⋄ ∆←((¯1↑salinf[Z;]) DTZ salinf[Z;]),¯1↑salinf[Z;][68]          :else                                ⋄ salmaxf[Z;]←(LatestRA+newent×projTerm) OVERTAKE ∆←f[69]          :endif[70]          FinAdjTable←FinAdjTable OVER ('salmaxf[',(⍕Z),';]') ('SALmaxf[',(⍕Z),']') ∆[71]      :endfor[72]  :endif    ∇