    ∇ res←SAL∆INV;⎕IO;File;NUMRECS;RECN;REC;SAL;X;TOTS;tpr1;SPAGE;I;N;DJF;DJS;salmult;FSAL;AGES;NN;NO;J;A;DATE;Z;SUMMREC;DOB;DOE;NOM;H1;TAB;TABLE;GTOTS;RunTime;desc;Error;valid;z;tieno;rUNDESC;RESsave;size[1]   ⍝ INVWIN.sf#3[2]   ⍝ Sets up required global variables and creates output file and header,[3]   ⍝ ties the files in turn and does the calculations, calls PRINTSAL[4]   ⍝ to print the results for each deck, and then all decks combined[5]   ⍝[6]   ⍝ V2.50u RE 1/11/93 Standardised[7]   res←'' ⋄ ⎕IO←0 ⋄ PREPARE ⋄ I←¯1[8]   TIE:⎕NUNTIE tieno ⍝ Tieing file if available and looping through each deck[9]   →((1↑⍴FILES)=I←I+1)/FINISH ⋄ →(0=⍴File←DLTB FILES[I;])/⎕LC ⋄ →(~File NTIE tieno)/⎕LC[10]  [11]  ⍝ Screen Display[12]  ((I+1) (1↑⍴FILES) ('\' Win∆Child File)) Win∆ProgressBar 'FileUpdate'[13]  TOTS←105 2 ⍴RECN←0 ⋄ TAB[0;11+⍳47]←47↑'\' Win∆Child File[14]  NO←⌊(size←⎕NSIZE tieno)÷RECL[15]  [16]  ⍝ Set up loop(s) to read member data from file, do calculations[17]  READ:NUMRECS←↑⍴REC←'ASCII' Read∆DataFile tieno size RECL (NO-RECN) RECN[18]  [19]  RECN←RECN+NUMRECS[20]  (RECN NO) Win∆ProgressBar 'MemberUpdate'[21]  [22]  DOB←MATRIX (dfDOB (vDATE- 0 0 100)) DATEEXP REC[;fDOB][23]  [24]  ⍝ Validate Dates of Birth[25]  :if ∨/~DATECHECK DOB ⋄ Error←'InvFileDate' ⋄ →ERR ⋄ :endif[26]  [27]  A←^/REC[;fMOE]=' ' ⋄ →(0=⍴fDOE)/ENTER[28]  [29]  A←A^^/REC[;fDOE]=' ' ⋄ DOE←MATRIX (dfDOE DOB) DATEEXP REC[;fDOE][30]  ⍝ Validate Dates of Exit[31]  :if ∨/~DATECHECK (∨/' '≠REC[;fDOE])⌿DOE ⋄ Error←'InvFileDate' ⋄ →ERR ⋄ :endif[32]  [33]  A←A∨,(JUL DOE)>DATE ⍝ Only those still in force[34]  [35]  ENTER:→(0=⍴fDJS)/L1 ⋄ DJS←MATRIX (dfDJS DOB) DATEEXP REC[;fDJS][36]  ⍝ Validate Dates Joined Service[37]  :if ∨/~DATECHECK DJS ⋄ Error←'InvFileDate' ⋄ →ERR ⋄ :endif[38]  [39]  A←A^,(DJS←JUL DJS)≤DATE[40]  →servind/L1 ⋄ A←A^(,DJS≥BDATE)^,DJS≤EDATE[41]  [42]  L1:→(0=⍴fDJF)/L2 ⋄ DJF←MATRIX (dfDJF DOB) DATEEXP REC[;fDJF][43]  ⍝ Validate Dates Joined Fund[44]  :if ∨/~DATECHECK DJF ⋄ Error←'InvFileDate' ⋄ →ERR ⋄ :endif[45]  [46]  A←A^,(DJF←JUL DJF)≤DATE[47]  →(~servind)/L2 ⋄ A←A^(,DJF≥BDATE)^,DJF≤EDATE[48]  [49]  L2:z←(~^/' '=SAL)⌿SAL←REC[;FSAL][50]  :if ∨/~valid←⎕VI ,z,' ' ⍝ Numbers must be valid[51]  :orif (⍴valid)≠1↑⍴z     ⍝ and scalar![52]      Error←'InvFileNum' ⋄ →ERR[53]  :endif[54]  [55]  A←A^×SAL←salmult×MatrixZWB SAL[56]  [57]  z←(~^/' '=NOM)⌿NOM←REC[;,fNOM][58]  :if ∨/~valid←⎕VI ,z,' ' ⍝ Numbers must be valid[59]  :orif (⍴valid)≠1↑⍴z     ⍝ and scalar![60]      Error←'InvFileNum' ⋄ →ERR[61]  :endif[62]  [63]  →(0=Z←1↑⍴REC←A⌿REC)/L3 ⋄ SAL←A⌿SAL ⋄ NOM←1⌈MatrixZWB A⌿NOM[64]  X←'YN' DURN (A⌿DOB) TO CalcDATE ⋄ A←NOM,[0.5]SAL[65]  [66]  J←0 ⍝ Insert into matrix according to age and service[67]  TOTS[X[J];]←TOTS[X[J];]+A[J;] ⋄ →(Z>J←J+1)/⎕LC[68]  [69]  L3:→(RECN<NO)/READ[70]  [71]  ⍝ Work out the averages and print results[72]  GTOTS←GTOTS+TOTS ⋄ N←(N←N+1)PRINTSAL TOTS ⋄ →((~RESsave)∨1=1↑⍴FILES)/TIE[73]  (desc,' (','\' Win∆Child File,')') SAL∆SAVE TOTS ⋄ →TIE[74]  FINISH:TAB[0;11+⍳47]←47↑'All Data' ⋄ 0 0⍴3 PRINTSAL GTOTS ⍝ grand totals[75]  [76]  desc SAL∆SAVE GTOTS[77]  (desc,' at ',RunTime) BROWSE tpr1[78]  [79]  FormName ⎕wi '∆invrun' 1 ⍝ indicates called Review from Run[80]  'INVWIN' CallModule 'Snapshot_Review'[81]  FormName ⎕wi 'Focus' ⋄ →OUT[82]  [83]  ERR: ⍝ on Error Process[84]  :if FileSelections[85]     MDISPLAY Error ('\' Win∆Child ,fILENAME) ⋄ res←parent,'fData.edfILENAME'[86]  :else[87]     MDISPLAY Error ('\' Win∆Child File) ⋄ res←parent,'fData.edFILES'[88]  :endif[89]  NERASE tpr1[90]  [91]  OUT:⎕nuntie ⎕nnums,⎕xnnums  ⋄ Win∆ProgressBar 'Close'    ∇