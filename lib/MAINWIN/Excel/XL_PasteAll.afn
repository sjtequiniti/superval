    ∇ Rng XL_PasteAll Range;⎕elx;elx;noranges;range;rng;∆;MaxNo;roworcol;source;target;splits
[1]   ⍝ MAINWIN.sf#10
[2]   ⍝ Paste(All) from source "Rng" to target "Range"
[3]   ⍝  "Range" can be a "mulitiple" of the size of "Rng"
[4]   ⍝ Will retry with "Rng" and "Range" split into smaller bits
[5]   
[6]   noranges←1 ⋄ rng←⊂Rng←4⍴Rng ⋄ range←⊂Range←4⍴Range ⋄ elx←⎕elx ⋄ ⎕elx←'→Retry'
[7]   
[8]   Top:
[9]   :for ∆ :in spin rng range ⋄ (source target)←∆
[10]      'XL' ⎕wi 'Range>.Rng' (RCtoA1 source)
[11]      0 0⍴'XL.Rng' ⎕wi 'XCopy' ('#' ⎕wi 'VT' (('XL.wb' ⎕wi 'ActiveSheet') ⎕wi 'xRange' (RCtoA1 target)) 9)
[12]  :endfor
[13]  
[14]  :return ⍝ Success
[15]  
[16]  Retry:
[17]  :if ~mt ∆←(WHERE (⊂⍬)≡¨Rng)-⎕io ⋄ roworcol←~↑∆
[18]  :else                           ⋄ roworcol←=/Rng[⎕io+1 3] ⍝ 1 is Column based copying (0 is row based)
[19]  :endif
[20]  MaxNo←⌈(1+-/Range[⎕io+roworcol+2 0])÷1+-/Rng[⎕io+roworcol+2 0] ⍝ Maximum number of sub-ranges
[21]  ⎕elx←'→Retry1'
[22]  
[23]  Retry1:                                 ⍝ Use smaller ranges to overcome error
[24]  :if noranges=MaxNo ⋄ ⎕elx←elx ⋄ →Top ⋄ :endif ⍝ One last try!
[25]  noranges←MaxNo⌊noranges×2               ⍝ Set the number of smaller ranges
[26]  
[27]  ⍝ Create a number of smaller ranges
[28]  splits←MaxNo÷noranges                   ⍝ Number of splits
[29]  splits←(Range[⎕io+roworcol]+⌊splits×(⍳noranges)-⎕io),Range[⎕io+2+roworcol]+1 ⍝ Start values of split ranges
[30]  rng  ←noranges⌿MATRIX Rng                                                                        ⋄ rng  ←⎕split rng
[31]  range←noranges⌿MATRIX Range ⋄ range[;⎕io+roworcol]←¯1↓splits ⋄ range[;⎕io+2+roworcol]←1↓splits-1 ⋄ range←⎕split range
[32]  
[33]  →Top
    ∇
