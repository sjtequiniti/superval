    ∇ Error←df DATE∆CHECK range;value;z[1]   ⍝ MAINWIN.sf#4[2]   ⍝ Fn to carry out standard date validations on the Global variable "text"[3]   ⍝  "df" contains the format of the Date field[4]   ⍝  "range" contains the acceptable date range[5]   ⍝[6]   ⍝[7]   ⍝ V2.50u RE 3/00 Windowised[8]   Error←0⍴''[9]   [10]  :if 0≡df ⋄ :orif 0∊⍴,DLTMB df ⋄ df←'DD/MM/YYYY' ⋄ :endif ⍝ Assume DD/MM/YYYY if not specified[11]  [12]  ⍝ Convert Date Number (between 31 12 1989 and 31 12 2019) to a date[13]  ⍝⍝⍝ :if (,1)≡⎕vi text ⋄ :andif 1=+/32873 43830<z←zwb text ⋄ text←,'ZI2,</>,ZI2,</>,ZI4' ⎕fmt MATRIX z DATEOFFSET 30 12 1899 ⋄ :endif[14]  :if (,1)≡⎕vi text ⋄ :andif ∨/'/-.'∊df ⋄ text←df DATE∆FMT (zwb text) DATEOFFSET 30 12 1899 ⋄ :endif[15]  [16]  ⍝ Cope with all combinations of date entries if DD/MM/YYYY[17]  :if 'DD/MM/YYYY'≡DLTMB df[18]      :if 3≠1↑⍴text←SStoMAT '/',' /' char_replace './' char_replace '-/' char_replace DLTB text  ⍝ Change all delimiters to / and create 3 rows[19]          text←((2∣⍴text)/'0'),text←,text                                 ⍝ Leading Zero, if required[20]          text←⊃((⍴text)↑1 0 1 0 1) ⎕penclose text                        ⍝ Split into 3 parts[21]      :endif[22]      :if 3≠1↑⍴text←(3 4⌈⍴text)↑text ⋄ Error←'InvDate' ⋄ :return ⋄ :endif ⍝ Error if still doesn't have 3 parts[23]      :if ~(⍴DLTB text[3;])∊2 4 ⋄ Error←'InvDate' ⋄ :return ⋄ :endif     ⍝ Error if not YY or YYYY[24]      :if ~(3 1⍴1)≡⊃⎕vi ¨⎕split text ⋄ Error←'InvDate' ⋄ :return ⋄ :endif ⍝ Error if not all filled and scalar[25]      text←(2↑DLTB text[1;]),'/',(2↑DLTB text[2;]),'/',4↑DLTB text[3;][26]  :else[27]      :if (⍴DLTB text)=⍴df~'/.-'[28]          text←(~df∊'/.-')\DLTB text[29]      :else[30]          text←(⍴df)↑text[31]      :endif[32]      z←~df∊'/.-'[33]      :if ~^/(⊂,1)≡¨⎕vi ¨((z/df)≠¯1↓' ',z/df) ⎕penclose z/text ⋄ Error←'InvDate' ⋄ :return ⋄ :endif ⍝ Error if not all filled and scalar[34]  :endif[35]  [36]  :if ~^/⎕vi (df∊'DMY')/text ⋄ Error←'InvDate' ⋄ :return ⋄ :endif         ⍝ Error if not numeric in some way[37]  [38]  :if ~DATECHECK value←df DATEEXP text  ⋄ Error←'InvDate' ⋄ :return ⋄ :endif[39]  [40]  :if 4=+/'Y'=df                          ⍝ YYYY required[41]  :andif 2=⍴DLTB ('Y'=df)/text            ⍝  and Year expressed as YY[42]      :if 0≡range ⋄ :orif 0∊⍴DLTB range[43]          range←¯50                       ⍝ Default Windowing Range[44]      :else[45]          range←⎕fi range                 ⍝ Valid Range of Dates (100 years starting range from today)[46]      :endif[47]      value←(⌽(3↑range)+3↑⎕ts) WINDOW∆DATE value[48]  :endif[49]  [50]  text←df DATE∆FMT value    ∇