    ∇ res←File ReadModule arg;list;∆;var;val;rules;Module;Component;errflag;ModuleDesc;cnlist;desc;vERSION;select;varname;BenTypes[1]   ⍝ MAINWIN.sf#3[2]   ⍝ Read the Parameter Set for a Module[3]   ⍝  including setting Default Values from ValuesFile[4]   ⍝  and (client-specific) Default Values from SVDefaults file[5]   ⍝ arg is a nest of  Module (internal name)[6]   ⍝                   Parameter Description or Component Number[7]   ⍝                   Module Description (description of Module for messages)[8]   ⍝                   desc - description of use of Parameter Set eg (Post Retirement Mortality)[9]   ⍝                   error flag - indicates if ERROR/Warning included in message[10]  [11]  ⍝ returns 1 if parameters successfully read or 0 if parameters not found (or multiple copies found - should only result from corruption)[12]  ⍝     and (if 1) any values defaulted by SVDefaults file or (if 0) an error table showing parameters not found[13]  res←1 (0 3⍴'' 0 '')[14]  [15]  (Module Component ModuleDesc desc errflag varname)←DLTB¨arg,(⍴arg)↓'' '' '' '' 0 ''[16]  :if mt ModuleDesc ⋄ ModuleDesc←Module ⋄ :endif[17]  [18]  :if       '{Library}'≡9↑Component ⋄ File←GlobalsFile        ⋄ Component←10↓Component ⋄ :endif[19]  :if select←'[Select]'≡8↑Component ⋄ Module←Module,'_Select' ⋄ Component← 9↓Component ⋄ :endif[20]  [21]  0 0⍴⍙VALUESdict ReadDictFile Module ⍝ System Defaults[22]  :if Component≡'None' ⋄ :return ⋄ :endif[23]  [24]  list←0 0⍴''[25]  :if ~mt (LibraryDir,'SVDefaults') ReadFile Module ⍝ Client Defaults[26]      list←⍕(LibraryDir,'SVDefaults') ReadFile Module '' 'NAMES' ⍝ Names of Client Defaults[27]  :endif[28]  [29]  cnlist←0 0⍴'' ⋄ vERSION←0[30]  :if ~mt File ⋄ :andif ~FileExist File,'.sf' ⍝⍝⍝ the .sf might already exist???[31]      res←0 (MATRIX varname ⍬ ((errflag/'ERROR:  '),MESS∆TRANS 'FileNotFound' File)) 0 ⋄ :return[32]  :elseif 82=⎕dr Component ⍝ Read Saved Parameters - Module/Description[33]      :if 1≠⍴,File ReadFile Module Component[34]          res←0 (MATRIX varname ⍬ ((errflag/'ERROR:  '),DLTB desc,' ',MESS∆TRANS 'ParmsNotFound' ModuleDesc ('"',Component,'"'))) 0 ⋄ :return[35]      :else[36]          cnlist ← File ReadFile Module Component 'NAMES' ⍝ To reduce SVdefaults list to those that won't be overwritten[37]          vERSION←↑File ReadFile Module Component 'VERSION'[38]      :endif[39]  :elseif ~⍬≡Component ⍝ Read Saved Parameters - Component Number[40]  :andif  ~1≠⍴,File ReadFile Component[41]      cnlist ← File ReadFile Component '' 'NAMES' ⍝ To reduce SVdefaults list to those that won't be overwritten[42]      vERSION←↑File ReadFile Component '' 'VERSION'[43]  :endif[44]  [45]  :if 0≠⎕nc 'BenTypes' ⋄ benTypes←BenTypes ⋄ :endif ⍝ Fix for mistaken use of variable "BenTypes"[46]  [47]  res←res,⊂vERSION[48]  [49]  :if ~mt list←(m2n list)~m2n cnlist[50]      rules←⍙RULESdict ReadDictFile Module[51]      rules←rules amend 'Field' ('[' StripText¨rules at 'Field')[52]      rules←rules for (⊂'Field'),list[53]  [54]      res←0 3⍴'' 0 ''[55]      :for ∆ :in spin list (¯1↓¨,¨(⍎¨list),¨'!') ⋄ (var val)←∆[56]          :if 'Check'≡↑(rules for 'Field' var) at 'Type' ⋄ :andif ^/,val∊' 01' ⋄ val←CheckTranslate val ⋄ :endif[57]          :if ~mt val[58]              res←res OVER var ⍬ (DLTMB (errflag/'Warning:  '),DLTB (↑(rules for 'Field' var) at 'Desc'),' has been given a default value of "',val,'"')[59]          :endif[60]      :endfor[61]      res←1 res vERSION[62]  :endif    ∇