    ∇ ⍙input ASSIGN∆Dict ⍙Dictionary;⍙N;⍙NAME;⍙indices;⍙var
[1]   ⍝ MAINWIN.sf#3
[2]   ⍝ Assigns ⍙Dictionary Variables according to their Type
[3]   ⍝
[4]   ⍝
[5]   ⍝
[6]   ⍝ V2.50u RE 3/00 Windowised
[7]   :if 0=⎕nc '⍙input' ⋄ ⍙input←'' ⋄ :endif ⋄ ⍙input←MATRIX ⍙input
[8]   
[9]   :for ⍙N :in ⍳1↑⍴⍙Dictionary←MATRIX ⍙Dictionary
[10]  
[11]      :if (⍙N+~⎕io)=1↑⍴⍙Dictionary ⋄ :andif 1≠1↑⍴⍙input
[12]          ⍙var←⍙input ⍝ If "last" assignment, assume rest of ⍙input
[13]      :else
[14]          ⍙var←⍙input[⎕io;] ⍝ else first row only
[15]      :endif
[16]  
[17]      ⍝ Determine if Valid Variable Name, if not assumed an Indexed Variable
[18]      :if 4=⎕NC ⍙Dictionary[⍙N;]~' '
[19]          ⍙indices←ZWB 1 0↓⍙NAME←SStoMAT '[',';[' char_replace '] ' char_replace ⍙Dictionary[⍙N;]
[20]  
[21]          :if 0=⎕NC ⍙NAME←⍙NAME[⎕io;] ⍝ Create if doesn't already Exist
[22]              ⍎⍙NAME,'←(',(⍕⍴,⍙indices),'/0)⍴""'
[23]          :endif
[24]  
[25]          :if 1 1≡×⍙indices ⍝ 3 Dimensional nested arrays - 2 non-zero indices
[26]              ⍝ First, expand to required size
[27]              ⍎⍙NAME,'←(',(⍕1⌈⍙indices+~⎕io),'⌈⍴',⍙NAME,')↑MATRIX ',⍙NAME
[28]              ⍎⍙NAME,'[',(⍕1⌈⍙indices[⎕io]+~⎕io),';',(⍕1⌈⍙indices[⎕io+1]+~⎕io),']←⊂⍙var'
[29]          :elseif 1=1↑⍴MATRIX ⍙var ⍝⍝⍝ Replicate previous functionality ??
[30]              :if ∨/'[;]'⍷⍙Dictionary[⍙N;]~' '
[31]                  ⍎⍙NAME,'←MATRIX ⍙var'
[32]              :else
[33]                  :select ⍬⍴⍴,⍙indices
[34]                  :case 1 ⍝ "Scalar" Characters
[35]                      ⍝ First, expand to required size
[36]                      ⍎⍙NAME,'←(',(⍕1⌈⍙indices+~⎕io),'⌈⍴',⍙NAME,')↑',⍙NAME
[37]                      ⍎⍙NAME, '[',(⍕1⌈⍙indices+~⎕io),']←1↑DLTB ⍙var'
[38]                  :case 2 ⍝ Charater "Rows"
[39]                      ⍝ First, expand to required size
[40]                      ⍎⍙NAME,'←(',(⍕1⌈⍙indices+~⎕io),'⌈⍴',⍙NAME,')↑MATRIX ',⍙NAME
[41]                      ⍎⍙NAME,'←',⍙NAME,'[⍳',(⍕¯1+1⌈⍙indices[⎕io]+~⎕io),';] OVER (DLTB ⍙var) OVER ',(⍕1⌈⍙indices[⎕io]+~⎕io),' 0↓',⍙NAME
[42]                  :endselect
[43]              :endif
[44]          :else                       ⍝ else Straight Var Assignment
[45]              ⍎⍙NAME,'←⍙var'
[46]          :endif
[47]      :else                           ⍝ else Straight Var Assignment
[48]          ⍎⍙Dictionary[⍙N;],'←⍙var'
[49]      :endif
[50]  
[51]      ⍙input←1 0↓⍙input
[52]  
[53]  :endfor
    ∇
