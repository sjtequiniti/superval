    ∇ warnings←fielddesc Win∆DateRelative vars;⎕elx;elx;n;newval;value;label;errflag;lab;val;DatesDesc;DatesList;tab[1]   ⍝ MAINWIN.sf#3[2]   ⍝ Assign the Relative value of a date field[3]   ⍝  "fielddesc" is a text string with the description of the field[4]   ⍝  "vars" contains[5]   ⍝    "label" is a text string with the label variable (may be indexed eg "lrcontsEntry[n;]")[6]   ⍝    "value" is a text string with the variable value (may be indexed eg "contsEntry[n;]")[7]   ⍝ The label and value variables must be global to this function[8]   [9]   ⍝ If "value" exists in DatesDesc, then assign "relative" value to label variable (if different)[10]  ⍝ If "value" does not exist in DatesDesc, then clear label value (and assign label to value)[11]  ⍝?⍝ If "value" exists in DatesList, "label" becomes that relative value[12]  ⍝ If "label" is already blank and "value" not in DatesDesc, nothing happens![13]  [14]  warnings←0 0⍴'' ⋄ (value label errflag)←3↑vars,0[15]  [16]  elx←⎕elx ⋄ ⎕elx←'⎕elx←elx ⋄ →0' ⍝ Exit if execution fails[17]  lab←DLTB ⍎label ⋄ val←DLTB '<' StripText ⍎value[18]  ⎕elx←elx[19]  [20]  :if mt lab ⋄ :andif ~DATECHECK 'DD/MM/YYYY' DATEEXP val ⋄ :return ⋄ :endif ⍝ Date Value (not linked)[21]  [22]  tab←AbsDict for 'Type' 'Date'[23]  DatesList←⊃tab at 'Parameter' ⋄ DatesDesc←⊃tab at 'List'[24]  [25]  :if ~mt n←(StripText DatesDesc) ExactTLU StripText val[26]      (DLTB DatesDesc[1↑n-~⎕io;]) ASSIGN∆Dict value[27]      :if ~(newval←DLTB DatesList[n;])≡lab[28]          warnings←DLTB (errflag/"Warning:  "),"Relative Value for ",fielddesc," has changed to '",newval,"'"[29]          newval ASSIGN∆Dict label[30]      :endif[31]  :else[32]      :if ~mt val ⋄ :andif ~mt lab ⋄ :andif ~DATECHECK 'DD/MM/YYYY' DATEEXP val[33]          warnings←DLTB (errflag/"ERROR:  "),"Relative Value '",val,"' for ",fielddesc," is no longer defined"[34]          lab ASSIGN∆Dict value ⋄ '' ASSIGN∆Dict label[35]      :endif[36]  :endif    ∇