    ∇ parm EndModule Name;childlist;rc;caption;LIST;visible;active;controllist
[1]   ⍝ MAINWIN.sf#3
[2]   ⍝ Close the Module called "Name"
[3]   ⍝ Involves the following steps: ??
[4]   
[5]   childlist←FormName ⎕wi '∆childlist' ⋄ visible←FormName ⎕wi '∆childvisible'
[6]   :select parm
[7]   :case ''
[8]       :return ⍝ if parm is '' then return to Form for another run
[9]   :else
[10]      :if 0≠ControlName ⎕wi 'modified'
[11]      :andif 1≠ControlName ⎕wi '∆modified'
[12]          :if 'N'=ASK 'IgnoreChange'
[13]              :return
[14]          :endif
[15]      :endif
[16]  
[17]      0 0⍴⍎Name,' "Quit"'                               ⍝ Quit Module - Delete "other" variables
[18]      :if ~Name≡'Open' ⋄ 0 0⍴⎕ex 'CancelledEntry' ⋄ :endif
[19]      :if ControlName ⎕wi '∆file' ⋄ 0 0⍴⎕ex     'FilesDesc    FilesList' ⋄ :endif
[20]      :if ControlName ⎕wi '∆parm' ⋄ 0 0⍴⎕ex 'ParmFileDesc ParmFileList'  ⋄ :endif
[21]  
[22]      :select parm
[23]      :caselist 'Quit' 'Cancel' 'Exit'
[24]          0 0⍴DeleteVars Name ⍝ Delete screen variables
[25]      :case 'CreateVars'
[26]          'CreateVars' RunModule Module ⍝ Read Saved variables
[27]      :endselect
[28]      ⍝ Delete Code required for Module to run
[29]      0 0⍴(SystemDir,ControlName ⎕wi '∆codefile') DeleteModule Name
[30]      :if uk≠0 ⋄ :andif (⊂'US'[uk],ControlName ⎕wi '∆codefile')∊m2n SystemFiles
[31]          0 0⍴(SystemDir,'US'[uk],ControlName ⎕wi '∆codefile') DeleteModule Name
[32]      :endif
[33]      :if 1=ControlName ⎕wi '∆relrules' ⋄ Win∆FormValidation 'Expunge' ⋄ :endif
[34]  
[35]      :if 0=⎕nc 'bar_open'
[36]          :if ~0∊⍴(FormName,'.barTools') ⎕wi 'self' ⋄ (FormName,'.barTools') ⎕wi 'Delete' ⋄ :endif
[37]      :elseif bar_open                              ⋄ (FormName,'.barTools') ⎕wi 'Delete'
[38]      :endif
[39]      0 0⍴⎕ex 'bar_open' ⍝⍝⍝ isValn relTests' ⍝⍝⍝ Expunge in each Module
[40]  
[41]  :if tracklocals
[42]  :andif ~'Form'≡ControlName ⎕wi 'class'
[43]      Name CheckLocals 'End'
[44]  :endif
[45]  
[46]      controllist←⎕split ⊃¯1↑childlist
[47]      rc←( (~(⊂'Listview')≡¨controllist MultiWI 'class')/controllist) MultiWI 'Delete'
[48]  
[49]      FormName ⎕wi '∆childlist' (childlist←¯1↓childlist)  ⍝ Remove Controls of Exited Form
[50]      FormName ⎕wi '∆childvisible' (¯1↓visible)
[51]      active←~(⊂'missing')≡¨visible←,⊃¯1↑visible
[52]      visible←0⌈active\active/visible
[53]      :if ∨/∊0≠¨⍴¨¯1↑childlist
[54]          rc←(⎕split visible/[1+⎕io]⊃¯1↑childlist) MultiWI 'visible' 1 ⍝ Restore Controls of Previous Form
[55]      :endif
[56]  
[57]      ⍝ Vista Bug - redisplaying buttons
[58]      0 0⍴(((⊂'Form')≡¨('#' ⎕wi 'children') MultiWI 'class')/'#' ⎕wi 'children') MultiWI 'Paint'
[59]  
[60]      :if FormName≡Win∆Parent ControlName
[61]          (FormName,'.lParmDesc') ⎕wi 'visible' ¯1
[62]          (FormName,'.lParmDesc') ⎕wi 'color' ¯1 ¯1
[63]      :endif
[64]      FormName ⎕wi '∆caption' (caption←¯1↓caption←FormName ⎕wi '∆caption') ⍝ Restore Previous Caption
[65]      FormName ⎕wi 'caption' (,⊃¯1↑caption)
[66]  
[67]      :if Container≡,⊃¯1↑ControlList
[68]          Container←ControlName←,⊃¯1↑ControlList←¯1↓ControlList
[69]      :endif
[70]  
[71]      :if 1=⍴caption ⋄ Name UpdateParametersIndex ecflag ⋄ :endif
[72]  
[73]  :endselect
    ∇
