    ∇ Error←FormValid Win∆ValidForm ParentName;⎕elx;elx;Fieldlist;Fieldcontrol;n;i;No;parent;fORMAT;FileList;field;z;valid;mandatory;label;timer[1]   ⍝ MAINWIN.sf#3[2]   ⍝ Validate all Controls on the Form and assign to variables[3]   [4]   Error←0⍴'' ⍝ "Default" reponse[5]   [6]   (Fieldlist Fieldcontrol)←2↑Win∆GetFieldList ParentName[7]   n←⍳1↑⍴Fieldlist[8]   [9]   :for i :in n[10]      :if Fieldlist[i;] ⎕wi 'enabled'[11]      :andif (Win∆Parent Fieldlist[i;]) ⎕wi 'enabled'[12]      :andif 1≤Fieldlist[i;] ⎕wi 'visible'[13]         :select DLTMB Fieldcontrol[i;]         ⍝ Checks according to Field type[14]         :caselist 'APL' 'Combo' 'Date' 'Decr' 'Edit' 'LEdit' 'File' 'FileS' 'FileM'[15]             Error←FormValid INPUT∆CHECK Fieldlist[i;][16]         :caselist 'Option' 'Radar'             ⍝ Mandatory Check for Option/Radar[17]             :if 0≠mandatory←Fieldlist[i;] ⎕wi '∆mandatory'[18]             :andif FormValid≥mandatory[19]                 No←zwb '_' Win∆Child Fieldlist[i;] ⋄ parent←'_' Win∆Parent Fieldlist[i;][20]                 :if ^/0=(⎕split ('<',parent,'>,LI10') ⎕fmt ⍳No) MultiWI 'value'[21]                     Error←'SelectionReq'[22]                 :endif[23]             :endif[24]         ⍝ Mandatory Check for Lists[25]         :caselist 'List' 'ListS' 'ListM' 'ListD' 'Listview' 'ListviewS' 'ListviewM' 'ListviewD'[26]             Error←FormValid List∆CHECK Fieldlist[i;][27]         :case 'F1SS' ⍝ Standard Validation Checks for F1SS[28]             :if Win∆F1SSFilled Fieldlist[i;][29]                 ⍝⍝ "XEndEdit crashes when an error occurs[30]                 elx←⎕elx ⋄ ⎕elx←'⎕elx←elx ⋄ Error←"Error" ⋄ →0'[31]                 Fieldlist[i;] ⎕wi 'XEndEdit'[32]                 ⎕elx←elx ⋄ Error←FormValid Win∆ValidF1SSAll Fieldlist[i;][33]             :endif[34]         :caselist 'Check' 'Picture' 'Tree' 'Multi' 'LMulti' 'Microsoft Web Browser'[35]             ⍝ No Validation Checks required for Check & Picture[36]         :ELSE                                        ⍝⍝⍝[37]              Fieldcontrol[i;],' not catered for!!!'  ⍝⍝⍝[38]         :endselect[39]  [40]         :if ~mt ,Error ⍝ Display Error (if found) and return[41]             Win∆SetFocus Fieldlist[i;][42]             MDISPLAY Error ⋄ :return[43]         :endif[44]      :endif[45]  :endfor[46]  [47]  :if ~(⊂Module)∊'Client' 'Validation'[48]  :andif ~mt fORMAT←ParentName ⎕wi '∆format' ⋄ :andif ~0≡fORMAT[49]      ⍝ Cross-check Files & Data Format[50]      field←ParentName ⎕wi '∆singlefile' ⍝ Assume single file specified[51]  [52]      ⍝ Might be multiple on some screens[53]      :if ∨/z←∨/'ckFileSelections'⍷Fieldlist[54]      :andif ~(,z⌿Fieldlist) ⎕wi 'value'[55]      :andif 1<⍴,z←ParentName ⎕wi '∆multifile'[56]          field←z[57]      :endif[58]  [59]      :if mt field ⋄ :return ⋄ :endif ⍝ Format but no File!![60]  [61]      FileList←SStoMAT ',',field ⎕wi 'text'[62]      FileList←(+/^\' '=FileList)⌽FileList ⍝ Delete Leading Blanks[63]      FileList←⊃(⊂InputDir),¨⎕split FileList[64]      valid←,⊃field ⎕wi '∆valid'[65]  [66]      :if ~mt Error←(fORMAT ⎕wi 'text') Format∆CHECK (FileList valid)[67]          Win∆SetFocus fORMAT[68]          MDISPLAY Error ⋄ :return[69]      :endif[70]  :endif    ∇