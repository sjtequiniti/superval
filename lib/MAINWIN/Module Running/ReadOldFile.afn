    ∇ ⍙cn←⍙⍙File ReadOldFile ⍙⍙Component;⍙tieno;⍙index;⍙list;⍙rows;⍙size;⍙desc;⍙companion;⍙cndesc;⍙contents;⍙CFile;⍙clist;⍙FileList[1]   ⍝ MAINWIN.sf#3[2]   ⍝ Read a ⍙⍙Component from ⍙⍙File[3]   ⍝ "⍙⍙File" should be the File name with full path[4]   ⍝  ⍙⍙Component can be either a simple character vector (or numeric scalar) or nested array containing:[5]   ⍝ 1.   the Number of the component; or[6]   ⍝      the Description of the Component (looked up in columns 8-28 of index); or[7]   ⍝      "Index" ie Component 1[8]   ⍝  optionally followed by either[9]   ⍝ 2.   a list of the names of Objects that are to be extracted; or[10]  ⍝      "Names"  ie return the list of names in the package; or[11]  ⍝      "FRDCI"  ie return the ⎕frdci timestamp number of the component.[12]  ⍝      "TSTAMP" ie the "formatted" Timestamp of the Component[13]  ⍝[14]  ⍝  If: the Description of the Component (looked up in columns 8-28 of index) is specified; and[15]  ⍝      the version is not Australian (ie uk≠0)[16]  ⍝  then it will also extract the contents from a version companion file called ?⍙⍙File in the same directory[17]  ⍝  where ? is a letter indicating the version currently U for uk=1 and S for uk=2.[18]  ⍝[19]  ⍝ The result ⍙cn is:[20]  ⍝    ⍬ if operation fails (ie ⍙⍙File not tied or ⍙⍙Component doesn't exist)[21]  ⍝    component number if the Component is a package (and the package has been unpacked)[22]  ⍝    contents of component if the Component is not a package (or "Index" or list of "Names")[23]  ⍝    the ⎕frdci if "FRDCI"[24]  ⍝    the formatted TimeStamp if "TSTAMP"[25]  [26]  ⍙cn←⍬ ⍝ Default to Error result[27]  [28]  ⍝ Abort if "blank" ⍙⍙File or ⍙⍙File not specified[29]  :if 0=⎕nc '⍙⍙File' ⋄ :orif 0∊⍴,DLTB ⍙⍙File ⋄ :return ⋄ :endif[30]  [31]  ⍝ Abort if not tied - calling function can determine if critical[32]  ⍝ Won't even try for version companion file!![33]  →(0≠⍙⍙File FSTIE ⍙tieno←TieNumber ⍙⍙File)/0[34]  [35]  :if 2>(⎕fsize ⍙tieno)[1+⎕io] ⋄ :orif 2≠⍴⍴⍙index←⎕fread ⍙tieno,1[36]      →end ⍝ Can't be a "System" File[37]  :endif[38]  [39]  :if 2=≡⍙⍙Component ⍝ Nested argument requesting just some elements of component[40]      ⍙list←⊃1↓⍙⍙Component ⋄ ⍙cndesc←,⎕io⊃⍙⍙Component[41]  :else[42]      ⍙cndesc←⍙⍙Component[43]  :endif[44]  [45]  ⍙companion←0[46]  :if 82=⎕dr ⍙cn←⍙cndesc               ⍝ Character Argument[47]      :if 'INDEX'≡UPPERCASE DLTMB ⍙cn ⍝ Index Requested[48]          ⍙cn←⍙index ⋄ →end[49]      :else[50]          ⍙companion←(uk≠0)^82=⎕dr ⍙cndesc ⍝ May be a version companion file read required[51]          ⍙desc←0 8↓⍙index ⍝ Drop "row numbers"[52]          :if 20≠⍙size←20⌈⍴⍙cn[53]              ⍙size←⍙size⌈¯1↑⍴⍙desc ⍝ If looking up by description also[54]          :endif[55]          ⍙cn←⍙size↑⍙cn ⋄ ⍙desc←(((0,⍙size)⌈⍴⍙desc)↑⍙desc)[;⍳⍙size][56]          ⍙desc←'⍺' StripText ⍙desc ⍝ Remove User Names[57]          ⍙cn←MatrixZWB ⍙index[((⍙desc TLU ⍙cn)~1)-~⎕io;⍳8] ⍝ Find component number for Module[58]      :endif[59]  :endif[60]  [61]  ⍝ Lookup for ⍙⍙Component Failed (but might be companion file version)[62]  :if ⍙cn≡⍬ ⋄ :andif ~⍙companion ⋄ →end ⋄ :endif[63]  [64]  ⍝ Multiple Components found - let calling function work it out![65]  ⍝ Won't even try for version companion file!![66]  :if ~⍙cn≡⍬ ⋄ :andif 1<⍴,⍙cn ⋄ →end ⋄ :endif[67]  [68]  ⍝ Trying beyond EOF[69]  ⍝ Won't even try for version companion file!![70]  :if ~⍙cn≡⍬ ⋄ :andif ⍙cn≥(⎕fsize ⍙tieno)[1+⎕io] ⋄ ⍙cn←⍬ ⋄ →end ⋄ :endif[71]  [72]  :if 0≠⎕nc '⍙list'[73]      :select UPPERCASE DLTMB ⍙list[74]      :case 'FRDCI'[75]          :if ~⍙cn≡⍬ ⋄ ⍙cn←(⎕frdci ⍙tieno,⍙cn)[2+⎕io] ⋄ :endif[76]          →end[77]      :case 'TSTAMP'[78]          :if ~⍙cn≡⍬ ⋄ ⍙cn←1 DATESPELL 3↓⎕frdci ⍙tieno,⍙cn ⋄ :endif[79]          →end[80]      :endselect[81]  :endif[82]  [83]  ⍙clist←0 0⍴''[84]  :if ⍙companion ⍝ Create Companion File Name - only UK and SA catered for[85]      ⍙CFile←('\' Win∆Parent ⍙⍙File),('US'[uk-~⎕io]),'\' Win∆Child ⍙⍙File[86]  [87]      :if SystemDir≡'\' Win∆Parent ⍙CFile[88]          ⍙FileList←SystemFiles[89]      :else[90]          ⍙FileList←'.' StripText UPPERCASE ⎕xlib ('\' Win∆Parent ⍙CFile),'*.SF'[91]      :endif[92]  [93]      :if ~0∊⍴⍙FileList ExactTLU UPPERCASE '\' Win∆Child ⍙CFile[94]      :andif ⍬≡⍙clist←⍙CFile ReadOldFile ⍙cndesc 'NAMES'[95]          ⍙clist←0 0⍴''[96]      :else[97]          :if 0≠⎕nc '⍙list' ⋄ :andif ~'NAMES'≡UPPERCASE DLTMB ⍙list[98]              ⍙clist←⍙clist[(⍙clist ExactTLU ⍙list)-~⎕io;][99]          :endif[100]     :endif[101] :endif[102] [103] :if ⍙cn≡⍬[104]     ⍙contents←pack ''[105] :else[106]     ⍙contents←⎕fread ⍙tieno,⍙cn[107] :endif[108] [109] :if pchk ⍙contents[110]     :if 0=⎕nc '⍙list'[111]         pdef ⍙contents[112]         :if ~0∊⍴⍙clist ⋄ ⍙cn←⍙CFile ReadOldFile ⍙cndesc ⋄ :endif[113]     :else[114]         :if 'NAMES'≡UPPERCASE DLTMB ⍙list[115]             ⍙cn←0 Uniquelist (pnames ⍙contents) OVER ⍙clist[116]         :else[117]             :if ~0∊⍴,⍙rows←⍙list ExactTLU pnames ⍙contents[118]                 (MATRIX ⍙list)[⍙rows-~⎕io;] pdef ⍙contents       ⍝ Read Package[119]             :endif[120]             :if ~0∊⍴⍙clist ⋄ ⍙cn←⍙CFile ReadOldFile ⍙cndesc ⍙clist ⋄ :endif[121]         :endif[122]     :endif[123] :else        ⍝ Return "Text" Component[124]     :if 0∊⍴⍙clist ⍝ Return Version specific copy if text[125]         ⍙cn←⍙contents[126]     :else[127]         ⍙cn←⍙clist[128]     :endif[129] :endif[130] end:⎕funtie ⍙tieno    ∇