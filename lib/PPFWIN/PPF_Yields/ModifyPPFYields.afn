    ∇ ModifyPPFYields parm;SelectionText;z;list;size;yielddate;ppf155;ppf150;ppf55;ppf50;ppf10;ppf15;ppf20;SSName;Dateget;adjppfi;adjppfi20;adjppfpiI;adjppfpiF;yieldkey;origkey;ppf5_155;ppf5_150;adjppfPENpiF;adjppfPENpiI[1]   ⍝ PPFWIN.sf#4[2]   ⍝ Function to either Add, Edit or Delete PPF Yields rows[3]   [4]   Win∆AssignVars ControlName[5]   :if mt YIELDDATE ⋄ :andif ~parm≡'Add' ⋄ :return ⋄ :endif[6]   SSName←'fmPPFYields.ssYields' ⋄ Dateget←⍳0 ⋄ size←↑⍴YIELDDATE[7]   [8]   :if (⊂parm)∊'Edit' 'Delete'[9]       list←PPF55,z,PPF50,z,PPF5_155,z,PPF5_150,z,PPF155,z,PPF150,z,PPF10,z,PPF15,z,PPF20,z,adjPPFi,z,adjPPFi20,z,adjPPFPENpiI,z,adjPPFPENpiF,z,adjPPFpiI,(z←size⌿MATRIX ' ! '),adjPPFpiF[10]      :if 1=SSName ⎕wi 'SelectionCount'[11]      :andif =/(Dateget←SSName ⎕wi 'GetSelection' 0 ⍬ ⍬ ⍬ ⍬)[1 3][12]      :andif ~Dateget≡1 1 1 1[13]          Dateget←Dateget[1][14]      :else[15]          :if ~mt SelectionText←Win∆SelectionBox list (YIELDDATE,' ',YIELDKey)[16]              Dateget←⍬⍴(YIELDDATE,' ',YIELDKey) ExactTLU SelectionText[17]          :else[18]              :return[19]          :endif[20]      :endif[21]      :if parm≡'Delete'[22]          :if 'Y'='YN' ASK 'Do you want to Delete the PPF Yields (',(DLTMB list[Dateget;]),') for ',YIELDDATE[Dateget;],' ',YIELDKey[Dateget;],'?'[23]              z←(⍳size)~Dateget[24]              YIELDDATE←YIELDDATE[z;] ⋄ YIELDKey←YIELDKey[z;][25]              PPF55←PPF55[z;] ⋄ PPF50←PPF50[z;] ⋄ PPF5_155←PPF5_155[z;] ⋄ PPF5_150←PPF5_150[z;] ⋄ PPF155←PPF155[z;] ⋄ PPF150←PPF150[z;][26]              PPF10←PPF10[z;] ⋄ PPF15←PPF15[z;] ⋄ PPF20←PPF20[z;][27]              adjPPFi←adjPPFi[z;] ⋄ adjPPFi20←adjPPFi20[z;] ⋄ adjPPFPENpiI←adjPPFPENpiI[z;] ⋄ adjPPFPENpiF←adjPPFPENpiF[z;] ⋄ adjPPFpiI←adjPPFpiI[z;] ⋄ adjPPFpiF←adjPPFpiF[z;][28]              SSName ⎕wi 'MaxRow' (¯1+SSName ⎕wi 'MaxRow')[29]              'PPF_Yields' (SSName ⎕wi '∆name') ParmCommAdjust 'Delete' Dateget[30]              →end[31]          :else[32]              :return[33]          :endif[34]      :endif[35]  :endif[36]  [37]  (yielddate yieldkey ppf55 ppf50 ppf5_155 ppf5_150 ppf155 ppf150 ppf10 ppf15 ppf20 adjppfi adjppfi20 adjppfPENpiI adjppfPENpiF adjppfpiI adjppfpiF)←RunPPFYieldEdit Dateget[38]  :if mt yielddate ⋄ :return ⋄ :endif[39]  [40]  z←(⍳size)~(origkey←YIELDDATE,YIELDKey) ExactTLU yielddate,yieldkey[41]  YIELDDATE←YIELDDATE[z;] ⋄ YIELDKey←YIELDKey[z;][42]  PPF55←PPF55[z;] ⋄ PPF50←PPF50[z;] ⋄ PPF5_155←PPF5_155[z;] ⋄ PPF5_150←PPF5_150[z;] ⋄ PPF155←PPF155[z;] ⋄ PPF150←PPF150[z;][43]  PPF10←PPF10[z;] ⋄ PPF15←PPF15[z;] ⋄ PPF20←PPF20[z;][44]  adjPPFi←adjPPFi[z;] ⋄ adjPPFi20←adjPPFi20[z;] ⋄ adjPPFPENpiI←adjPPFPENpiI[z;] ⋄ adjPPFPENpiF←adjPPFPENpiF[z;] ⋄ adjPPFpiI←adjPPFpiI[z;] ⋄ adjPPFpiF←adjPPFpiF[z;][45]  [46]  :if mt YIELDDATE[47]      (YIELDDATE YIELDKey PPF55 PPF50 PPF5_155 PPF5_150 PPF155 PPF150 PPF10 PPF15 PPF20 adjPPFi adjPPFi20 adjPPFPENpiI adjPPFPENpiF adjPPFpiI adjPPFpiF)←yielddate yieldkey ppf55 ppf50 ppf5_155 ppf5_150 ppf155 ppf150 ppf10 ppf15 ppf20 adjppfi adjppfi20 adjppfPENpiI adjppfPENpiF adjppfpiI adjppfpiF[48]  :else[49]      YIELDDATE←YIELDDATE OVER yielddate ⋄ YIELDKey←YIELDKey OVER yieldkey[50]      PPF55←PPF55 OVER ppf55 ⋄ PPF50←PPF50 OVER ppf50 ⋄ PPF5_155←PPF5_155 OVER ppf5_155 ⋄ PPF5_150←PPF5_150 OVER ppf5_150 ⋄ PPF155←PPF155 OVER ppf155 ⋄ PPF150←PPF150 OVER ppf150[51]      PPF10←PPF10 OVER ppf10 ⋄ PPF15←PPF15 OVER ppf15 ⋄ PPF20←PPF20 OVER ppf20[52]      adjPPFi←adjPPFi OVER adjppfi  ⋄ adjPPFi20←adjPPFi20 OVER adjppfi20 ⋄ adjPPFPENpiI←adjPPFPENpiI OVER adjppfPENpiI ⋄ adjPPFPENpiF←adjPPFPENpiF OVER adjppfPENpiF ⋄ adjPPFpiI←adjPPFpiI OVER adjppfpiI ⋄ adjPPFpiF←adjPPFpiF OVER adjppfpiF[53]  :endif[54]  [55]  z←⎕av⍋YIELDDATE[;7 8 9 10 4 5 1 2],YIELDKey[56]  YIELDDATE←YIELDDATE[z;] ⋄ YIELDKey←YIELDKey[z;][57]  PPF55←PPF55[z;] ⋄ PPF50←PPF50[z;] ⋄ PPF5_155←PPF5_155[z;] ⋄ PPF5_150←PPF5_150[z;] ⋄ PPF155←PPF155[z;] ⋄ PPF150←PPF150[z;][58]  PPF10←PPF10[z;] ⋄ PPF15←PPF15[z;] ⋄ PPF20←PPF20[z;][59]  adjPPFi←adjPPFi[z;] ⋄ adjPPFi20←adjPPFi20[z;] ⋄ adjPPFPENpiI←adjPPFPENpiI[z;] ⋄ adjPPFPENpiF←adjPPFPENpiF[z;] ⋄ adjPPFpiI←adjPPFpiI[z;] ⋄ adjPPFpiF←adjPPFpiF[z;][60]  [61]  :for z :in z←z~(m2n YIELDDATE,YIELDKey)⍳(m2n origkey)[62]      'PPF_Yields' (SSName ⎕wi '∆name') ParmCommAdjust 'Insert' z[63]  :endfor[64]  [65]  end:(PPFi PPFi20 PPFPENpiI PPFPENpiF PPFpiI PPFpiF)←⊃¨spin ,¨¨(⎕split YIELDDATE) ProcPPFYields¨spin ⎕split¨PPF55 PPF50 PPF5_155 PPF5_150 PPF155 PPF150 PPF10 PPF15 PPF20 adjPPFi adjPPFi20 adjPPFPENpiI adjPPFPENpiF adjPPFpiI adjPPFpiF[66]  [67]  Assign_Inputs 1 ⋄ SSName ⎕wi 'modified' 1[68]  [69]  0 0⍴(⊂'ssYields') PPF_Yields 'Change'    ∇