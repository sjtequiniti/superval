    ∇ res←CreateKey parm;SSName;licence;data;clientList;Client;flags;key;verno;ExpiryDate
[1]   ⍝ REGISTER.sf#2
[2]   ⍝ Function to create a registration key
[3]   
[4]   SSName←"fmRegister.ssRegTable" ⋄ res←'' ⍝ default response
[5]   
[6]   :if 1=SSName ⎕wi 'SelectionCount'
[7]   :andif =/(SelectedRow←SSName ⎕wi 'GetSelection' 0 ⍬ ⍬ ⍬ ⍬)[1 3]
[8]   :andif ~SelectedRow≡1 2 1 2
[9]   :andif (~parm)∨RowMax≥↑SelectedRow
[10]      SelectedRow←↑SelectedRow
[11]  :else
[12]      MDISPLAY 'Select a single row' ⋄ :return
[13]  :endif
[14]  Win∆AssignVars ControlName
[15]  
[16]  key←(key[⌽⎕av⍋key←⊃↑⌽¨⊂'SuperValUK']) ALPHA
[17]  
[18]  clientList←key encrypt ⊃,SSName Win∆F1SSGetTextArray 1 1 (SSName ⎕wi 'xMaxRow') 1
[19]  
[20]  data←,SSName Win∆F1SSGetTextArray SelectedRow 1 1 MaxCol ⍝ Client Version Flags
[21]  (Client verno)←2↑data
[22]  :if ~(5↑version)≡verno←¯5↑verno ⍝ Fix Version to 5 chars
[23]      MDISPLAY 'Must be version of SuperVal you are running' ⋄ :return
[24]  :endif
[25]  flags←(14↑×zwb¨2↓data),((~parm)⌊zwb dEVELOPMENT),(parm⌈zwb blanking) ⍝ Fix Flags
[26]  licence←(,'I3' ⎕fmt SelectedRow) ('0123456789abcdef'[1+2⊥⍉4 4⍴flags]) verno (,'ZI2'⎕fmt 100∣3↑⎕ts) ⍝ Set order - Row Flags Version Date
[27]  
[28]  :if parm
[29]      ⍝ When creating a Key for a Client
[30]      ⍝   bring up form showing settings and asking for Key expiry date
[31]      'REGISTER' CallModule 'Key_Creation'
[32]      :if 0∊⍴ExpiryDate ⋄ :return ⋄ :endif ⍝ Aborted Key Creation
[33]      licence[4]←⊂ExpiryDate ⍝ Expiry date
[34]  :endif
[35]  
[36]  :if ~(DLTB res)≡res←key encrypt ↑,/licence
[37]      MDISPLAY 'Licence Key must not have leading or trailing blanks',⎕tcnl,'Try a different date and notify Robert'
[38]      res←'' ⋄ :return
[39]  :endif
[40]  :if ~parm ⋄ res←(2⊃clientList ApplyLicence res) key ⋄ :endif
    ∇
