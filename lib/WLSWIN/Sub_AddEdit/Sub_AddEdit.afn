    ∇ res←field Sub_AddEdit parm;parent;∆;dir;text
[1]   ⍝ WLSWIN.sf#4
[2]   ⍝ Function to allow user control on Add/Edit HTTP Brokers
[3]   
[4]   parent←'fmSubAddEdit.' ⋄ res←0⍴'' ⍝ Default response
[5]   
[6]   :select parm
[7]   :case 'Prepare'
[8]   
[9]   :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)
[10]      :if ~mt httpno
[11]          httpname     ←DLTB HTTPnames    [httpno;]
[12]          httpipaddr   ←DLTB HTTPipaddr   [httpno;]
[13]          httpport     ←DLTB HTTPport     [httpno;]
[14]          httpresplimit←DLTB HTTPresplimit[httpno;]
[15]          httpmaxproc  ←DLTB HTTPmaxproc  [httpno;]
[16]          httpfolder   ←DLTB HTTPfolder   [httpno;]
[17]          httpwssize   ←DLTB HTTPwssize   [httpno;]
[18]          httpabandon  ←DLTB HTTPabandon  [httpno;]
[19]          httpcheck    ←DLTB HTTPcheck    [httpno;]
[20]          httpshutdown ←DLTB HTTPshutdown [httpno;]
[21]      :endif
[22]  
[23]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)
[24]      (parent,'edhttpfolder') ⎕wi 'onChange' ''
[25]  
[26]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)
[27]  
[28]      :repeat
[29]          :select ↑field
[30]          :case 'cbhttpipaddr'
[31]              (parent,'edhttpfolder') ⎕wi 'enabled' (~∆←2=(parent,'cbhttpipaddr') ⎕wi 'value')
[32]              :if ∆
[33]                  (parent,'edhttpfolder') ⎕wi 'suppress' 1
[34]                  (parent,'edhttpfolder') ⎕wi 'text' 'HTTP_worker\'
[35]                  (parent,'edhttpfolder') ⎕wi 'suppress' 0
[36]              :endif
[37]          :case 'edhttpfolder'
[38]              :if ~mt dir←DLTB (parent,'edhttpfolder') ⎕wi 'text'
[39]              :andif ~'HTTP_WORKER\'≡UPPERCASE dir←FullFolder dir
[40]                  :if 1=(parent,'cbhttpipaddr') ⎕wi 'value' ⋄ dir←FolderToUNC dir ⋄ :endif ⍝ UNC if IP Address specified
[41]                  :if ~'HTTP_WORKER\'≡UPPERCASE ¯12↑dir ⋄ dir←dir,'HTTP_worker\' ⋄ :endif  ⍝ must end in HTTP_worker (uniqueness)
[42]                  (parent,'edhttpfolder') ⎕wi 'suppress' 1
[43]                  (parent,'edhttpfolder') ⎕wi 'text' dir
[44]                  (parent,'edhttpfolder') ⎕wi 'suppress' 0
[45]              :endif
[46]          :endselect
[47]      :until mt field←1↓field
[48]  
[49]  :case 'Valid' ⍝ Routine specific validation
[50]  
[51]      :if (⊂httpname)∊m2n HTTPnames
[52]      :andif ~httpno=(m2n HTTPnames)⍳⊂httpname
[53]          res←'HTTP Request Broker Name already exists'
[54]          Win∆SetFocus parent,'edhttpname'
[55]      :endif
[56]  
[57]      :if 2≠(parent,'cbhttpipaddr') ⎕wi 'value' ⋄ :andif 'HTTP_WORKER\'≡UPPERCASE (parent,'edhttpfolder') ⎕wi 'text'
[58]          res←'Specify a fully qualified path to the Worker folder (Double-Click to select the Folder)'
[59]          Win∆SetFocus parent,'edhttpfolder'
[60]      :endif
[61]  
[62]      :if 0=∆←(parent,'cbhttpipaddr') ⎕wi 'value'
[63]          :if ' '∊text←DLTB (parent,'cbhttpipaddr') ⎕wi 'text'
[64]          :orif 3≠+/'.'=text
[65]          :orif ~(4⍴1)≡⎕vi '. ' REPL text
[66]              res←'Invalid IPv4 Format (x.x.x.x) IP Address'
[67]              Win∆SetFocus parent,'cbhttpipaddr'
[68]          :endif
[69]      :endif
[70]  
[71]  :case 'Run'
[72]      :if mt httpno
[73]          HTTPnames    ←⊃(lmt m2n HTTPnames    ),⊂httpname
[74]          HTTPipaddr   ←⊃(lmt m2n HTTPipaddr   ),⊂httpipaddr
[75]          HTTPport     ←⊃(lmt m2n HTTPport     ),⊂httpport
[76]          HTTPresplimit←⊃(lmt m2n HTTPresplimit),⊂httpresplimit
[77]          HTTPmaxproc  ←⊃(lmt m2n HTTPmaxproc  ),⊂httpmaxproc
[78]          HTTPfolder   ←⊃(lmt m2n HTTPfolder   ),⊂httpfolder
[79]          HTTPwssize   ←⊃(lmt m2n HTTPwssize   ),⊂httpwssize
[80]          HTTPabandon  ←⊃(lmt m2n HTTPabandon  ),⊂httpabandon
[81]          HTTPcheck    ←⊃(lmt m2n HTTPcheck    ),⊂httpcheck
[82]          HTTPshutdown ←⊃(lmt m2n HTTPshutdown ),⊂httpshutdown
[83]          HTTPeditable←HTTPeditable OVER '1'
[84]          HTTPactive  ←HTTPactive   OVER '0'
[85]          httpno←↑⍴HTTPnames
[86]      :else
[87]          HTTPnames    ←lmt m2n HTTPnames     ⋄ HTTPnames    [httpno]←⊂httpname      ⋄ HTTPnames    ←⊃HTTPnames
[88]          HTTPipaddr   ←lmt m2n HTTPipaddr    ⋄ HTTPipaddr   [httpno]←⊂httpipaddr    ⋄ HTTPipaddr   ←⊃HTTPipaddr
[89]          HTTPport     ←lmt m2n HTTPport      ⋄ HTTPport     [httpno]←⊂httpport      ⋄ HTTPport     ←⊃HTTPport
[90]          HTTPresplimit←lmt m2n HTTPresplimit ⋄ HTTPresplimit[httpno]←⊂httpresplimit ⋄ HTTPresplimit←⊃HTTPresplimit
[91]          HTTPmaxproc  ←lmt m2n HTTPmaxproc   ⋄ HTTPmaxproc  [httpno]←⊂httpmaxproc   ⋄ HTTPmaxproc  ←⊃HTTPmaxproc
[92]          HTTPfolder   ←lmt m2n HTTPfolder    ⋄ HTTPfolder   [httpno]←⊂httpfolder    ⋄ HTTPfolder   ←⊃HTTPfolder
[93]          HTTPwssize   ←lmt m2n HTTPwssize    ⋄ HTTPwssize   [httpno]←⊂httpwssize    ⋄ HTTPwssize   ←⊃HTTPwssize
[94]          HTTPabandon  ←lmt m2n HTTPabandon   ⋄ HTTPabandon  [httpno]←⊂httpabandon   ⋄ HTTPabandon  ←⊃HTTPabandon
[95]          HTTPcheck    ←lmt m2n HTTPcheck     ⋄ HTTPcheck    [httpno]←⊂httpcheck     ⋄ HTTPcheck    ←⊃HTTPcheck
[96]          HTTPshutdown ←lmt m2n HTTPshutdown  ⋄ HTTPshutdown [httpno]←⊂httpshutdown  ⋄ HTTPshutdown ←⊃HTTPshutdown
[97]      :endif
[98]  
[99]      res←'Quit'
[100] 
[101] :case 'Quit' ⍝ Deleting "other" variables
[102] 
[103] :endselect
    ∇
