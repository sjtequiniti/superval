    ∇ res←field Sub_AddEdit parm;parent;∆;dir[1]   ⍝ HPCWIN.sf#4[2]   ⍝ Function to allow user control on Add/Edit HTTP Brokers[3]   [4]   parent←'fmSubAddEdit.' ⋄ res←0⍴'' ⍝ Default response[5]   [6]   :select parm[7]   :case 'Prepare'[8]   [9]   :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)[10]      :if ~mt httpno[11]          httpname     ←DLTB HTTPnames    [httpno;][12]          httpipaddr   ←DLTB HTTPipaddr   [httpno;][13]          httpport     ←DLTB HTTPport     [httpno;][14]          httpresplimit←DLTB HTTPresplimit[httpno;][15]          httpmaxproc  ←DLTB HTTPmaxproc  [httpno;][16]          httpfolder   ←DLTB HTTPfolder   [httpno;][17]          httpwssize   ←DLTB HTTPwssize   [httpno;][18]          httpabandon  ←DLTB HTTPabandon  [httpno;][19]          httpcheck    ←DLTB HTTPcheck    [httpno;][20]          httpshutdown ←DLTB HTTPshutdown [httpno;][21]      :endif[22]  [23]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)[24]      (parent,'edhttpfolder') ⎕wi 'onChange' ''[25]  [26]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)[27]  [28]      :repeat[29]          :select ↑field[30]          :case 'cbhttpipaddr'[31]              (parent,'edhttpfolder') ⎕wi 'enabled' (~∆←2=(parent,'cbhttpipaddr') ⎕wi 'value')[32]              :if ∆[33]                  (parent,'edhttpfolder') ⎕wi 'suppress' 1[34]                  (parent,'edhttpfolder') ⎕wi 'text' 'HTTP_worker\'[35]                  (parent,'edhttpfolder') ⎕wi 'suppress' 0[36]              :endif[37]          :case 'edhttpfolder'[38]              :if ~mt dir←DLTB (parent,'edhttpfolder') ⎕wi 'text'[39]              :andif ~'HTTP_WORKER\'≡UPPERCASE dir←FullFolder dir[40]                  :if 1=(parent,'cbhttpipaddr') ⎕wi 'value' ⋄ dir←FolderToUNC dir ⋄ :endif ⍝ UNC if IP Address specified[41]                  :if ~'HTTP_WORKER\'≡UPPERCASE ¯12↑dir ⋄ dir←dir,'HTTP_worker\' ⋄ :endif  ⍝ must end in HTTP_worker (uniqueness)[42]                  (parent,'edhttpfolder') ⎕wi 'suppress' 1[43]                  (parent,'edhttpfolder') ⎕wi 'text' dir[44]                  (parent,'edhttpfolder') ⎕wi 'suppress' 0[45]              :endif[46]          :endselect[47]      :until mt field←1↓field[48]  [49]  :case 'Valid' ⍝ Routine specific validation[50]  [51]      :if (⊂httpname)∊m2n HTTPnames[52]      :andif ~httpno=(m2n HTTPnames)⍳⊂httpname[53]          res←'HTTP Request Broker Name already exists'[54]          Win∆SetFocus parent,'edhttpname'[55]      :endif[56]  [57]      :if 2≠(parent,'cbhttpipaddr') ⎕wi 'value' ⋄ :andif 'HTTP_WORKER\'≡UPPERCASE (parent,'edhttpfolder') ⎕wi 'text'[58]          res←'Specify a fully qualified path to the Worker folder (Double-Click to select the Folder)'[59]          Win∆SetFocus parent,'edhttpfolder'[60]      :endif[61]  [62]  :case 'Run'[63]      :if mt httpno[64]          HTTPnames    ←⊃(lmt m2n HTTPnames    ),⊂httpname[65]          HTTPipaddr   ←⊃(lmt m2n HTTPipaddr   ),⊂httpipaddr[66]          HTTPport     ←⊃(lmt m2n HTTPport     ),⊂httpport[67]          HTTPresplimit←⊃(lmt m2n HTTPresplimit),⊂httpresplimit[68]          HTTPmaxproc  ←⊃(lmt m2n HTTPmaxproc  ),⊂httpmaxproc[69]          HTTPfolder   ←⊃(lmt m2n HTTPfolder   ),⊂httpfolder[70]          HTTPwssize   ←⊃(lmt m2n HTTPwssize   ),⊂httpwssize[71]          HTTPabandon  ←⊃(lmt m2n HTTPabandon  ),⊂httpabandon[72]          HTTPcheck    ←⊃(lmt m2n HTTPcheck    ),⊂httpcheck[73]          HTTPshutdown ←⊃(lmt m2n HTTPshutdown ),⊂httpshutdown[74]          HTTPeditable←HTTPeditable OVER '1'[75]          HTTPactive  ←HTTPactive   OVER '0'[76]          httpno←↑⍴HTTPnames[77]      :else[78]          HTTPnames    ←lmt m2n HTTPnames     ⋄ HTTPnames    [httpno]←⊂httpname      ⋄ HTTPnames    ←⊃HTTPnames[79]          HTTPipaddr   ←lmt m2n HTTPipaddr    ⋄ HTTPipaddr   [httpno]←⊂httpipaddr    ⋄ HTTPipaddr   ←⊃HTTPipaddr[80]          HTTPport     ←lmt m2n HTTPport      ⋄ HTTPport     [httpno]←⊂httpport      ⋄ HTTPport     ←⊃HTTPport[81]          HTTPresplimit←lmt m2n HTTPresplimit ⋄ HTTPresplimit[httpno]←⊂httpresplimit ⋄ HTTPresplimit←⊃HTTPresplimit[82]          HTTPmaxproc  ←lmt m2n HTTPmaxproc   ⋄ HTTPmaxproc  [httpno]←⊂httpmaxproc   ⋄ HTTPmaxproc  ←⊃HTTPmaxproc[83]          HTTPfolder   ←lmt m2n HTTPfolder    ⋄ HTTPfolder   [httpno]←⊂httpfolder    ⋄ HTTPfolder   ←⊃HTTPfolder[84]          HTTPwssize   ←lmt m2n HTTPwssize    ⋄ HTTPwssize   [httpno]←⊂httpwssize    ⋄ HTTPwssize   ←⊃HTTPwssize[85]          HTTPabandon  ←lmt m2n HTTPabandon   ⋄ HTTPabandon  [httpno]←⊂httpabandon   ⋄ HTTPabandon  ←⊃HTTPabandon[86]          HTTPcheck    ←lmt m2n HTTPcheck     ⋄ HTTPcheck    [httpno]←⊂httpcheck     ⋄ HTTPcheck    ←⊃HTTPcheck[87]          HTTPshutdown ←lmt m2n HTTPshutdown  ⋄ HTTPshutdown [httpno]←⊂httpshutdown  ⋄ HTTPshutdown ←⊃HTTPshutdown[88]      :endif[89]  [90]      res←'Quit'[91]  [92]  :case 'Quit' ⍝ Deleting "other" variables[93]  [94]  :endselect    ∇