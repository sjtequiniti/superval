    ∇ ⍙⍙res←MembGroup HPC_Process ⍙⍙inputDir;⍙⍙objects;⍙⍙package;⍙⍙File;⍙⍙worker;⍙⍙MESS;⍙⍙xxx;REC∆ASCII;⍙⍙rundesc;⍙⍙InputDirUNC;⍙⍙taskID;⍙⍙reason;⍙⍙HeldTie;⍙⍙membtab;⍙⍙splits;⍙⍙nomemb;⍙⍙startrec;∆;⍙⍙seq;⍙⍙runs;⍙⍙inputDir;InputDir;⍙⍙cn;⍙⍙ctie;DECRFile;⍙⍙maxtries;⍙⍙tries
[1]   ⍝ HPCWIN.sf#5
[2]   ⍝ Create a sub-process to process a valuation
[3]   ⍙⍙res←⍙⍙SubProcKeys
[4]   
[5]   ⍙⍙membtab←⍙⍙MembTable for BatchRow=⍙⍙MembTable at 'row'
[6]   ⍙⍙splits←↑⍙⍙membtab at 'splits'
[7]   :if NUMRECS≠↑⍙⍙membtab at 'members'
[8]       ⍝⍝⍝ Perhaps adjust ⍙⍙splits if members different from expected
[9]   :endif
[10]  ⍙⍙nomemb←DIFF (⍙⍙startrec←0,+\(⍙⍙splits-1)/⌈NUMRECS÷⍙⍙splits),NUMRECS
[11]  ⍙⍙maxtries←100
[12]  
[13]  ⍙⍙runs←spin (1+⍳⍙⍙splits) ⍙⍙startrec ⍙⍙nomemb
[14]  :for ∆ :in ⍙⍙runs ⋄ (⍙⍙seq ⍙⍙startrec ⍙⍙nomemb)←∆
[15]      ⍙⍙worker←⍙⍙MethSubProc,'_',(⍕ResultsCategoryID),(⍙⍙splits>1)/'.',⍕⍙⍙seq   ⍝ Make unique if category split
[16]      ⍙⍙InputDirUNC←FolderToUNC InputDir←⍙⍙inputDir,⍙⍙worker,'\'
[17]      ⍙⍙rundesc←' ' join (↑('MF'=SelSex)/'Male' 'Female') 'Category' basisDesc 'from' basisFile
[18]  
[19]      :if WCreateDirectory InputDir
[20]          ⍙⍙HeldTie←(InputDir 'Valuation Sub-Process' (TieNumber '')) FolderHeld 'Start'
[21]  
[22]          0 0⍴⎕ex 'REC∆ASCII'
[23]          NUMRECS←⍙⍙nomemb+recn←⍙⍙startrec
[24]          REC∆ASCII←'ASCII' Read∆DataFile dattie 0 RECL (NUMRECS-recn) recn ⍝ Read Membership Data
[25]          :if ⍙⍙seq=⍙⍙splits ⋄ NERASE dattie ⋄ :endif                       ⍝ Only if final split
[26]  
[27]          DECRFile←⍙⍙File←⍙⍙InputDirUNC,⍙⍙worker,'.SF'              ⍝ DECRFile is fudge to avoid FDUP function
[28]  
[29]          ⍙⍙objects←m2n ⎕nl 2 3                                     ⍝ ⍙⍙package up the workspace as it is
[30]          ⍙⍙objects←⍙⍙objects~(m2n vml⍙nl OVER ch⍙nl OVER ps⍙nl OVER ⊃'pdef' 'Win∆ProgressBar2' 'OutputDir' 'LibraryDir'),qtrim¨m2n ⎕si ⍝ Remove any (easily removed) unneeded functions (including stack which won't go)
[31]          ⍙⍙objects←(~(2↑¨⍙⍙objects)∊⊂'⍙⍙')/⍙⍙objects
[32]          ⍙⍙objects←⍙⍙objects~'BatchRow' 'ValuationRunList',hpcHTTP/⊂'InputDir'                                           ⍝ Remove any variables currently in use
[33]          ⍙⍙objects←⍙⍙objects~'⍙RULESdict' '⍙VALUESdict' 'CtxidUrl' '⍙POPUPSdict' 'ParametersTable' 'FormCode'            ⍝ Remove big variables not required
[34]          ⍙⍙objects←⍙⍙objects~' ' partition SVRBGLOBALS
[35]          ⍙⍙package←'deflate best_compression no_header memory_level=9 wrapl=1' ⎕dr pack ⊃⍙⍙objects
[36]  
[37]          :if ~FileExist ⍙⍙File                                     ⍝ Put Valuation State in File in ⍙⍙worker folder
[38]              ⍙⍙tries←0
[39]              :repeat
[40]                  0 0⍴CreateFile ⍙⍙File
[41]              :until FileExist ⍙⍙File ⋄ :orif ⍙⍙maxtries=⍙⍙tries←⍙⍙tries+1
[42]              :if ⍙⍙maxtries=⍙⍙tries
[43]                  ⍙⍙MESS←'ERROR:  Sub-Process Valuation Task for "',⍙⍙rundesc,'" failed to create Valuation Soup file' ⋄ ⍙⍙reason←'Failed to create Valuation Soup file'
[44]                  →err
[45]              :endif
[46]          :endif
[47]          ⍙⍙tries←0
[48]          :repeat
[49]              ⍙⍙cn←⍙⍙File SaveToFile 'Valuation State' '' '' 0
[50]              ⍙⍙ctie←TieNumber ⍙⍙File
[51]          :until ''≡⎕fread ⍙⍙ctie,⍙⍙cn ⋄ :orif ⍙⍙maxtries=⍙⍙tries←⍙⍙tries+1
[52]          :if ⍙⍙maxtries=⍙⍙tries
[53]              ⍙⍙MESS←'ERROR:  Sub-Process Valuation Task for "',⍙⍙rundesc,'" failed to create component for Valuation Soup' ⋄ ⍙⍙reason←'Failed to create component for Valuation Soup'
[54]              →err
[55]          :endif
[56]          ⍙⍙tries←0
[57]          :repeat
[58]              0 0⍴⍙⍙File SaveToFile 'Valuation State' '' ⍙⍙package 0
[59]              ⍙⍙ctie←TieNumber ⍙⍙File
[60]          :until ⍙⍙package≡⎕fread ⍙⍙ctie,⍙⍙cn ⋄ :orif ⍙⍙maxtries=⍙⍙tries←⍙⍙tries+1
[61]          :if ⍙⍙maxtries=⍙⍙tries
[62]              ⍙⍙MESS←'ERROR:  Sub-Process Valuation Task for "',⍙⍙rundesc,'" failed to load Valuation Soup' ⋄ ⍙⍙reason←'Failed to load Valuation Soup'
[63]              →err
[64]          :endif
[65]          ⎕funtie ⍙⍙ctie
[66]  
[67]          :select ⍙⍙MethSubProc
[68]          :case 'APL'
[69]              ⍙⍙taskID←0
[70]              :if ~↑(⍙⍙xxx ⍙⍙MESS)←HPC_APLWorker ⍙⍙worker               ⍝ Initilaise ⍙⍙worker task and do Valuation Run
[71]                  ⍙⍙reason←'Sub-Process Valuation Task failed during Initialisation' ⋄ →err
[72]              :endif
[73]          :case 'HTTP'
[74]              :if ~×zwb ↑(⍙⍙taskID ⍙⍙MESS)←HPC_HTTPWorker '\' Win∆Child ⍙⍙File
[75]                  ⍙⍙reason←'Sub-Process Valuation Task failed during Initialisation' ⋄ →err
[76]              :endif
[77]          :case 'HPC'
[78]          :endselect
[79]          ⍙⍙res←⍙⍙res OVER ⍙⍙worker ResultsCategoryID InputDir ⍙⍙InputDirUNC ⍙⍙seq (recn+1) NUMRECS newent 0 0 ⍙⍙rundesc ⍙⍙taskID MembGroup ClassID SelSex basisDesc ScenarioDesc ⍙⍙HeldTie 0
[80]          VALN∆LOG 'VarReset'
[81]      :else
[82]          ⍙⍙MESS←'ERROR:  Sub-Process Valuation Task for "',⍙⍙rundesc,'" failed to create sub-process Folder - ',InputDir ⋄ ⍙⍙reason←'Failed to create sub-Process folder'
[83]          →err
[84]      :endif
[85]      :continue
[86]  
[87]  err:⍙⍙MESS VALN∆LOG 'Add'
[88]      VALN∆LOG 'Write'
[89]      AbortedRuns←AbortedRuns OVER ClassID SelSex basisDesc ScenarioDesc ⍙⍙reason
[90]      :if ~unattended ⋄ MDISPLAY ⍙⍙MESS ⋄ :endif
[91]  :endfor
    ∇
