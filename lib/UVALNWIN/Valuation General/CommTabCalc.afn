    ∇ Z←prop CommTabCalc arg;Ind∆Ongoing;Ind∆Output;Upin∆pp;SL∆pp;Con∆pp;ExitProbs∆pp;Dec∆pp;BenType∆pp;GP∆pp;ProRate∆pp;msk;IncType∆pp;Inc∆pp;∆;sex;comfacs;Start∆pp;ABno∆pp;VFYear∆pp;sppen;VFtables
[1]   ⍝ UVALNWIN.sf#3
[2]   ⍝ Value some "dummy" benefits to generate Commutation Factors
[3]   ⍝  prop is the proportion of Valuation Basis
[4]   ⍝  arg is made up of:
[5]   ⍝       sex is the sex of the members (SelSex)
[6]   ⍝       type of exit  - either CR or CI
[7]   ⍝       msk is a msk to indicate which Pen Increase Comm Factors are required
[8]   (sex Dec∆pp msk)←arg ⋄ comfacs←(4,NX)⍴0 ⍝ Default Results
[9]   
[10]  :if ∨/msk
[11]      Ind∆Output←PP∆InterfaceHeader 'Ind'
[12]  
[13]      :if Dec∆pp≡'CI' ⋄ SL∆pp←∣×PROBS[;2] ⋄ sppen←~WIHCOMind ⍝ Spouse Pension included in Commutation
[14]      :else           ⋄ SL∆pp←∣×PROBS[;0] ⋄ sppen←~WARCOMind
[15]      :endif
[16]  
[17]      :if ∨/SL∆pp
[18]          SL∆pp←SL∆pp×prop
[19]          Con∆pp←SL∆pp×sppen×WARFRAC∆l ⍝⍝⍝ Slice/PUP Overrides?
[20]          ExitProbs∆pp←NX⍴1
[21]          BenType∆pp←'P'
[22]          GP∆pp←NX⍴GPeriod
[23]          Start∆pp←Age∆pp
[24]          Upin∆pp←0 ⋄ ProRate∆pp←⍬ ⋄ ABno∆pp←'' ⋄ VFYear∆pp←¯1 ⋄ VFtables←0
[25]  
[26]          :for ∆ :in msk/('S' NDYNINC) ('M' DYNINC) ('P3' DYNINC3) ('P4' DYNINC4)
[27]              (IncType∆pp Inc∆pp)←∆
[28]              PP∆CreateInterface
[29]          :endfor
[30]  
[31]          Ind∆Ongoing←Ind∆Output
[32]          comfacs←((+/msk),NX,2)⍴0
[33]          PP∆Projector 1
[34]          comfacs←msk⍀+/comfacs
[35]  
[36]          :if ~test ⋄ :andif basischanged∨CFmissing ⋄ :andif ~neIND ⋄ :andif mt sppen/SPOSTMEMB ⍝ Only for non-New Entrants and w/o any individual Mortality Loading
[37]              :if     Dec∆pp≡'CR' ⋄ :andif mt PPOSTMEMB ⍝ Retirement
[38]                  :if uSERisRSE ⋄ :andif ∨/0≠,RETcomfacs[99⌊X0;;⍳NX] ⋄ :andif ~RETcomfacs[↑99⌊X0;;⍳NX]≡comfacs ⋄ crash ⋄ :endif
[39]                  RETcomfacs[99⌊X0;;⍳NX]←comfacs
[40]              :elseif Dec∆pp≡'CI' ⋄ :andif mt ILLMEMB   ⍝ Ill-Health
[41]                  :if uSERisRSE ⋄ :andif ∨/0≠,ILLcomfacs[   X0;;⍳NX] ⋄ :andif ~ILLcomfacs[↑   X0;;⍳NX]≡comfacs ⋄ crash ⋄ :endif
[42]                  ILLcomfacs[   X0;;⍳NX]←comfacs
[43]              :endif
[44]          :endif
[45]      :endif
[46]  :endif
[47]  Z←⎕split comfacs
    ∇
