    ∇ TOP ⍙DBXL_AOSTables aos∆TOTS;ContingencyID;AOSTypeID;TypeID;n;code;no;defind;recs;maxfield;keys;values
[1]   ⍝ VALNWIN.sf#17
[2]   ⍝ Write AOS Results records for the database
[3]   
[4]   (2 6 'Updating AOS Tables') Win∆ProgressBar2 'FileUpdate'
[5]   (1 1 'Fixed Data Tables') Win∆ProgressBar2 'MemberUpdate'
[6]   
[7]   :if 0=⎕nc 'TOP' ⋄ TOP←' ' ⋄ :endif ⍝ Type of Pension for Pensioners
[8]   defind←4×(1 3 4⍳ClassID)-⎕io
[9]   maxfield←((1 3 4⍳ClassID)⊃'Act' 'Def' 'Pen'),'AOSTypeID'
[10]  
[11]  ⍝ Update the AOSType Table
[12]  AOSTypeID←⍳0 ⋄ recs←0 5⍴0 0 ' ' ' ' 0
[13]  
[14]  :for n :in 1 2 3 4 ⍝⍝⍝ (~⎕io)+⍳4 ⍝ Actives Starter and New Entrant Enders and "blank" Exit Code Starter and New Entrant Exits records
[15]      :if mt TypeID←1 ⍙DBadoCONCommand "SELECT AOSTypeID FROM AOSType WHERE (AOSClassID = ",(⍕n+defind),") AND (AOSTypeID BETWEEN ",(⍕1+ClassBase)," AND ",(⍕9999+ClassBase),")"
[16]          :if 1=⍴,ContingencyID←(n∊3 4)/20 ⋄ ContingencyID←↑ContingencyID ⋄ :endif
[17]          TypeID←1 ⍙DBNextID maxfield
[18]          recs←recs⍪TypeID (n+defind) TOP ' ' ContingencyID
[19]      :endif
[20]      AOSTypeID←AOSTypeID,↑TypeID
[21]  :endfor
[22]  
[23]  :for n :in 1↓⍳↑⍴MOE ⍝ "Non-blank" Exit Code Starter and New Entrant Exits records
[24]      :if ClassID=4 ⋄ ContingencyID←↑¯1↑20,(14 14)                [⎕io+CODEcol[(CODE TLU code←MOE[n;])-~⎕io]]
[25]      :else         ⋄ ContingencyID←↑¯1↑20,(1,(3+3×ClassID=3),4 5)[⎕io+CODEcol[(CODE TLU code←MOE[n;])-~⎕io]]
[26]      :endif
[27]      :if mt TypeID←1 ⍙DBadoCONCommand "SELECT AOSTypeID FROM AOSType WHERE (AOSClassID = ",(⍕3+defind),") AND (AOSPenType = ",(1 ⍙DBString TOP),") AND (AOSExitCode = ",(1 ⍙DBString code),") AND (AOSContingencyID = ",(⍕ContingencyID),") AND (AOSTypeID BETWEEN ",(⍕1+ClassBase)," AND ",(⍕9999+ClassBase),")"
[28]          TypeID←↑2 ⍙DBNextID maxfield
[29]          recs←recs⍪ TypeID    (defind+3) TOP code ContingencyID
[30]          recs←recs⍪(TypeID+1) (defind+4) TOP code ContingencyID
[31]      :endif
[32]      AOSTypeID←AOSTypeID,TypeID+0 1
[33]  :endfor
[34]  
[35]  :if ~mt recs
[36]      'ADOrst' ⎕wi 'XOpen' 'AOSType' ('ADOcon' ⎕wi 'obj') cursor lock
[37]      ⍙DBInsertData¨⎕split recs ⍝⍝⍝ Must do one at a time???
[38]      0 0⍴'ADOrst' ⎕wi 'XClose'
[39]  :endif
[40]  
[41]  :for n :in ⍳↑⍴aos∆TOTS
[42]      (keys values)←ClassID XL_StoreAOSRes aos∆TOTS[n;;]
[43]      keys←⊃(⊂5 0⍕AOSTypeID[n]),¨keys
[44]      (⍙dbaostie '⍙dbaos') ⍙DBInsertTempData keys values
[45]  :endfor
    ∇
