    ∇ ContingencyID PP∆Pension pp∆row;pp∆upin;pp∆TotBen;pp∆TotCon;pp∆FutBen;pp∆FutCon;pp∆midexit;pp∆midret;pp∆midstart;pp∆Xexit;pp∆xexit;pp∆Xret;pp∆xret;pp∆Xstart;pp∆xstart;pp∆exitdisc;pp∆defdisc;pp∆startdisc;pp∆Texit;pp∆Tret;pp∆Tstart;pp∆def;pp∆startpad;pp∆retpad;pp∆defInc;pp∆MarrProp;pp∆discpost;pp∆RGP;pp∆top;pp∆∆;pp∆postInc;pp∆postIncMP;pp∆QX;pp∆SpouseTab;pp∆PropFY;DataItemID;pp∆defLX;pp∆Revonly;pp∆Inconly;pp∆TotCons;pp∆FutCons;pp∆2Dbens;pp∆exitprobs;pp∆xprestart;pp∆Xprestart;pp∆midprestart;pp∆Tprestart;pp∆year;pp∆MidpostInc;pp∆benyear;LiabID;pp∆incdef;pp∆2DTotBen;pp∆2DTotCons;pp∆TotBens;pp∆FutBens
[1]   ⍝ VALNWIN.sf#15
[2]   ⍝ Projection of Cash Flows from a Pension Benefit
[3]   
[4]   ⍝ Death after Retirement Contingency Codes (change if split not required)
[5]   ⍝⍝⍝ SpouseContID←↑∊((⊂⊂pp∆exit)≡¨¨pp∆ExitCodes)sel¨pp∆SpouseContID
[6]   ⍝⍝⍝ :if ~(⊂pp∆exit)∊'D ' 'DL' 'DD' ⋄ SpouseContID←↑¯1↑ContingencyID,(ContingencyID=21 1 2 4 26 5 37 33 32 31)/22 7 12 13 27 14 38 36 35 34
[7]   ⍝⍝⍝ :elseif pp∆exit≡'DD'           ⋄ ContingencyID←SpouseContID←6 ⍝ Required until DIDFudge removed!?? ⍝8.50⍝
[8]   ⍝⍝⍝ :endif
[9]   
[10]  :if isTOut ⋄ :andif 'Amounts' PP∆ExtractBens 1 ⋄ pp∆2DTotBen←pp∆TotBens ⋄ pp∆2DTotCons←pp∆TotCons ⋄ :endif
[11]  :if ~pp∆2Dbens←    'Benefits' PP∆ExtractBens 1 ⋄ pp∆TotCons←,pp∆TotCons ⋄ pp∆FutCons←,pp∆FutCons ⋄ :endif
[12]  
[13]  pp∆upin←pp∆Upin[pp∆row;0] ⍝ Benefit is Underpinned - doesn't work with Aggregated Benefits
[14]  :if test ⋄ :andif pp∆accrued ⋄ :andif ClassID=3 ⋄ :andif ~pp∆2Dbens ⋄ :andif 0=⎕nc 'pp⍙exitprobs' ⋄ pp⍙exitprobs←pp∆exitprobs ⋄ :endif
[15]  
[16]  PP∆PenIncreases
[17]  
[18]  :if pp∆DD ⋄ :andif pp∆2Dbens ⋄ pp∆exitprobs PP∆AccruedDID pp∆row
[19]  :else
[20]      :for pp∆year :in ⍳pp∆NX ⍝ Process each year
[21]          pp∆benyear←pp∆year
[22]          :if pp∆2Dbens ⋄ pp∆TotBen←        ,pp∆TotBens[pp∆year;] ⋄ pp∆FutBen←        ,pp∆FutBens[pp∆year;]
[23]                        ⋄ pp∆TotCon←pp∆year↓,pp∆TotCons[pp∆year;] ⋄ pp∆FutCon←pp∆year↓,pp∆FutCons[pp∆year;]
[24]          :else         ⋄ pp∆TotBen←         pp∆TotBens           ⋄ pp∆FutBen←         pp∆FutBens
[25]                        ⋄ pp∆TotCon←         pp∆TotCons[pp∆year ] ⋄ pp∆FutCon←         pp∆FutCons[pp∆year ]
[26]          :endif
[27]          :if ^/0=pp∆TotBen[pp∆year],pp∆TotCon ⋄ :continue ⋄ :endif ⍝ Only process non-zero benefits
[28]  
[29]          pp∆RGP←pp∆GP[pp∆row;pp∆year]
[30]  ⍝⍀⍝        VARIABLE_ALIASES←VARIABLE_ALIASES amend 'GP∆pp' 'pp∆RGP'
[31]  ⍝⍀⍝        '' PP∆TestUpdate ⊂'pp∆RGP'
[32]  
[33]          PP∆Terms ''
[34]          pp∆size PP∆PenParms pp∆exit
[35]          :if pp∆top≠0 ⋄ :andif pp∆top≤pp∆Xstart ⋄ :continue ⋄ :endif
[36]          :if pp∆Xill2D ⋄ :andif (⊂pp∆exit)∊'I ' 'I2' 'P ' 'PD' 'PR' 'P2' ⋄ pp∆xexit PP∆SelectMort 'Xill2D' ⋄ :endif
[37]          PP∆Deferral 0
[38]          :if PP∆Payment ⋄ :continue ⋄ :endif
[39]  
[40]          :if pp∆benyear=↑pp∆VFYear[pp∆row;] ⋄ :orif VFtables
[41]              LiabID←((∨/0≠↑,/,¨(pp∆TotBen-pp∆FutBen) (pp∆TotCon-pp∆FutCon)),∨/0≠↑,/,¨pp∆FutBen pp∆FutCon)/1 2
[42]              pp∆incdef←PP∆FactorsIncDef
[43]          :endif
[44]  
[45]          :if (⊂pp∆exit)∊'D ' 'DL' ⍝⍝⍝ 'DT' 'DO'
[46]              :if pp∆Ydis2D ⋄ (29+pp∆∆) PP∆SelectMort 'Ydis2D' ⋄ :endif
[47]              PP∆Death
[48]          :else
[49]              :if ~pp∆Revonly   ⋄         PP∆Pen_Primary             ⋄ :endif
[50]              :if ∨/0≠pp∆TotCon ⋄ pp∆exit PP∆Pen_Spouse spouseContID ⋄ :endif
[51]          :endif
[52]      :endfor
[53]  :endif
[54]  
[55]  :if ⍙dbresults
[56]      DataItemID←11+4××pp∆End[pp∆row;0] ⍝ For Life or Temporary
[57]      0 0⍴'Amounts' PP∆ExtractBens 1
[58]      :if pp∆accrued
[59]          ⍙dbbenproj←⍙dbbenproj⍪((BenefitTypeID ContingencyID 3 DataItemID) pp∆dbX0 term) ⍙DBValnRecords -↑pp∆TotBens
[60]          :if ~(⊂pp∆exit)∊'D ' 'DL' 'DD' 'DT' 'DO'
[61]              ⍙dbbenproj←⍙dbbenproj⍪((BenefitTypeID spouseContID 3 DataItemID) pp∆dbX0 term) ⍙DBValnRecords -↑,pp∆TotCons
[62]          :endif
[63]          ⍙DBAddAccrued
[64]      :else
[65]          ⍙dbbenproj←⍙dbbenproj⍪((BenefitTypeID ContingencyID 1 DataItemID) pp∆dbX0 term) ⍙DBValnRecords (↑pp∆FutBens)-↑pp∆TotBens
[66]          ⍙dbbenproj←⍙dbbenproj⍪((BenefitTypeID ContingencyID 2 DataItemID) pp∆dbX0 term) ⍙DBValnRecords -↑pp∆FutBens
[67]          :if ~(⊂pp∆exit)∊'D ' 'DL' 'DD' 'DT' 'DO'
[68]              ⍙dbbenproj←⍙dbbenproj⍪((BenefitTypeID spouseContID 1 DataItemID) pp∆dbX0 term) ⍙DBValnRecords (↑,pp∆FutCons)-↑,pp∆TotCons
[69]              ⍙dbbenproj←⍙dbbenproj⍪((BenefitTypeID spouseContID 2 DataItemID) pp∆dbX0 term) ⍙DBValnRecords -↑,pp∆FutCons
[70]          :endif
[71]          ⍙DBAddResults
[72]      :endif
[73]  :endif
    ∇
