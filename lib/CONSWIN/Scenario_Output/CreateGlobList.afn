    ∇ ScenGlobList←CreateGlobList;BasisIDs;sqlcond;IDs;ID;data;curr;new;sql;tab;msk;vals;∆;basis;Basistabs;bases;irrelevant;basIDs
[1]   ⍝ CONSWIN.sf#21
[2]   ⍝ Create the "ScenGlobList" variable required for Scenarios Excel Output
[3]   
[4]   sqlcond←sqlDatabase/'AND DatabaseID=',DBID ⍝ SQL Server Database ID
[5]   
[6]   ⍝ Select unique BasisCategoryIDs for each Scenario ID
[7]   BasisIDs←nub (ValuationRunList for 0≠ValuationRunList at 'ScenarioID') at 'BasisCategoryID'
[8]   ⍝ Get the sets of Scenario Basis Parameters used (indicated by starting ##,000 number)
[9]   IDs←nub ,1 ⍙DBadoCONCommand 'SELECT BasisItemID FROM BasisData WHERE BasisCategoryID IN ',('()' embrace 0 ⍙DBNumList BasisIDs),' AND BasisItemID BETWEEN 40000 AND 1000000',sqlcond
[10]  data←('ID' 'type' 'Desc') OVER DLTB¨1 ⍙DBadoCONCommand 'SELECT BasisItemID, BasisItemName, BasisItemDesc FROM BasisItem WHERE BasisItemID IN ',('()' embrace 0 ⍙DBNumList IDs),sqlcond,' ORDER BY BasisItemID'
[11]  
[12]  ⍝ Map the database descriptions back to "original" descriptions
[13]  curr←'Data'        'Fin'       'ParmsM'    'ParmsMS'   'ParmsI'                'ParmsX'         'ParmsD'     'ParmsW' 'ParmsR'             'ParmsT'             'ParmsL'          'ParmsS'          'ParmsN'
[14]  new ←'Scheme Data' 'Financial' 'Mortality' 'Mortality' 'Mortality Improvement' 'Retirement Age' 'Decrements' 'Spouse' 'Retirement Factors' 'Commutation Tables' 'Retirement Cash' 'Spreading Dates' 'New Entrants'
[15]  data[;2]←new curr mapp DLTB¨data[;2]
[16]  
[17]  ⍝ Pivot the Scenario Parameters
[18]  basIDs←(15/0),BasisIDs ⋄ tab←data at 'ID'
[19]  :while ~mt ∆←(15↑basIDs←15↓basIDs)~0
[20]      sql←⍙DBPivot "MAX" "BasisItemData" "BasisData" ('BasisCategoryID IN ',('()' embrace 0 ⍙DBNumList ∆),' AND BasisItemID BETWEEN 40000 AND 1000000') "BasisItemID" "BasisCategoryID" ∆
[21]      tab←tab,DLTB¨1↓[2](↑¨data at 'ID') XL_Pivot sql '⍺'
[22]  :endwhile
[23]  tab←(1⌈⍴¨tab)↑¨tab←((⊂'ID'),⍕¨BasisIDs) OVER tab
[24]  
[25]  Basistabs←0⍴⊂''
[26]  :for basis :in nub bases←spin ValuationRunList at 'BasisFile' 'BasisDesc'
[27]      ∆←nub (ValuationRunList for (0≠ValuationRunList at 'ScenarioID')^(⊂basis)≡¨bases) at 'BasisCategoryID'
[28]      Basistabs←Basistabs,⊂tab[;1,(keysIn tab)⍳⍕¨∆]
[29]  :endfor
[30]  irrelevant←'⍺'∊¨¨Basistabs
[31]  ScenGlobList←0⍴⊂''
[32]  :repeat
[33]      :if 1<⍴Basistabs
[34]      :andif ∆←∨/^/¨,¨1↓(⊂↑irrelevant)∨¨irrelevant∨(⊂↑Basistabs)≡¨¨Basistabs
[35]          basis←⍉nub¨spin (1,∆)/Basistabs
[36]          ScenGlobList←ScenGlobList,⊂1↓[2]data,1↓[2](⊂', ') join¨↑¨basis~¨⊂⊂1⍴'⍺'
[37]          Basistabs←(1,~∆)/Basistabs ⋄ irrelevant←(1,~∆)/irrelevant
[38]      :else
[39]          ScenGlobList←ScenGlobList,⊂1↓[2]data,1↓[2](⊂'⍺ ') REPL¨↑Basistabs
[40]          Basistabs←1↓Basistabs ⋄ irrelevant←1↓irrelevant
[41]      :endif
[42]  :until mt Basistabs
[43]  
[44]  ScenGlobList←ScenGlobList groupby¨(⊂⊂'type'),¨(⊂¨1↓¨keysIn¨ScenGlobList) ⍝ Convert to a dictionary
    ∇
