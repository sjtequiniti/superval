    ∇ res←field Scenario_Output parm;parent;list;tab;msk;keys;sIDs;XLfile;ParmDesc;ParmTS;ScenGlobList;value;idx;ValuationRunList[1]   ⍝ CONSWIN.sf#21[2]   ⍝ Function to allow user control on Scenario Excel Output Details[3]   [4]   parent←'fmScenario_Output.' ⋄ res←0⍴'' ⍝ Default response[5]   [6]   :select parm[7]   [8]   :case 'Prepare'[9]       :if ~sqlDatabase ⋄ progid←⍙DBAccessProvider 0 ⋄ :endif[10]      ConsIndex←CreateValnRunIndex 0[11]      ConsIndex←ConsIndex for ~(⊂'PP')≡¨2↑¨ConsIndex at 'method' ⍝ Remove PPF runs[12]      RunIndex←MATRIX keysIn ConsIndex[13]      compfields←'method' 'capped' 'contper' 'insinc' 'targetAB' 'desc' ⍝⍝⍝ 'vdate' ??? ASM can do different vDATEs[14]      excelMonitor←0[15]  [16]  :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)[17]  [18]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)[19]      :if 0=rowsIn ConsIndex ⋄ :orif ^/(⊂'Primary Basis')≡¨ConsIndex at 'scenario'[20]          res←'NoResults' ⋄ :return[21]      :endif[22]  [23]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)[24]  [25]      :repeat[26]          :select ↑field[27]          :case 'lvScenarios'[28]              value←(parent,'lvScenarios') ⎕wi 'value'[29]              list←(parent,'lvScenarios') ⎕wi 'list'[30]              scenariolist←⊃(list[;1]∊value)/list[;3][31]              RunIndex←ConsIndex for 'scenario' 'Primary Basis',m2n scenariolist[32]              :if ~mt scenariolist[33]                  msk←↑^/(⊂spin RunIndex at compfields)∊¨spin¨((⊂RunIndex) for¨(⊂⊂'scenario'),¨⊂¨m2n scenariolist) at¨⊂compfields[34]                  RunIndex←RunIndex for msk[35]              :endif[36]              0 0⍴(⊂'ckPrimaryOnly') Scenario_Output 'Change'[37]          :case 'ckPrimaryOnly'[38]              tab←RunIndex[39]              :if (parent,'ckPrimaryOnly') ⎕wi 'value'[40]                  tab←RunIndex for 'scenario' 'Primary Basis'[41]              :endif[42]              ((parent,'lvruns') 'Scenario_Output') Win∆UpdateListview GetRunList tab[43]          :endselect[44]      :until mt field←1↓field[45]  [46]  :case 'Spin'[47]  [48]      (parent,'lvScenarios') Sel∆Spin field[49]  [50]  :case 'Valid' ⍝ Routine specific validation[51]  [52]      keys←'scenario' 'method' 'desc' 'OutFile' 'RunTime' 'Version' 'User' 'capped' 'contper' 'insinc' 'targetAB' 'vdate' 'ExactAge' 'ALM/LDI' 's143' 'NERun' 'AOS' 'PrevVDate'[53]      runsTab←keys OVER ⊃m2n¨SStoMAT¨m2n runs[54]  [55]      :if zwb PrimaryOnly ⍝ Add Scenario runs to selected Primary runs[56]          runsTab←RunIndex for (spin DLTB¨¨RunIndex at compfields)∊(spin runsTab at compfields)[57]      :else[58]          runsTab←RunIndex for (spin DLTB¨¨RunIndex at (⊂'scenario'),compfields)∊(spin runsTab at (⊂'scenario'),compfields)[59]      :endif[60]  [61]      res←Scenario_Output_Valid runsTab[62]  ⍝⍝⍝    list←(parent,'lvruns') ⎕wi 'list'[63]  ⍝⍝⍝    value←(parent,'lvruns') ⎕wi 'value'[64]  ⍝⍝⍝    list←(list[;1]∊value)⌿list[65]  [66]  ⍝⍝⍝    :if ∨/(⊂':...........')≡¨12↑¨list ⍝ Check for NEMs[67]  ⍝⍝⍝        z←(parent,'lvruns') ⎕wi '∆sortlist'[68]  ⍝⍝⍝        no←⍳0[69]  ⍝⍝⍝        :for n :in ⍳↑⍴z ⋄ no←no,+/(n⊃z)∊value ⋄ :endfor[70]  ⍝⍝⍝        :if ∨/no>2[71]  ⍝⍝⍝            Win∆SetFocus parent,'lvruns'[72]  ⍝⍝⍝            res←'1NEMrun' ⋄ :return[73]  ⍝⍝⍝        :elseif ∨/(×no)^~(,⊃1↑¨z)∊value[74]  ⍝⍝⍝            Win∆SetFocus parent,'lvruns'[75]  ⍝⍝⍝            res←'NEMparent' ⋄ :return[76]  ⍝⍝⍝        :endif[77]  ⍝⍝⍝    :endif[78]  [79]  :case 'Run'[80]  [81]      'Creating Scenarios Output' Win∆ProgressBar 'Open'[82]  [83]      runsTab←runsTab amend 'vdate' ((⊂'DD/MM/YYYY') DATEEXP¨runsTab at 'vdate')[84]  [85]      ValuationRunList←MATRIX 'ResultsCategoryID' 'BasisCategoryID' 'ScenarioID' 'ClassID' 'vDATE' 'BasisFile' 'BasisDesc'[86]      ValuationRunList←ValuationRunList OVER ⊃spin runsTab at 'ID' 'BasisID' 'scenarioID' 'classid' 'vdate' 'basisfile' 'basisdesc'[87]      ValuationRunList←ValuationRunList amend 'ExcelDelay' ((rowsIn ValuationRunList)⍴0)[88]      ValuationRunList←ValuationRunList amend 'VFmissing'  ((rowsIn ValuationRunList)⍴0)[89]      ValuationRunList←ValuationRunList amend 'Skipped'    ((rowsIn ValuationRunList)⍴0)[90]  [91]      sIDs←0,(spin nub spin runsTab at 'scenario' 'scenarioID') map m2n 1↓[2]MATRIX Scenarios[92]      idx←⍋sIDs⍳ValuationRunList at 'ScenarioID'[93]      ValuationRunList←ValuationRunList[1+0,idx;][94]  [95]      (ParmDesc ParmTS)←↑¨((ClientFile ReadFile 'Index') for '∆_CompNo' (↑ControlName ⎕wi '∆savecn')) at '∆_Description' '∆_TimeModified'[96]      ParmTS←⍙DBTimeStamp ParmTS[97]  [98]      'ScenOutput_CoverFn' Win∆ProgressBar 'Start'[99]  [100]     Win∆ProgressBar 'Close'[101] [102]     :if 0≠⎕nc 'XLfile' ⋄ :andif 'Y'='YN' ASK 'Open Scenario Excel Output?'[103]         ¯1 Win∆EditFile XLfile[104]     :endif[105] [106]     res←'Quit'[107] [108] :case 'Quit' ⍝ Deleting "other" variables[109]     0 0⍴⎕ex 'ConsIndex RunIndex progid scenariolist compfields runsTab excelMonitor'[110]     0 0⍴⎕ex 'vALmETH bENcAP nOTpuc DaB iNSiND cONTpER'[111] [112] :endselect    ∇