    ∇ ⍙DBXL_ScenAccrueds;no;rIDs;tab;col;sql;abtot[1]   ⍝ CONSWIN.sf#21[2]   ⍝ Populate Excel with the Accrued Benefits[3]   [4]   1 XL_ActivateWorksheet 'Accrueds'[5]   'D↑' XL_RangeInsert 13 ⍬ (10+SIZE) ⍬[6]   (12 2 12 3) XL_PasteAll 13 2 (10+SIZE) 3[7]   [8]   ⍝ Insert Scenario columns as required and some shading[9]   (SIZE+1) Prepare_XLSheet 5,9 8 7 6+NoScen-2[10]  [11]  :for no :in ⍳⍴sIDs[12]      (no (2×⍴sIDs) ('Accrued Benefits:  ',↑((⊂'Primary Basis'),descs)[no])) Win∆ProgressBar 'MemberUpdate'[13]  [14]      :if ~mt rIDs←(RunList for 'ScenarioID' (sIDs[no])) at 'ResultsCategoryID'[15]          ⍝ Expect a two column response - year (minimum value of 1) and then values[16]          sql←"SELECT SVYear,SUM(SVValue) FROM ResultsData WHERE ResultsCategoryID IN (",(0 ⍙DBNumList rIDs),") AND LiabilityTypeID IN (%1) GROUP BY SVYear"[17]          ⍝ Acturial Value of Accrued Benefits plus Acturial Value of Emerging Benefits (if requested) - Total PSL[18]          abtot←-SIZE↑(⊂10 11) ⍙DBSQLRead sql[19]          0 0⍴(⍉MATRIX abtot) XL_Data RCtoA1 11 (3+no) (10+SIZE) (3+no)[20]      :endif[21]  :endfor[22]  [23]  (12 (4+NoScen) 12 (4+5×NoScen-1)) XL_PasteFormulas 11 (4+NoScen) (10+SIZE) (4+5×NoScen-1)[24]  [25]  0 0⍴'XL' ⎕wi 'xCalculation' (↑⍙XL at '=xlCalculationSemiautomatic') ⍝ Turn Calculation back on[26]  XL_AutoFit 1 4 (10+SIZE) (9+6×NoScen-2)[27]  0 0⍴'XL' ⎕wi 'xCalculation' (↑⍙XL at '=xlCalculationManual') ⍝ Turn calculation off[28]  'Accrueds' XL_ProtectSheet 1[29]  [30]  1 XL_ActivateWorksheet 'AccGraph'[31]  :for no :in 1↓⍳⍴sIDs[32]      0 0⍴(((((('XL.wb' ⎕wi 'xWorksheets') ⎕wi 'XItem' 'AccGraph') ⎕wi 'XChartObjects') ⎕wi 'xItem' 1) ⎕wi 'xChart') ⎕wi 'XSeriesCollection') ⎕wi 'XAdd' ('=Accrueds!',(RCtoA1 7 (3+no)),',Accrueds!',RCtoA1 11 (3+no) (11+SIZE) (3+no)) 2 1 0 0[33]  :endfor[34]  (((((('XL.wb' ⎕wi 'xWorksheets') ⎕wi 'XItem' 'AccGraph') ⎕wi 'XChartObjects') ⎕wi 'xItem' 1) ⎕wi 'xChart') ⎕wi 'xLegend' ) ⎕wi 'xPosition' (↑⍙XL at '=xlLegendPositionBottom')[35]  'AccGraph' XL_ProtectSheet 1[36]  [37]  ⍝ Discountinuance Benefits[38]  1 XL_ActivateWorksheet 'Discontinuance'[39]  'D↑' XL_RangeInsert 13 ⍬ (10+SIZE) ⍬[40]  (12 2 12 3) XL_PasteAll 13 2 (10+SIZE) 3[41]  [42]  ⍝ Insert Scenario columns as required and some shading[43]  SIZE Prepare_XLSheet 5,9 8 7 6+NoScen-2[44]  [45]  :for no :in ⍳⍴sIDs[46]      ((no+⍴sIDs) (2×⍴sIDs) ('Discontinuance Benefits:  ',↑((⊂'Primary Basis'),descs)[no])) Win∆ProgressBar 'MemberUpdate'[47]  [48]      :if ~mt rIDs←(RunList for 'ScenarioID' (sIDs[no])) at 'ResultsCategoryID'[49]          ⍝ Expect a two column response - year (minimum value of 1) and then values[50]          sql←"SELECT SVYear,SUM(SVValue) FROM ResultsData WHERE ResultsCategoryID IN (",(0 ⍙DBNumList rIDs),") AND LiabilityTypeID IN (%1) GROUP BY SVYear"[51]          ⍝ Acturial Value of Accrued Benefits plus Acturial Value of Emerging Benefits (if requested) - Total PSL[52]          abtot←-SIZE↑(⊂9 11) ⍙DBSQLRead sql[53]          0 0⍴(⍉MATRIX abtot) XL_Data RCtoA1 11 (3+no) (10+SIZE) (3+no)[54]      :endif[55]  :endfor[56]  [57]  (12 (4+NoScen) 12 (4+5×NoScen-1)) XL_PasteFormulas 11 (4+NoScen) (10+SIZE) (4+5×NoScen-1)[58]  [59]  0 0⍴'XL' ⎕wi 'xCalculation' (↑⍙XL at '=xlCalculationSemiautomatic') ⍝ Turn Calculation back on[60]  XL_AutoFit 1 4 (10+SIZE) (9+6×NoScen-2)[61]  0 0⍴'XL' ⎕wi 'xCalculation' (↑⍙XL at '=xlCalculationManual') ⍝ Turn calculation off[62]  'Discontinuance' XL_ProtectSheet 1[63]  [64]  1 XL_ActivateWorksheet 'DiscGraph'[65]  :for no :in 1↓⍳⍴sIDs[66]      0 0⍴(((((('XL.wb' ⎕wi 'xWorksheets') ⎕wi 'XItem' 'DiscGraph') ⎕wi 'XChartObjects') ⎕wi 'xItem' 1) ⎕wi 'xChart') ⎕wi 'XSeriesCollection') ⎕wi 'XAdd' ('=Discontinuance!',(RCtoA1 7 (3+no)),',Discontinuance!',RCtoA1 11 (3+no) (11+SIZE) (3+no)) 2 1 0 0[67]  :endfor[68]  (((((('XL.wb' ⎕wi 'xWorksheets') ⎕wi 'XItem' 'DiscGraph') ⎕wi 'XChartObjects') ⎕wi 'xItem' 1) ⎕wi 'xChart') ⎕wi 'xLegend' ) ⎕wi 'xPosition' (↑⍙XL at '=xlLegendPositionBottom')[69]  'DiscGraph' XL_ProtectSheet 1    ∇