    ∇ ⍙DBXL_Scen∆BASES;NoBases;ClassBase;Cat;sql;data;N;ID;z;col;ClassID;color;∆[1]   ⍝ CONSWIN.sf#21[2]   ⍝ Fn to output the basis details for the runs consolidated[3]   ⍝[4]   ⍝[5]   ⍝[6]   ⍝ V2.50u RE 1/11/93 Standardised[7]   ⍝ Valuation Run History[8]   :for ID :in runs[9]       :if 3 XL_RunDetails ID ⋄ :andif ecflag ⋄ crash ⋄ :endif[10]  :endfor[11]  [12]  sql←"SELECT BasisFile, BasisCategoryID, DataCategory, BasisDescription, ScenarioDescription, BasisCategory, ResultsCategoryID FROM ResultsCategory WHERE ResultsCategoryID IN ("[13]  color←((NoScen-1)⍴colors[;1]),0[14]  [15]  ⍝ Basis Details for each Membership Class[16]  :if ~mt runsA[17]      data←DLTB¨1 ⍙DBadoCONCommand sql,(0 ⍙DBNumList runsA~runsNE),")"[18]      :if z←^/data[1;1]≡¨data[;1] ⋄ 0 0⍴data[1;1] XL_Data 'ActBasisFile'[19]      :else                       ⋄ 0 0⍴'Various' XL_Data 'ActBasisFile'[20]      :endif[21]      data←data[(↑¨data[;7])⍳runsA~runsNE;][22]      ClassID←1 ⋄ ClassBase←20000 ⋄ NoBases←0 ⋄ 0 XL_ActivateWorksheet 'ActBases'[23]      :for N :in ⍳⍴,runsA~runsNE[24]          ID←(,runsA~runsNE)[N][25]          (N (⍴runs) ('Actives:  ',↑data[N;4])) Win∆ProgressBar 'MemberUpdate'[26]  [27]          Cat←(⍕10000∣data[N;2]),'()' embrace ⊃data[N;3] ⍝ Can get Category clashes[28]          NoBases←NoBases+×col←Cat ⍙DBXL_BasisWrite -ID[29]          :if 0≠col[30]              :if ~z ⋄ 0 0⍴data[N;1] XL_Data RCtoA1 6 col ⋄ :endif[31]              0 0⍴data[N;5] XL_Data RCtoA1 8 col[32]              :if VaryVDate[33]                  0 0⍴(,'<''>,ZI2,</>,ZI2,</>,ZI4' ⎕fmt MATRIX ↑(RunList for 'ResultsCategoryID' ID) at 'vDATE') XL_Data RCtoA1 5 col[34]              :endif[35]              :if 0≠∆←color[descs⍳data[N;5]][36]                  'XL' ⎕wi 'Range>.Rng' (RCtoA1 8 col)[37]                  ('XL.Rng' ⎕wi 'xInterior') ⎕wi 'xColor' ∆[38]              :endif[39]          :endif[40]      :endfor[41]      XL_AutoFit 4⍴8 ⍬[42]      'ActBases' XL_ProtectSheet 1[43]      0 0⍴NoBases XL_Data 'NoActBases'[44]  :endif[45]  [46]  :if ~mt runsD[47]      data←DLTB¨1 ⍙DBadoCONCommand sql,(0 ⍙DBNumList runsD),")"[48]      :if z←^/data[1;1]≡¨data[;1] ⋄ 0 0⍴data[1;1] XL_Data 'DefBasisFile'[49]      :else                       ⋄ 0 0⍴'Various' XL_Data 'DefBasisFile'[50]      :endif[51]      data←data[(↑¨data[;7])⍳runsD;][52]      ClassID←3 ⋄ ClassBase←10000 ⋄ NoBases←0 ⋄ 0 XL_ActivateWorksheet 'DefBases'[53]      :for N :in ⍳⍴,runsD[54]          ID←(,runsD)[N][55]          ((N+⍴runsA) (⍴runs) ('Deferreds:  ',↑data[N;4])) Win∆ProgressBar 'MemberUpdate'[56]  [57]          Cat←(⍕10000∣data[N;2]),'()' embrace ⊃data[N;3] ⍝ Can get Category clashes[58]          NoBases←NoBases+×col←Cat ⍙DBXL_BasisWrite -ID[59]          :if 0≠col[60]              :if ~z ⋄ 0 0⍴data[N;1] XL_Data RCtoA1 6 col ⋄ :endif[61]              0 0⍴data[N;5] XL_Data RCtoA1 8 col[62]              :if VaryVDate[63]                  0 0⍴(,'<''>,ZI2,</>,ZI2,</>,ZI4' ⎕fmt MATRIX ↑(RunList for 'ResultsCategoryID' ID) at 'vDATE') XL_Data RCtoA1 5 col[64]              :endif[65]              :if 0≠∆←color[descs⍳data[N;5]][66]                  'XL' ⎕wi 'Range>.Rng' (RCtoA1 8 col)[67]                  ('XL.Rng' ⎕wi 'xInterior') ⎕wi 'xColor' ∆[68]              :endif[69]          :endif[70]      :endfor[71]      XL_AutoFit 4⍴8 ⍬[72]      'DefBases' XL_ProtectSheet 1[73]      0 0⍴NoBases XL_Data 'NoDefBases'[74]  :endif[75]  [76]  :if ~mt runsP[77]      data←DLTB¨1 ⍙DBadoCONCommand sql,(0 ⍙DBNumList runsP),")"[78]      :if z←^/data[1;1]≡¨data[;1] ⋄ 0 0⍴data[1;1] XL_Data 'PenBasisFile'[79]      :else                       ⋄ 0 0⍴'Various' XL_Data 'PenBasisFile'[80]      :endif[81]      data←data[(↑¨data[;7])⍳runsP;][82]      ClassID←4 ⋄ ClassBase←NoBases←0 ⋄ 0 XL_ActivateWorksheet 'PenBases'[83]      :for N :in ⍳⍴,runsP[84]          ID←(,runsP)[N][85]          ((N+⍴runsA,runsD) (⍴runs) ('Pensioners:  ',↑data[N;4])) Win∆ProgressBar 'MemberUpdate'[86]  [87]          Cat←(⍕10000∣data[N;2]),'()' embrace ⊃data[N;3] ⍝ Can get Category clashes[88]          NoBases←NoBases+×col←Cat ⍙DBXL_BasisWrite -ID[89]          :if 0≠col[90]              :if ~z ⋄ 0 0⍴data[N;1] XL_Data RCtoA1 6 col ⋄ :endif[91]              0 0⍴data[N;5] XL_Data RCtoA1 8 col[92]              :if VaryVDate[93]                  0 0⍴(,'<''>,ZI2,</>,ZI2,</>,ZI4' ⎕fmt MATRIX ↑(RunList for 'ResultsCategoryID' ID) at 'vDATE') XL_Data RCtoA1 5 col[94]              :endif[95]              :if 0≠∆←color[descs⍳data[N;5]][96]                  'XL' ⎕wi 'Range>.Rng' (RCtoA1 8 col)[97]                  ('XL.Rng' ⎕wi 'xInterior') ⎕wi 'xColor' ∆[98]              :endif[99]          :endif[100]     :endfor[101]     XL_AutoFit 4⍴8 ⍬[102]     'PenBases' XL_ProtectSheet 1[103]     0 0⍴NoBases XL_Data 'NoPenBases'[104] :endif    ∇