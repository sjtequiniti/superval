    ∇ res←rows Consolid∆Values parm;i;PickList;NameList;sortorder;z;dic;∆[1]   ⍝ CONSWIN.sf#3[2]   ⍝ Returns a list of "allowable" entries for Consolidation selection[3]   ⍝ Assumes Global ConsIndex[4]   [5]   dic←ConsIndex for rows[6]   [7]   :select parm[8]   ⍝⍝⍝:case 'Clients'[9]   ⍝⍝⍝    res←'Scheme Names' OVER 0 Uniquelist ⊃dic at 'scheme'[10]  ⍝⍝⍝[11]  :case 'bencap'[12]      res←'Capped Run' OVER 0 Uniquelist ⊃dic at 'capped'[13]  [14]  :case 'contper'[15]      :if mt res←0 Uniquelist ⊃lmt DLTB¨dic at 'contper'[16]          res←' ' OVER '999'[17]      :endif[18]      res←'Control Period' OVER res[19]  [20]  :case 'insind'[21]      res←'Insured Indicator' OVER 0 Uniquelist ⊃dic at 'insinc'[22]  [23]  :case 'TargetBen'[24]      :if mt res←1 Uniquelist ⊃lmt DLTB¨dic at 'targetAB'[25]          res←' ' OVER '0000000000000000000000'[26]      :endif[27]      res←'Target Accrued Benefit' OVER res[28]  [29]  :case 'VDATE'[30]      :if mt res←1 Uniquelist ⊃dic at 'vdate'[31]          res←' ' OVER '00/00/0000'[32]      :endif[33]      res←'Valuation Dates' OVER res[34]  [35]  :case 'ExactAge'[36]      res←'Exact Age Runs' OVER 0 Uniquelist ⊃dic at 'exact age'[37]  [38]  ⍝⍝⍝:case 'PROPT'[39]  ⍝⍝⍝    res←'Accrued Benefits' OVER 0 Uniquelist ⊃dic at 'propt'[40]  ⍝⍝⍝[41]  :case 'fscopt'[42]      :if mt res←⊃dic at 'fscopt'[43]          res←' ' OVER 'Exclude Left Service'[44]      :else[45]          res←1 Uniquelist 'No' OVER res[46]      :endif[47]      res←'ALM/LDI Interface' OVER res[48]  [49]  :case 'neIND'[50]      res←'NE Indicator' OVER 0 Uniquelist ⊃dic at 'newent'[51]  [52]  :case 'aosind'[53]      res←'AOS Indicator' OVER 0 Uniquelist ⊃dic at 'aosind'[54]  [55]  :case 'pVDATE'[56]      :if mt res←1 Uniquelist ⊃dic at 'prev vdate'[57]          res←' ' OVER '00/00/0000'[58]      :endif[59]      res←'Previous Valuation Dates' OVER res[60]  [61]  :case 'runs' ⍝ Get the list of saved Valuation Results[62]      :if 0=rowsIn dic[63]          PickList←0 8⍴'' ⋄ z←⍳0[64]      :else[65]          dic←dic[1;] OVER dic[1+⍋(dic at 'timestamp')+.0000001××dic at 'neActID';] ⍝ Chronological Order then[66]          z←1,~(¯1↓∆)=1↓∆←dic at 'timestamp'[67]          z←z ⎕penclose dic at 'ID' ⍝ "parent" and New Entrant Runs Grouped[68]  [69]          PickList←1 0 1 1 1 1 1 1\⊃spin dic at 'ID' 'scenario' 'desc' 'outfile' 'outime' 'version' 'user'[70]          PickList[;2]←⊂1 0 ¯2[71]      :endif[72]  [73]      NameList←         MATRIX 'Scenario Description' (¯1↑Win∆TextSize ⊃PickList[;3]) 'left'  1 1 0 1[74]      NameList←NameList⍪MATRIX 'Run Description'      (¯1↑Win∆TextSize ⊃PickList[;4]) 'left'  2 2 0 1[75]      NameList←NameList⍪MATRIX 'Output Filename'      (¯1↑Win∆TextSize ⊃PickList[;5]) 'left'  3 3 0 1[76]      NameList←NameList⍪MATRIX 'Valuation Run Time'   (¯1↑Win∆TextSize ⊃PickList[;6]) 'right' 4 4 0 1[77]      NameList←NameList⍪MATRIX 'Version'              (¯1↑Win∆TextSize ⊃PickList[;7]) 'left'  5 5 0 1[78]      NameList←NameList⍪MATRIX 'User'                 (¯1↑Win∆TextSize ⊃PickList[;8]) 'left'  6 6 0 1[79]  [80]      sortorder←'⍺Alpha⍺Alpha⍺Alpha⍺SortList⍺Alpha⍺Alpha' ⍝ How columns are sorted[81]  [82]      res←PickList NameList sortorder z[83]  [84]  :endselect    ∇