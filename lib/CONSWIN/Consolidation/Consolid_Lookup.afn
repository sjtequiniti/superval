    ∇ lookup←Consolid∆Lookup parm;frame;valind;lookup2[1]   ⍝ CONSWIN.sf#3[2]   ⍝ Returns a list of "lookup" strings for Consolidation selection[3]   [4]   frame←'fmSV.sConsolidation.pgSelection.fCriteria.'[5]   [6]   valind←3↑(frame,'cbvalind') ⎕wi 'text'[7]   lookup←(⊂'method') OVER (⊂(valind≡'PPF') means 'PPA' else valind)[8]   [9]   ⍝⍝⍝→(parm≡'Clients')/end[10]  ⍝⍝⍝Clients←((frame,'lsClients') ⎕wi 'list')[(frame,'lsClients') ⎕wi 'value';][11]  ⍝⍝⍝lookup←lookup amend 'scheme' (⊂'')[12]  [13]  →(parm≡'bencap')/end[14]  lookup←lookup amend 'capped' (⊂(frame,'cbbencap') ⎕wi 'text')[15]  [16]  →(parm≡'contper')/end[17]  lookup←lookup amend 'contper' (⊂3↑((⊂valind)∊'PUC' 'UCM' 'DAB')/(frame,'cbcontper') ⎕wi 'text')[18]  [19]  →(parm≡'insind')/end[20]  lookup←lookup amend 'insinc' (⊂(frame,'cbinsind1') ⎕wi 'text')[21]  [22]  →(parm≡'TargetBen')/end[23]  lookup←lookup amend 'targetAB' (⊂(DLTB (frame,'cbTargetBen') ⎕wi 'text'),' ')[24]  [25]  →(parm≡'VDATE')/end[26]  lookup←lookup amend 'vdate' (⊂10↑(frame,'cbVDATE') ⎕wi 'text')[27]  [28]  →(parm≡'ExactAge')/end[29]  lookup←lookup amend 'exact age' (⊂(frame,'cbExactAge') ⎕wi 'text')[30]  [31]  ⍝⍝⍝→(parm≡'PROPT')/end[32]  ⍝⍝⍝lookup←lookup amend 'propt' (⊂(frame,'cbPROPT') ⎕wi 'text')[33]  [34]  →(parm≡'fscopt')/end[35]  lookup←lookup amend 'fscopt' (⊂(frame,'cbfscopt') ⎕wi 'text')[36]  [37]  →(parm≡'neIND')/end[38]  lookup←lookup amend 'newent' (⊂(frame,'cbneIND') ⎕wi 'text')[39]  [40]  →(parm≡'aosind')/end[41]  lookup←lookup amend 'aosind' (⊂(frame,'cbaosind') ⎕wi 'text')[42]  [43]  →(parm≡'pVDATE')/end[44]  lookup←lookup amend 'prev vdate' (⊂DLTB (frame,'cbpVDATE') ⎕wi 'text')[45]  [46]  end:[47]  ⍝⍝⍝:if 0≠⎕nc 'Clients' ⍝ Allow for multiple Clients[48]  ⍝⍝⍝    lookup2←lookup[49]  ⍝⍝⍝    :for name :in m2n Clients[50]  ⍝⍝⍝        lookup←lookup append lookup2 amend 'scheme' ((rowsIn lookup2)/⊂name)[51]  ⍝⍝⍝    :endfor[52]  ⍝⍝⍝:endif[53]  [54]  ⍝⍝⍝:if (⊂'propt')∊lookup[1;] ⋄ :andif (⊂'No')∊lookup at 'propt' ⍝ N means Y also for PROPT[55]  ⍝⍝⍝    lookup←lookup append lookup amend 'propt' ((rowsIn lookup)/⊂'Yes')[56]  ⍝⍝⍝:endif[57]  [58]  ⍝⍝⍝ :if (⊂'exact age')∊lookup[1;] ⋄ :andif (⊂'Yes')∊lookup at 'exact age' ⍝ Y means N also for Exact Age[59]  ⍝⍝⍝    lookup←lookup append lookup amend 'exact age' ((rowsIn lookup)/⊂'No')[60]  ⍝⍝⍝ :endif[61]  ⍝⍝⍝[62]  :if uk≠0 ⋄ :andif (⊂'fscopt')∊lookup[1;] ⍝ N means Y also for fscopt[63]      :if ∨/('No' 'Exclude Left Service')∊lookup at 'fscopt'[64]          lookup←lookup append lookup amend 'fscopt' ((rowsIn lookup)/⊂'Include Left Service')[65]      :endif[66]      :if (⊂'No')∊lookup at 'fscopt'[67]          lookup←lookup append lookup amend 'fscopt' ((rowsIn lookup)/⊂'Exclude Left Service')[68]      :endif[69]  :endif[70]  [71]  :if (⊂'aosind')∊lookup[1;] ⋄ :andif (⊂'No')∊lookup at 'aosind' ⍝ N means Y also for aosind[72]      lookup←lookup append lookup amend 'aosind' ((rowsIn lookup)/⊂'Yes')[73]  :endif[74]  [75]  :if (⊂'newent')∊lookup[1;] ⋄ :andif (⊂'Yes')∊lookup at 'newent' ⍝ N means Y also for newent[76]      lookup←lookup append lookup amend 'newent' ((rowsIn lookup)/⊂'No')[77]  :endif[78]  [79]  ⍝ Now other types of membership!![80]  lookup2←lookup[81]  :if (⊂'contper')∊lookup2[1;] ⋄ lookup2←lookup2 amend 'contper' ((rowsIn lookup2)/⊂'   ') ⋄ :endif ⍝ Remove contper[82]  :if (⊂'insinc' )∊lookup2[1;] ⋄ lookup2←lookup2 amend 'insinc'  ((rowsIn lookup2)/⊂'No')  ⋄ :endif ⍝ Default insind[83]  [84]  :select 3↑valind[85]  :case 'PP3'[86]      lookup←lookup append lookup2 amend 'method' ((rowsIn lookup2)/⊂'PPP')[87]  :case 'PPF'[88]      lookup←lookup append lookup2 amend 'method' ((rowsIn lookup2)/⊂'PPD')[89]      lookup←lookup append lookup2 amend 'method' ((rowsIn lookup2)/⊂'PPP')[90]  :else[91]      lookup←lookup append lookup2 amend 'method' ((rowsIn lookup2)/⊂'DEF')[92]      lookup←lookup append lookup2 amend 'method' ((rowsIn lookup2)/⊂'PEN')[93]  :endselect    ∇