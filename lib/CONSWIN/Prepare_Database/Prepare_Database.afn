    ∇ res←field Prepare_Database parm;parent;found;tablechanged;notes;origrecs;capind;ContTable;benrecs;catrecs[1]   ⍝ CONSWIN.sf#18[2]   ⍝ Function to allow user control on Prepare Database module[3]   [4]   parent←'fmPrepareDB.' ⋄ res←0⍴'' ⍝ Default response[5]   [6]   :select parm[7]   [8]   :case 'Prepare'[9]   [10]  :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)[11]      :if ~sqlDatabase ⋄ progid←⍙DBAccessProvider 0 ⋄ :endif[12]  [13]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)[14]  [15]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)[16]  [17]      :repeat[18]          :select ↑field[19]          :case ' '[20]          :endselect[21]      :until mt field←1↓field[22]  [23]  :case 'Valid' ⍝ Routine specific validation[24]  [25]      ⍙dbfilename←(⎕io+sqlDatabase)⊃(Win∆Parent mdbFile) sqlDBase[26]      :if ~¯1↑(⍙dbfilename DBID found)←⍙dbfilename ⍙DBOpen ¯2[27]          res←'Database not found' ⋄ :return[28]      :endif[29]  [30]      :if ~(⊂DatabaseType←DLTB ↑1 ⍙DBadoCONCommand "SELECT DataBaseType FROM Identification",sqlDatabase/" WHERE DatabaseID=",⍕DBID)∊(⊂'Consolidation'),bAON/⊂'Client'[31]          res←('\' Win∆Child ⍙dbfilename),' is an invalid Database File.  Try again with a Consolidation Database File.' ⋄ →end[32]      :endif[33]  [34]      :if ∨/0≠10000∣,1 ⍙DBadoCONCommand "SELECT DISTINCT ScenarioID FROM ResultsCategory",sqlDatabase/" WHERE DatabaseID=",⍕DBID[35]          res←('\' Win∆Child ⍙dbfilename),' contains Scenario runs which cannot be processed yet' ⋄ →end[36]      :endif[37]  [38]      :if DatabaseType≡'Consolidation'[39]          :if 0=,1 ⍙DBadoCONCommand "SELECT COUNT(*) FROM AltScenData",sqlDatabase/" WHERE DatabaseID=",⍕DBID[40]              res←('\' Win∆Child ⍙dbfilename),' does not have the necessary ALM/LDI Cash Flows' ⋄ →end[41]          :endif[42]  [43]          :if mt (10000∣,1 ⍙DBadoCONCommand "SELECT DISTINCT ResultsCategoryID FROM AltScenData",sqlDatabase/" WHERE DatabaseID=",⍕DBID)~0 1 2 3 4[44]              res←('\' Win∆Child ⍙dbfilename),' contains Cash Flows summarised by Membership Group - use Retain Category Splits in Consolidation' ⋄ →end[45]          :endif[46]  [47]          :if ~mt capind←,1 ⍙DBadoCONCommand "SELECT BasisItemID FROM BasisItem WHERE (BasisItemName=",(1 ⍙DBString 20↑"capind"),")"[48]          :andif 'C'∊∊↑¨,1 ⍙DBadoCONCommand "SELECT BasisItemData FROM BasisData WHERE BasisItemID IN (",(0 ⍙DBNumList capind),")",sqlDatabase/" AND DatabaseID=",⍕DBID[49]              res←('\' Win∆Child ⍙dbfilename),' contains Capitalised Runs - only unCapitalised runs allowed' ⋄ →end[50]          :endif[51]  ⍝⍝⍝[52]  ⍝⍝⍝        :if ~mt capind←,1 ⍙DBadoCONCommand "SELECT BasisItemID FROM BasisItem WHERE (BasisItemName=",(1 ⍙DBString 20↑"TVcapind"),")"[53]  ⍝⍝⍝        :andif 'C'∊∊↑¨,1 ⍙DBadoCONCommand "SELECT BasisItemData FROM BasisData WHERE BasisItemID IN (",(0 ⍙DBNumList capind),")",sqlDatabase/" AND DatabaseID=",⍕DBID[54]  ⍝⍝⍝            res←('\' Win∆Child ⍙dbfilename),' contains Capitalised Tranafer Benefits Runs - only unCapitalised runs allowed' ⋄ →end[55]  ⍝⍝⍝        :endif[56]      :endif[57]  [58]      :return[59]  [60]  end:0 0⍴'ADOconcmd' ⎕wi 'Delete'[61]      0 0⍴(⊂'ADOcon') ⎕wi¨'XClose' 'Close' 'Delete'[62]  [63]  :case 'Run'[64]  [65]      :if IncContID←zwb IncContID[66]          ContTable←ContingencyTable for (~(ContingencyTable at 'Contingency')∊'All Benefits' 'Scheme Expenses' 'Additional Liability')[67]      :else[68]          ContTable←ContingencyTable for (~(ContingencyTable at 'Contingency')∊'Retirement' 'Death' 'Ill Health' 'PHI' 'Leaving Service' ' Retirement Transfer' 'Transfer Out' 'Scheme Expenses' 'Additional Liability')[69]      :endif[70]  [71]      :if ~(⊂'CategoryAssumptions')∊⍙DBTableNames 'ADOcon'[72]          sqlDatabase Create_Table¨spin (2/1) ("CategoryAssumptions" "BenefitAssumptions")[73]      :endif[74]  [75]      :if   tablechanged←~DatabaseType≡'Consolidation'[76]      :orif tablechanged←          0=,1 ⍙DBadoCONCommand "SELECT COUNT(*)      FROM BenefitAssumptions",sqlDatabase/" WHERE DatabaseID=",⍕DBID[77]      :orif tablechanged←∨/IncContID>,1 ⍙DBadoCONCommand "SELECT ContingencyID FROM BenefitAssumptions",sqlDatabase/" WHERE DatabaseID=",⍕DBID[78]          '(catrecs benrecs notes)←ExtractFinancials' Win∆ProgressBar 'Start'[79]          origrecs←benrecs[80]      :else[81]          catrecs←1 ⍙DBadoCONCommand 'SELECT * FROM CategoryAssumptions',(sqlDatabase/' WHERE DatabaseID=',⍕DBID),' ORDER BY ResultsCategoryID'[82]          origrecs←1 ⍙DBadoCONCommand 'SELECT * FROM BenefitAssumptions',(sqlDatabase/' WHERE DatabaseID=',⍕DBID),' ORDER BY ClassName, ResultsCategoryID, BenefitTypeID, PastService, StartYear'[83]          notes←MATRIX 'ResultsCategoryID' 'Tranche' 'BenefitTypeID' 'FinType' 'FinGroup' 'FinValue' 'FinTabID' 'FieldDesc' 'Ignored'[84]      :endif[85]  [86]      'CONSWIN' CallModule 'Assumptions_Review'[87]  [88]      :if 0≠⎕nc 'benrecs' ⋄ :andif ~mt benrecs[89]          0 0⍴0 ⍙DBadoCONCommand "DELETE FROM CategoryAssumptions",sqlDatabase/" WHERE DatabaseID=",⍕DBID[90]          0 0⍴'ADOrst' ⎕wi 'Create' 'ADODB.Recordset'[91]          'ADOrst' ⎕wi 'XOpen' 'CategoryAssumptions' ('ADOcon' ⎕wi 'obj') ('ADOrst' ⎕wi 'adOpenStatic') ('ADOrst' ⎕wi 'adLockOptimistic')[92]          ⍙DBInsertData catrecs[93]          0 0⍴'ADOrst' ⎕wi 'XClose'[94]  [95]          0 0⍴0 ⍙DBadoCONCommand "DELETE FROM BenefitAssumptions",sqlDatabase/" WHERE DatabaseID=",⍕DBID[96]          'ADOrst' ⎕wi 'XOpen' 'BenefitAssumptions' ('ADOcon' ⎕wi 'obj') ('ADOrst' ⎕wi 'adOpenStatic') ('ADOrst' ⎕wi 'adLockOptimistic')[97]          ⍙DBInsertData benrecs[98]          0 0⍴'ADOrst' ⎕wi 'XClose' ⋄ 0 0⍴'ADOrst' ⎕wi 'Delete'[99]      :endif[100]     0 0⍴'ADOconcmd' ⎕wi 'Delete'[101]     0 0⍴(⊂'ADOcon') ⎕wi¨'XClose' 'Close' 'Delete'[102] [103]     res←'Quit'[104] [105] :case 'Quit' ⍝ Deleting "other" variables[106]     0 0⍴⎕ex '⍙dbfilename DBID progid DatabaseType'[107] [108] :endselect    ∇