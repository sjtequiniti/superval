    ∇ MAKE∆VARS∆DB;z;parms;A;ID;∆;exp
[1]   ⍝ CONSWIN.sf#11
[2]   ⍝
[3]   ⍝
[4]   ⍝
[5]   ⍝
[6]   ⍝ V2.50u RE 1/11/93 Standardised
[7]   Convert_Vars ⍝ "Standard" Windows Conversion
[8]   
[9]   gROUP←0 0⍴' '
[10]  :for ID :in runsA,runsNE,runsD,runsP
[11]      gROUP←gROUP OVER ↑(ConsIndex for 'ID' ID) at 'desc'
[12]  :endfor
[13]  
[14]  :if ValMeth≡'AGG' ⍝ Aggregate Method
[15]      amorti←,1+0.01×ExecuteRates (amorti[3;]) ''
[16]      COCR←(⍴runsA)↑MatrixZWB COCR
[17]      salind←(0=⍴runsNE)⌈'C'=↑PCsalind
[18]  ⍝⍝⍝ COCRN←(runsA∊(index[;460+⍳32] TLU index[runsNE;460+⍳32])~(index[;51]='Y')/⍳1↑⍴index)/COCR ???
[19]  :else
[20]  ⍝⍝⍝    salind←(0=⍴runsNE)⌈'C'=salind[;1]
[21]      salind←(0=⍴runsNE)⌈∨/'Current'⍷ameth
[22]      ameth←ameth[;1]
[23]      amorti1←,1+0.01×ExecuteRates (amorti[2;]) ''
[24]      amorti ←,1+0.01×ExecuteRates (amorti[1;]) ''
[25]      TERMDA←↑TERMDA ⋄ TERMPC←↑TERMPC ⍝⍝ Avoid an ⍳0
[26]      amortamount←MatrixZWB amortprop[2 4;] ⋄ amortprop←MatrixZWB amortprop[1 3;]
[27]      TERMAM←MatrixZWB TERMAM
[28]      :if ∨/∆←0=amortamount+amortprop
[29]          amortamount←amortamount+∆×0.01 ⍝ Ensure minimal amount of Amortisation for QSM calculations
[30]          (∆/TERMAM)←1                   ⍝ for a short term
[31]      :endif
[32]      COCR←(⍴,runsA)⍴0 ⋄ COCRN←(⍴,runsNE)⍴0
[33]  :endif
[34]  i←,1+0.01×ExecuteRates IR ''
[35]  
[36]  exp←×⍴,runsA
[37]  EXPSF←exp×EXPSF×1,×\199 OVERTAKE 1+0.01×ExecuteRates EXPf ''
[38]  EXPMC←0.01×EXPMC ⋄ EXPCC←0.01×EXPCC ⋄ EXPPM←exp×PMEXP
[39]  :if ↑TaxRates←150⍴uk=0 ⋄ TaxRates←150 OVERTAKE 0.01×COCTax ⋄ :endif
[40]  
[41]  LTAB←(A←∨/' '≠LTAB,LTOT)⌿MATRIX LTAB ⋄ LTOT←MatrixZWB A⌿MATRIX LTOT
[42]  :if ~NotPUC ⋄ insind←'Y'=↑insind[1;]
[43]  :else       ⋄ insind←zwb  insind[2;]
[44]  :endif
[45]  SKIP←zwb SKIP ⋄ summopt←zwb summopt ⋄ penind←zwb penind
[46]  :if uk=1 ⋄ abNO←dab×¯1+'PD'⍳↑TargetBen
[47]  :else    ⋄ abNO←dab×zwb ¯2↑abNO
[48]  :endif
[49]  retainCat←zwb retainCat
[50]  ignoreCONSDYN←zwb ignoreCONSDYN
[51]  
[52]  :if aosind
[53]      pvDATE←⊃,1 ⍙DBadoCONCommand "SELECT",("PrevValnDate" ⍙DBDateFormat 'yyyy/mm/dd')," FROM ResultsCategory WHERE ResultsCategoryID IN (",(0 ⍙DBNumList runs),")"
[54]      :if ^/pvDATE^.=pvDATE[1;] ⋄ pvDATE←'YYYY/MM/DD' DATEEXP pvDATE[1;]
[55]      :else                     ⋄ aosind←0 ⋄ MDISPLAY 'Cannot Consolidate AOS results as Previous Valuation Dates differ'
[56]      :endif
[57]  
[58]      Expi←,1+0.01×ExecuteRates Expi ''
[59]  :endif
[60]  
[61]  (runs runsA runsNE runsD runsP)←AddDBID+runs runsA runsNE runsD runsP ⍝ Use remapped RCID's
    ∇
