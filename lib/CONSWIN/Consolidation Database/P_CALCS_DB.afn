    ∇ COCR P∆CALCS∆DB runs;N;arg;no;ResultsCategoryID;tax;exp;sql;values;∆;exp∆tot;sql1[1]   ⍝ CONSWIN.sf#11[2]   ⍝ Get the Present Value Results[3]   ⍝[4]   ⍝[5]   ⍝ V2.50u RE 1/11/93 Standardised[6]   N←0 ⋄ arg←1↑COCR ⋄ COCR←1↓COCR[7]   sql←"SELECT ROUND(SVAge,0),SUM(SVValue) FROM ResultsData_NoIndex WHERE ResultsCategoryID=%1 AND ContingencyID=%2 AND LiabilityTypeID=%3 AND DataItemID=%4 AND SVAge <> 0 GROUP BY SVAge"[8]   [9]   :for N :in ⍳⍴runs[10]      ResultsCategoryID←runs[N] ⋄ exp∆tot←exp←100/0[11]  [12]      :if 0≠EXPSAL ⋄ :orif ValMeth≡'AGG' ⍝ Aggregate Contributions[13]          no←⍴values←(ResultsCategoryID 11 6 13) ⍙DBSQLRead sql ⍝ V1% Contributions Expenses[14]          exp←100↑∆←EXPSAL×values[15]          ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((32 11 12 13) (⍳no) 0) ⍙DBValnRecords -∆[16]          :if bQSM[17]              :if dab∨~NotPUC[18]                  no←⍴values←(ResultsCategoryID 11 6 93) ⍙DBSQLRead sql[19]                  exp∆tot←100↑∆←EXPSAL×values[20]              :endif[21]              ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((32 11 12 93) (⍳no) 0) ⍙DBValnRecords -∆[22]          :endif[23]  [24]          :if ValMeth≡'AGG' ⍝ Aggregate Contributions[25]              ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((11 9 6 13) (⍳no) 0) ⍙DBValnRecords COCR[N]×values ⍝ PV Aggregate Conts[26]              :if bQSM[27]                  ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((11 9 6 93) (⍳no) 0) ⍙DBValnRecords COCR[N]×values ⍝ PV Aggregate Conts[28]              :endif[29]              ⍝⍝⍝ Aust tax ???[30]          :endif[31]      :endif[32]  [33]      :if 0≠EXPPM ⍝ Per Member Expenses[34]          no←⍴values←(ResultsCategoryID 16 7 16) ⍙DBSQLRead sql[35]          exp←exp+100↑∆←EXPPM×values[36]          ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((32 16 12 13) (⍳no) 0) ⍙DBValnRecords -∆[37]          ⍝ See CASH∆FLOW∆DB for PV of Scheme Fee Expenses[38]          :if bQSM[39]              :if dab∨~NotPUC[40]                  no←⍴values←(ResultsCategoryID 16 7 96) ⍙DBSQLRead sql[41]                  exp∆tot←exp∆tot+100↑∆←EXPPM×values[42]              :endif[43]              ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((32 16 12 93) (⍳no) 0) ⍙DBValnRecords -∆[44]          :endif[45]      :endif[46]  [47]      :if 0≠EXPMC ⍝ Member Contributions Expenses[48]          no←⍴values←(ResultsCategoryID 8 6 13) ⍙DBSQLRead sql[49]          exp←exp+100↑∆←EXPMC×values[50]          ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((32 8 12 13) (⍳no) 0) ⍙DBValnRecords -∆[51]          :if bQSM[52]              :if dab∨~NotPUC[53]                  no←⍴values←(ResultsCategoryID 8 6 93) ⍙DBSQLRead sql[54]                  exp∆tot←exp∆tot+100↑∆←EXPMC×values[55]              :endif[56]              ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((32 8 12 93) (⍳no) 0) ⍙DBValnRecords -∆[57]          :endif[58]      :endif[59]  [60]      :if 0≠EXPCC ⍝ Company Contributions Expenses[61]          no←⍴values←(ResultsCategoryID 9 6 13) ⍙DBSQLRead sql[62]          exp←exp+100↑∆←EXPCC×values[63]          ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((32 9 12 13) (⍳no) 0) ⍙DBValnRecords -∆[64]          :if bQSM[65]              :if dab∨~NotPUC[66]                  no←⍴values←(ResultsCategoryID 9 6 93) ⍙DBSQLRead sql[67]                  exp∆tot←exp∆tot+100↑∆←EXPCC×values[68]              :endif[69]              ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((32 9 12 93) (⍳no) 0) ⍙DBValnRecords -∆[70]          :endif[71]      :endif[72]  [73]      :if tax←uk=0 ⍝ Aust Conts Tax[74]          :if (⊂ValMeth)∊'AGG' 'EAN' ⍝ AGG or EAN[75]               tax←(1-EXPCC)×(0⌈values-no↑exp)×no↑TaxRates ⍝⍝⍝ This wrong!![76]          :else ⍝ AAN PUC or DAB[77]               tax←((0⌈values) CDIV 1-no↑TaxRates)-0⌈values ⍝⍝⍝ This wrong!![78]          :endif[79]      :endif[80]  [81]      exp∆tot←exp∆tot+exp×^/exp∆tot=0[82]      ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((11 9 6 13) (⍳100) 0) ⍙DBValnRecords (~(⊂ValMeth)∊'AGG' 'EAN')×exp ⍝ Control Period Co Conts to cover expenses[83]      :if bQSM[84]          ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((11 9 6 93) (⍳100) 0) ⍙DBValnRecords exp∆tot ⍝ Total Future Co Conts to cover expenses[85]      :endif[86]  [87]      :if NotPUC ⋄ :orif ~insind[88]          sql1←"SELECT ROUND(SVAge,0),SUM(SVValue) FROM ResultsData_NoIndex WHERE ResultsCategoryID=%1 AND BenefitTypeID=%2 AND LiabilityTypeID=%3 AND DataItemID=%4 GROUP BY SVAge"[89]  [90]          no←⍴values←(ResultsCategoryID 9 2 13) ⍙DBSQLRead sql1[91]          ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((32 29 12 13) (⍳no) 0) ⍙DBValnRecords ∆←EXPCC×values ⍝ Expenses on Insurance[92]          ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((11 29  6 13) (⍳no) 0) ⍙DBValnRecords -values+∆ ⍝ Conts to cover Insurance and Expenses on Insurance[93]  [94]          no←⍴values←(ResultsCategoryID 10 2 13) ⍙DBSQLRead sql1[95]          ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((32 30 12 13) (⍳no) 0) ⍙DBValnRecords ∆←EXPCC×values ⍝ Expenses on Insurance[96]          ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((11 30  6 13) (⍳no) 0) ⍙DBValnRecords -values+∆ ⍝ Conts to cover Insurance and Expenses on Insurance[97]          :if bQSM[98]              no←⍴values←(ResultsCategoryID 9 2 93) ⍙DBSQLRead sql1[99]              ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((32 29 12 93) (⍳no) 0) ⍙DBValnRecords ∆←EXPCC×values ⍝ Expenses on Insurance[100]             ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((11 29  6 93) (⍳no) 0) ⍙DBValnRecords -values+∆ ⍝ Conts to cover Insurance and Expenses on Insurance[101] [102]             no←⍴values←(ResultsCategoryID 10 2 93) ⍙DBSQLRead sql1[103]             ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((32 30 12 93) (⍳no) 0) ⍙DBValnRecords ∆←EXPCC×values ⍝ Expenses on Insurance[104]             ⍙dbfundres←⍙dbfundres⍪ResultsCategoryID,((11 30  6 93) (⍳no) 0) ⍙DBValnRecords -values+∆ ⍝ Conts to cover Insurance and Expenses on Insurance[105]         :endif[106]     :endif[107] :endfor    ∇