    ∇ ConsXL_BasisWrite;newbasis;⍙dbXLbasis;z;comments;ClassBase;col;range;row
[1]   ⍝ CONSWIN.sf#11
[2]   ⍝ Insert the basis into Excel, if required
[3]   
[4]   0 XL_ActivateWorksheet 'AllBases'
[5]   ClassBase←30000 ⋄ col←⍬⍴A1toRC 'M'
[6]   
[7]   range←" WHERE (BasisItemID BETWEEN ",(⍕1+ClassBase)," AND ",(⍕9999+ClassBase),")"
[8]   
[9]   ⍙dbXLbasis←'excel' XL_BasisDetails 5 ⍝ Columns ItemID and Excel required
[10]  
[11]  newbasis←1 ⍙DBadoCONCommand "SELECT BasisItemID, BasisItemData FROM BasisData ",range,(sqlDatabase/" AND DatabaseID=",(⍕DBID))," ORDER BY BasisItemID"
[12]  newbasis[;⎕io+1]←DLTB¨newbasis[;⎕io+1]
[13]  
[14]  z←1000000≤newbasis[;⎕io] ⋄ comments←z⌿newbasis ⋄ newbasis←(~z)⌿newbasis ⍝ Separate out comments
[15]  
[16]  newbasis←⍉MATRIX (newbasis[;⎕io+1],⊂' ')[newbasis[;⎕io]⍳⍙dbXLbasis at 'ItemID']
[17]  newbasis←((1+↑⍴newbasis) OVERTAKE 1 0 1)⍀newbasis
[18]  
[19]  comments[;⎕io]←newbasis[;⎕io]⍳¯1000000+comments[;⎕io]
[20]  
[21]  'R←' XL_RangeInsert 4⍴⍬ col
[22]  
[23]  0 0⍴newbasis XL_Data RCtoA1 10 col (9+↑⍴newbasis) col
[24]  XL_AutoFit 4⍴⍬ col
[25]  
[26]  :if ~mt comments ⍝ Add Tooltips to cells
[27]      :for z :in ⍳↑⍴comments
[28]          row←11+comments[z;⎕io]
[29]          'XL' ⎕wi 'Range>.Rng'  (RCtoA1 4⍴row col)
[30]          'XL.Rng' ⎕wi 'XClearComments'
[31]          0 0⍴'XL.Rng' ⎕wi 'XAddComment' (↑comments[z;⎕io+1])
[32]      :endfor
[33]  :endif
[34]  'AllBases' XL_ProtectSheet 1
    ∇
