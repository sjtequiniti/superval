    ∇ res←field Basis_Compare parm;parent;list;ExcelRunButton;larg;rarg[1]   ⍝ CONSWIN.sf#12[2]   ⍝ Function to allow user control on Basis Compare form[3]   [4]   parent←'fmBasisCompare.' ⋄ res←0⍴'' ⍝ Default response[5]   [6]   :select parm[7]   [8]   :case 'Prepare' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)[9]       0 0⍴⎕ex 'DBIndex'[10]      progid←⍙DBAccessProvider 0 ⍝ Determine the Provider string[11]  [12]  :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)[13]  [14]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)[15]  [16]      :if ~sqlDatabase ⋄ :andif mt progid[17]          res←'No Microsoft Access engines installed on this machine' ⋄ :return[18]      :endif[19]      (DBIndex DBID ident)←CreateDBIndex (⎕io+sqlDatabase)⊃(Win∆Parent mdbFile) sqlDBase[20]      0 0⍴(⊂'cbMembClass') Basis_Compare 'Change'[21]  [22]  :case 'Spin'[23]      (parent,'lvruns') Sel∆Spin field[24]  [25]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)[26]  [27]      :repeat[28]          :select ↑field[29]          :case 'cbmdbFile'[30]              (DBIndex DBID ident)←CreateDBIndex Win∆Parent mdbFile←(parent,'cbmdbFile') ⎕wi 'text'[31]              0 0⍴(⊂'cbMembClass') Basis_Compare 'Change' ⍝ Run GetCompare[32]          :case 'cbsqlDBase'[33]              (DBIndex DBID ident)←CreateDBIndex sqlDBase←(parent,'cbsqlDBase') ⎕wi 'text'[34]              0 0⍴(⊂'cbMembClass') Basis_Compare 'Change' ⍝ Run GetCompare[35]          :caselist 'cbMembClass' 'ckPPFbasis'[36]              MembClass←(parent,'cbMembClass') ⎕wi 'text'[37]              PPFbasis←⍕(parent,'ckPPFbasis') ⎕wi 'value'[38]              ((parent,'lvruns') 'Basis_Compare') Win∆UpdateListview GetCompare[39]          :endselect[40]      :until mt field←1↓field[41]  [42]  :case 'Valid' ⍝ Routine specific validation[43]  [44]      :if 2>⍴(parent,'lvruns') ⎕wi 'value'[45]          res←'Must select at least two Bases for a Comparison'[46]          1 Win∆SetFocus parent,'lvruns' ⋄ :return[47]      :endif[48]      :if ~∨/'.XLS'⍷UPPERCASE ¯5↑DLTB Filename[49]          Filename←(DTDot Filename),'.xls',(12≤ExcelVersion)/XLtype ⍝ Add xls extension, if required[50]      :elseif 12≤ExcelVersion[51]      :andif (UPPERCASE XLtype)≠UPPERCASE ¯1↑Filename[52]          Filename←Filename,XLtype[53]      :endif[54]      :if FileExist OutputDir,Filename[55]          res←'AlreadyFile' Filename[56]          1 Win∆SetFocus parent,'edFilename' ⋄ :return[57]      :endif[58]  [59]  :case 'Run'[60]  [61]      larg←(parent,'lvruns') ⎕wi 'value' ⋄ rarg←((⎕io+sqlDatabase)⊃(Win∆Parent mdbFile) sqlDBase) (OutputDir,Filename)[62]  [63]      ⍝ The ⍙DBXLBasisComp function is run from the click of a Button to enable the deletion of the Excel COM object[64]      ExcelRunButton←(FormName,'.bntemp') ⎕wi 'Create' 'Button' ('visible' 0) ('onClick' 'larg ⍙DBXLBasisComp rarg')[65]      ExcelRunButton ⎕wi 'Click'[66]      0 0⍴ExcelRunButton ⎕wi 'Delete'[67]  [68]      res←'Quit'[69]  [70]  :case 'Quit' ⍝ Deleting "other" variables[71]      0 0⍴⎕ex 'DBIndex ident progid DBID'[72]  [73]  :endselect    ∇