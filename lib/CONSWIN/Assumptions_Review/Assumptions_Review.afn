    ∇ res←field Assumptions_Review parm;parent;∆;col;var;BenID;ContID;ResID;ResIDmap[1]   ⍝ CONSWIN.sf#19[2]   ⍝ Function to allow user control on Assumptions Review module[3]   [4]   res←0⍴'' ⍝ Default response[5]   parent←'fmAssReview.sAssumptions_Review.'[6]   [7]   :select parm[8]   :case 'Wait'[9]       hidden←0[10]      HideColumns ⍝ Hide Spreadsheet Columns[11]  [12]  :case 'Prepare'[13]      SSName1←parent,'pgBenefits.fBenAssReview.ssBenAssReview' ⋄ SSName2←parent,'pgCategory.fCatAssReview.ssCatAssReview'[14]      hide_cols←        5 6     9 10 11          16 17          22 23 24 25 30 31 36 37          42 43 44 45[15]      lock_cols←1 2 3 4 5 6 7 8 9 10 11 13 14 15 16 17 19 20 21 22 23 24 25 30 31 36 37 39 40 41 42 43 44 45 46[16]  [17]  :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)[18]  [19]  ⍝⍝⍝ ClassName           ClName[;]                            clName[;][20]  ⍝⍝⍝ ResultsCategoryID   ResIDDesc[;]      ResultsCategoryID  resIDDesc[;][21]  ⍝⍝⍝                     sEX[;]            BasisCategoryID[22]  ⍝⍝⍝ ContingencyID       ContIDType[;]     Sex                sex[;][23]  ⍝⍝⍝ StartYear           StYear[;]         SpouseCashFlow     SpCF[;][24]  ⍝⍝⍝ PastService         PServ[;]          PropMarrTable      HTable[;][25]  ⍝⍝⍝ BenefitTypeID       BenIDType[;]      PropMarrTableID    HTableID[;][26]  ⍝⍝⍝ BenefitBasis        Benbasis[;]       SpouseDefinition   SpDef[;][27]  ⍝⍝⍝ CashRate            CashRate[;]       PensionFrequency   PenFreq[;][28]  ⍝⍝⍝ InterestSwitch      IntSw[;]          PensionMode        PenMode[;][29]  ⍝⍝⍝ PreInterestName     PreIntName[;]     FirstYearIncrease  FYInc[;][30]  ⍝⍝⍝ PreInterestGroup    PreIntGroup[;]    PenReviewDate      PenRevDate[;][31]  ⍝⍝⍝ PreInterestValue    PreIntCap[;]      ExactAge           ExactAge[;][32]  ⍝⍝⍝ PreInterestCap      PreIntCollar[;]   TVPropMarrTable    TVHTable[;][33]  ⍝⍝⍝ PreInterestCollar   PreIntValue[;]    TVPropMarrTableID  TVHTableID[;][34]  ⍝⍝⍝ PreInterestTableID  PreIntTabID[;]    TVSpouseDefinition TVSpDef[;][35]  ⍝⍝⍝ PostInterestName    PostIntName[;][36]  ⍝⍝⍝ PostInterestGroup   PostIntGroup[;][37]  ⍝⍝⍝ PostInterestValue   PostIntCap[;][38]  ⍝⍝⍝ PostInterestCap     PostIntCollar[;][39]  ⍝⍝⍝ PostInterestCollar  PostIntValue[;][40]  ⍝⍝⍝ PostInterestTableID PostIntTabID[;][41]  ⍝⍝⍝ SalReviewDate       SalRevDate[;][42]  ⍝⍝⍝ FASPeriod           FASPeriod[;][43]  ⍝⍝⍝ InflationName       InfName[;][44]  ⍝⍝⍝ InflationGroup      InfGroup[;][45]  ⍝⍝⍝ InflationValue      InfCap[;][46]  ⍝⍝⍝ InflationCap        InfCollar[;][47]  ⍝⍝⍝ InflationCollar     InfValue[;][48]  ⍝⍝⍝ InflationTableID    InfTabID[;][49]  ⍝⍝⍝ RevaluationName     RevName[;][50]  ⍝⍝⍝ RevaluationGroup    RevGroup[;][51]  ⍝⍝⍝ RevaluationValue    RevCap[;][52]  ⍝⍝⍝ RevaluationCap      RevCollar[;][53]  ⍝⍝⍝ RevaluationCollar   RevValue[;][54]  ⍝⍝⍝ RevaluationTableID  RevTabID[;][55]  ⍝⍝⍝ IncreaseName        IncName[;][56]  ⍝⍝⍝ IncreaseGroup       IncGroup[;][57]  ⍝⍝⍝ IncreaseValue       IncCap[;][58]  ⍝⍝⍝ IncreaseCap         IncCollar[;][59]  ⍝⍝⍝ IncreaseCollar      IncValue[;][60]  ⍝⍝⍝ IncreaseTableID     IncTabID[;][61]  ⍝⍝⍝ IncreaseConsDesc    IncConsDesc[;][62]  ⍝⍝⍝ ExcessPre88GMP      IncPre88[;][63]  ⍝⍝⍝ ExcessPost88GMP     IncPost88[;][64]  ⍝⍝⍝ LiabilityValue      LiabValue[;][65]  [66]      ResIDmap←spin ⎕split (DBID 'Scheme') OVER 1 ⍙DBadoCONCommand "SELECT ResultsCategoryID, BasisDescription FROM ResultsCategory",sqlDatabase/" WHERE DatabaseID=",⍕DBID[67]  [68]      ⍝ Create Headers for Results Table[69]      cathead←(~sqlDatabase)↓'DatabaseID' 'ResultsCategoryID' 'BasisCategoryID' 'Sex' 'SepSpouseCF' 'PropMarrTable' 'PropMarrTableID' 'SpouseDefinition' 'PensionFrequency' 'PaymentMode' 'FirstYearIncrease' 'PenReviewDate' 'ExactAge' 'TVPropMarrTable' 'TVPropMarrTableID' 'TVSpouseDefinition'[70]  [71]      (ResID xxx sex SpCF HTable HTableID SpDef PenFreq PenMode FYInc PenRevDate ExactAge TVHTable TVHTableID TVSpDef)←⊃¨⎕split ⍕¨⍉(0,sqlDatabase)↓catrecs[72]      ∆←origrecs[;1+sqlDatabase]⍳MatrixZWB ResID[73]      clName←⊃(⊂¨∆)⊃¨⊂origrecs[;2+sqlDatabase][74]      :if ∨/∆←(⊂,'0')≡¨m2n ResID ⋄ 'Scheme' ASSIGN∆Dict 'clName[',(⍕WHERE ∆),';]' ⋄ :endif[75]      resIDDesc←⊃DLTB¨ResIDmap map MatrixZWB ResID[76]      sex←⊃,('M' 'F') ('Male' 'Female') mapp m2n sex[77]      SpCF←CheckTranslate SpCF[78]      ExactAge←CheckTranslate ExactAge[79]  [80]      benhead←(~sqlDatabase)↓'DatabaseID' 'ResultsCategoryID' 'ClassName' 'ContingencyID' 'StartYear' 'PastService' 'BenefitTypeID' 'BenefitBasis' 'CommutatopnRate'[81]      benhead←benhead,'InterestSwitch' 'PreInterestName' 'PreInterestGroup' 'PreInterestValue' 'PreInterestCap' 'PreInterestCollar' 'PreInterestTableID'[82]      benhead←benhead,'PostInterestName' 'PostInterestGroup' 'PostInterestValue' 'PostInterestCap' 'PostInterestCollar' 'PostInterestTableID'[83]      benhead←benhead,'ReviewDate' 'FASPeriod' 'InflationName' 'InflationGroup' 'InflationValue' 'InflationCap' 'InflationCollar' 'InflationTableID'[84]      benhead←benhead,'RevaluationName' 'RevaluationGroup' 'RevaluationValue' 'RevaluationCap' 'RevaluationCollar' 'RevaluationTableID'[85]      benhead←benhead,'IncreaseName' 'IncreaseGroup' 'IncreaseValue' 'IncreaseCap' 'IncreaseCollar' 'IncreaseTableID' 'IncreaseConsDesc' 'ExcessPre88GMP' 'ExcessPost88GMP' 'LiabilityValue'[86]  [87]      (ResID ClName ContID StYear PServ BenID Benbasis CashRate IntSw PreIntName PreIntGroup PreIntValue PreIntCap PreIntCollar)                        ←⊃¨14↑⎕split ⍕¨⍉(0,   sqlDatabase)↓origrecs[88]      (PreIntTabID PostIntName PostIntGroup PostIntValue PostIntCap PostIntCollar PostIntTabID)                                                         ←⊃¨ 7↑⎕split ⍕¨⍉(0,14+sqlDatabase)↓origrecs[89]      (SalRevDate FASPeriod InfName InfGroup InfValue InfCap InfCollar InfTabID)                                                                        ←⊃¨ 8↑⎕split ⍕¨⍉(0,21+sqlDatabase)↓origrecs[90]      (RevName RevGroup RevValue RevCap RevCollar RevTabID IncName IncGroup IncValue IncCap IncCollar IncTabID IncConsDesc IncPre88 IncPost88 LiabValue)←⊃¨16↑⎕split ⍕¨⍉(0,29+sqlDatabase)↓origrecs[91]      sEX←catrecs[catrecs[;1+sqlDatabase]⍳MatrixZWB ResID;3+sqlDatabase][92]  [93]      sEX←⊃,('M' 'F') ('Male' 'Female') mapp sEX[94]      ResIDDesc←⊃DLTB¨ResIDmap map ZWB ResID[95]      BenIDType←⊃DLTB¨(⍕¨¨spin ⎕split ((~⍙dbopen) ⍙DBFixedData 'BenefitType') OVER 1 ⍙DBadoCONCommand "SELECT * FROM BenefitType") mapp m2n BenID[96]      ContIDType←⊃DLTB¨(⍕¨¨spin ⎕split (0 'All Exits') OVER 1 ⍙DBadoCONCommand "SELECT * FROM Contingency") mapp m2n ContID[97]      PServ←CheckTranslate PServ[98]      StYear←CheckTranslate StYear[99]      IntSw←⊃((1+MatrixZWB IntSw)⊃¨⊂'Post' 'Pre'),¨⊂'-Ret Interest to Ret'[100]     IncPre88←CheckTranslate IncPre88[101]     IncPost88←CheckTranslate IncPost88[102]     LiabValue←'¯-' REPL ⊃⍕¨⌊.5+MatrixZWB LiabValue[103]     0 0⍴Assumptions_Review 'Lock' ⍝ Lock Spreadsheet Columns[104]     SSName1 ⎕wi 'onXRClick' '(col1order1 sort_column1)←(SSName1 col1order1 sort_column1) Review_Click ⍬'[105]     SSName2 ⎕wi 'onXRClick' '(col1order2 sort_column2)←(SSName2 col1order2 sort_column2) Review_Click ⍬'[106]     col1order1←'I4' ⎕fmt ⍳↑⍴ClName ⋄ sort_column1←1[107]     col1order2←'I4' ⎕fmt ⍳↑⍴clName ⋄ sort_column2←1[108]     ⍝ 'StartYear' 'InterestSwitch' 'PreInterestName' 'PreInterestTableID' 'PostInterestName' 'PostInterestTableID'[109]     ⍝ 'ReviewDate' 'FASPeriod' 'InflationName' 'InflationTableID' 'RevaluationName' 'RevaluationTableID' 'IncreaseName' 'IncreaseTableID' 'IncreaseConsDesc'[110] [111] :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)[112] [113]     SSName1 ⎕wi 'xmodified' 1[114]     SSName1 ⎕wi 'xColText' 1 ('>',SSName1 ⎕wi 'xColText' 1)[115]     ⍝ 'Sex' 'ContingencyID' 'StartYear' 'PastService' 'BenefitTypeID' 'BenefitBasis' 'CashRate' 'InterestSwitch' 'PreInterestName' 'PreInterestGroup' 'PreInterestValue'[116]     ⍝ 'PreInterestTableID' 'PostInterestName' 'PostInterestGroup'  'PostInterestTableID''ReviewDate' 'FASPeriod' 'InflationName' 'InflationGroup' 'InflationTableID'[117]     ⍝ 'RevaluationName' 'RevaluationGroup' 'RevaluationTableID' 'IncreaseName' 'IncreaseGroup' 'IncreaseTableID' 'IncreaseConsDesc' 'ExcessPre88GMP' 'ExcessPost88GMP'[118]     :for col :in 3 4 5 6 7 8 9 10 11 12 16 17 18 22 23 24 25 26 30 31 32 36 37 38 42 43 44 45[119]         SSName1 Win∆F1SSSetSelection ¯1 col ¯1 col[120]         SSName1 ⎕wi 'xSetAlignment' 3 0 2 0 ⍝ Align Input Centre[121]     :endfor[122]     SSName1 Win∆F1SSSetSelection ¯1 46 ¯1 46 ⍝ 'LiabilityValue'[123]     SSName1 ⎕wi 'xSetAlignment' 4 0 2 0 ⍝ Align Input Right[124]     SSName1 Win∆F1SSSetSelection 1 1 1 1[125] [126]     SSName2 ⎕wi 'xColText' 1 ('>',SSName2 ⎕wi 'xColText' 1)[127]     :for col :in 3 4 6 7 8 9 10 11 12 14 15 ⍝ 'Sex' 'SepSpouseCF' 'PropMarrTableID' 'SpouseDefinition' 'PensionFrequency' 'PaymentMode' 'FirstYearIncrease' 'PenReviewDate' 'ExactAge' 'TVPropMarrTableID' 'TVSpouseDefinition'[128]         SSName2 Win∆F1SSSetSelection ¯1 col ¯1 col[129]         SSName2 ⎕wi 'xSetAlignment' 3 0 2 0 ⍝ Align Input Centre[130]     :endfor[131]     SSName1 ⎕wi "SetColWidthAuto" ¯1 ¯1 ¯1 ¯1 0[132]     SSName2 ⎕wi "SetColWidthAuto" ¯1 ¯1 ¯1 ¯1 0[133]     SSName2 Win∆F1SSSetSelection 1 1 1 1[134] [135] :case 'Lock'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)[136] [137]     ⍝ 'ClassName' 'ResultsCategoryID' "Sex" 'ContingencyID' 'StartYear' 'PastService' 'BenefitTypeID' 'InterestSwitch'[138]     ⍝ 'PreInterestName' 'PreInterestGroup' 'PreInterestValue' 'PreInterestCap' 'PreInterestCollar' 'PreInterestTableID'[139]     ⍝ 'PostInterestName' 'PostInterestValue' 'PostInterestCap' 'PostInterestCollar' 'PostInterestTableID'[140]     ⍝ 'ReviewDate' 'FASPeriod' 'InflationName' 'InflationTableID' 'RevaluationName' 'RevaluationTableID'[141]     ⍝ 'IncreaseName' 'IncreaseValue' 'IncreaseCap' 'IncreaseCollar' 'IncreaseTableID' 'LiabilityValue'[142]     SSName1 Win∆F1SSProtectCells ∆,¨∆←(⊂¯1),¨lock_cols[143]     SSName2 Win∆F1SSProtectCells ¯1 ¯1 ¯1 ¯1 ⍝ Everything[144] [145] :case 'Hide'  ⍝ Hiding/showing columns[146] [147]     :for col :in hide_cols[148]         SSName1 ⎕wi 'xColHidden' col hidden[149]     :endfor[150]     SSName1 Win∆F1SSSetSelection 1 1 1 1[151] [152] :case 'Change' ⍝ The onChange events (disabling fields according to value of others)[153] [154]     :repeat[155]         :select ↑field[156]         :case ' '[157]         :endselect[158]     :until mt field←1↓field[159] [160] :case 'PageChange'[161] [162]     'fmAssReview.bnAssumptions_ReviewHide' ⎕wi 'enabled' (~field≡⊂'pgBenefits')[163] [164] :case 'Valid' ⍝ Routine specific validation[165] [166] :case 'Run'[167] [168]     (col1order1 sort_column1)← (SSName1 col1order1 sort_column1) Review_Click 0 1[169]     benrecs←origrecs[170]     ⍝ Insert new data[171] ⍝⍝⍝    PreIntTabID ←(↑¨MatrixZWB PreIntTabID )×~^/¨⎕vi¨m2n PreIntValue[172] ⍝⍝⍝    PostIntTabID←(↑¨MatrixZWB PostIntTabID)×~^/¨⎕vi¨m2n PostIntValue[173]     InfTabID    ←(↑¨MatrixZWB InfTabID    )×~^/¨⎕vi¨m2n InfValue[174]     RevTabID    ←(↑¨MatrixZWB RevTabID    )×~^/¨⎕vi¨m2n RevValue[175] ⍝⍝⍝    IncTabID    ←(↑¨MatrixZWB IncTabID    )×~^/¨⎕vi¨m2n IncValue[176]     IncPre88 ←↑¨'Y'=IncPre88 [;1][177]     IncPost88←↑¨'Y'=IncPost88[;1][178] [179]     ∆←¯1+(⍳1+⍴benhead)~lock_cols[180]     :for ∆ :in spin ∆ (⍎¨m2n '[' StripText (SSName1 ⎕wi '∆name')[1+∆;]) ⋄ (col var)←∆[181]         :if 2=⍴⍴var ⋄ benrecs[;col]←m2n var[182]         :else       ⋄ benrecs[;col]←var[183]         :endif[184]     :endfor[185] [186]     :if ~tablechanged ⋄ :andif origrecs≡benrecs[187]         0 0⍴⎕ex 'benrecs'[188]     :endif[189]     parent ⎕wi '∆modified' 1 ⍝ Skip ignore changes[190] [191]     res←'Quit'[192] [193] :case 'Quit' ⍝ Deleting "other" variables[194]     0 0⍴⎕ex 'SSName1 SSName2 hidden hide_cols lock_cols col1order1 sort_column1 col1order2 sort_column2 cathead benhead'[195] [196] :endselect    ∇