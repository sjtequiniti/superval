    ∇ res←field Log_On parm;parent;extent;z;access;File;list;tieno;Error;∆[1]   ⍝ OVERWIN.sf#2[2]   ⍝ Function to allow user control on Logging On[3]   [4]   parent←'fmLogOn.' ⋄ res←0⍴'' ⍝ Default response[5]   [6]   :select parm[7]   :case 'Wait'[8]       parent ⎕wi 'style' 16[9]   [10]  :case 'Prepare' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)[11]      uSER←'' ⍝ "Default" User[12]      :if ~0∊⍴res←ConvPrefFile ⋄ :return ⋄ :endif[13]      :if uk=1 ⋄ UKLog_On ⋄ :endif[14]  [15]  :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)[16]  [17]      ⍝ Drop "blank" user entry[18]      (parent,'cbuser') ⎕wi 'list' (1 0↓(parent,'cbuser') ⎕wi 'list')[19]      (parent,'edpassword') ⎕wi '∆mandatory' MandPass ⍝ Set Password requirement[20]      access←⍙⍙access←0⍴0[21]      :for z :in m2n (parent,'cbuser') ⎕wi 'list'[22]          0 0⍴PrefFile ReadFile z '' 'access'[23]          ⍙⍙access←⍙⍙access,⊂access[24]      :endfor[25]      user←INIString 'Profile' 'UsrName' '' (UserProfDir,INIFile)[26]  [27]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)[28]  [29]      (parent,'bnLog_OnQuit') ⎕wi 'caption' 'Exit'[30]      (parent,'bnLog_OnQuit') ⎕wi 'tooltip' ('Exit ',SystemName)[31]      (parent,'bnLog_OnSave') ⎕wi 'tooltip' ('Log onto ',SystemName)[32]      (parent,'bnLog_OnFolder') ⎕wi 'enabled' (0<⍴DLTB (parent,'cbuser') ⎕wi 'text')[33]  [34]      0 0⍴(SystemDir,'OVERWIN') ReadFile 'User_Preferences'[35]      'CreateVars' RunModule 'User_Preferences'  ⍝ Create User Preferences[36]      0 0⍴(SystemDir,'OVERWIN') DeleteModule 'User_Preferences'[37]  [38]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)[39]  [40]      :repeat[41]          :select ↑field[42]          :case 'cbuser'[43]              user←(×(parent,'cbuser') ⎕wi 'value')/(parent,'cbuser') ⎕wi 'text'[44]              (parent,'bnLog_OnFolder') ⎕wi 'enabled' (0<⍴DLTMB (parent,'cbuser') ⎕wi 'text')[45]              (parent,'cbFolder') ⎕wi 'list' (1 0↓GetFolderHistory user)[46]              (parent,'cbFolder') ⎕wi 'value' 1[47]          :case 'cbFolder'[48]              ⍝ Resize Folder Combo[49]              extent←25+Win∆TextSize (parent,'cbFolder') ⎕wi 'list'[50]              (parent,'cbFolder') ⎕wi 'extent' extent[51]          :endselect[52]      :until mt field←1↓field[53]  [54]  :case 'Valid' ⍝ Routine specific validation[55]  [56]      :if 0∊⍴,DLTMB user ⍝ Mandatory "user" entry[57]          Win∆SetFocus parent,'cbuser'[58]          res←'Mandatory' ⋄ :return[59]      :endif[60]  [61]      :if mt ∆←(parent,'cbuser') ⎕wi 'value' ⋄ :orif 0=∆[62]          Win∆SetFocus parent,'cbuser'[63]          res←'Please select a valid User Name' ⋄ :return[64]      :endif[65]  [66]  ⍝⍝⍝    elx←⎕elx ⋄ ⎕elx←'⎕elx←elx ⋄ →invalid'[67]  ⍝⍝⍝    0 0⍴list←⎕xlib Folder←FullFolder Folder ⋄ ⎕elx←elx ⋄ →next ⍝⍝⍝ Could use FileExist?[68]  ⍝⍝⍝ invalid:[69]      :if ~FolderExist Folder←FullFolder Folder ⍝ Check Existence of Folder[70]          Win∆SetFocus parent,'cbFolder'[71]          res←'NotFolder' (¯1↓Folder) ⋄ →error[72]      :endif[73]  [74]  ⍝⍝⍝ next:[75]      :if mt ↑('ClientFile' Win∆CountryCode) GetParmFileList Folder[76]      :andif ∨/' SUPERVAL.CFG'⍷UPPERCASE ,(⎕xlib Folder),' '[77]      :andif ~0∊⍴⎕xlib Folder,'*.?PF'[78]          res←'SuperVal cannot be loaded in a Superval/21 folder'[79]  [80]  error:  list←(parent,'cbFolder') ⎕wi 'list'[81]          list←list[(⍳1↑⍴list)~list ExactTLU Folder;][82]          (parent,'cbFolder') ⎕wi 'list' list[83]          (parent,'cbFolder') ⎕wi 'value' 1[84]          :return[85]      :endif[86]  [87]      ⍝ Check Password[88]      :if ~password≡82 ⎕dr ⌽⊃⍙⍙access[(parent,'cbuser') ⎕wi 'value'][89]          :if 0∊⍴,password ⋄ :andif 0=parent ⎕wi '∆attempts'[90]               res←'Mandatory' ⋄ Win∆SetFocus parent,'edpassword'[91]               :return[92]          :else[93]               parent ⎕wi '∆attempts' (1+parent ⎕wi '∆attempts')[94]               :if 3=z←parent ⎕wi '∆attempts'[95]                   MDISPLAY 'ExitSystem'[96]                   uSER←user[97]                   'Log On failure' ExitSystem 'ForceLogoff'[98]                   CRASH ⍝⍝⍝ Force ⎕SA[99]               :else[100]                  res←'RetryPassword' (⍕z) (GetKeyState/⎕tcnl,'Note:  Caps Lock is On.')[101]                  Win∆SetFocus parent,'edpassword' ⋄ :return[102]              :endif[103]         :endif[104]     :endif[105] [106] :case 'Run'[107] [108]     :if ~0∊⍴Error←user ClientSetup Folder[109]         MDISPLAY Error ⋄ :return[110]     :endif[111] [112]     uSER←user ⍝ Establish User & Preferences[113]     uSERisRSE←ecflag^uSER≡'Robert Edsell'[114]     F1SSCursor←INIString uSER 'F1SSCursor' 'Down' PrefINI[115]     F1SSEdit←INIString uSER 'F1SSEdit' 'F2' PrefINI[116]     ExcelVersion←INIString 'Excel' 'Version%' 0 (UserProfDir,INIFile)[117] [118]     0 0⍴(SystemDir,'OVERWIN') ReadFile 'User_Preferences'[119]     'CreateVars' RunModule 'User_Preferences' ⍝ Create User Preferences[120]     0 0⍴(SystemDir,'OVERWIN') DeleteModule 'User_Preferences'[121] [122]     (parent,'bnLog_OnSave') ⎕wi 'enabled' 0[123]     :if ClientCheck 'LogOn'[124]         (parent,'bnLog_OnSave') ⎕wi 'enabled' 1[125]         :return[126]     :endif[127] [128]     user INIString 'Profile' 'UsrName' (UserProfDir,INIFile)[129]     TrackUser 'Logged On to ',InputDir[130] [131]     :if ~ecflag ⋄ SetAccess ⋄ :endif[132]     :if uSERisRSE ⋄ 0 0⍴(SystemDir,'HOUSEKEEP') ReadFile 'Housekeeping Functions' ⋄ :endif[133] [134]     ⍝ Display the Release Help Message (if required)[135]     :if ~∨/'⍺ß'∊version ⍝ Development versions[136]     :andif (uk≠1)∨~version≡' 9.00.00' ⍝ None for UK V9[137]     :andif (+/1 0.01 0.0001 ×3↑MatrixZWB SStoMAT '.',hVersion)<(+/1 0.01 0.0001 ×3↑MatrixZWB SStoMAT '.',version)[138]         'hVersion' Win∆ReleaseHelp (20↑'Release'),'History' ⍝ Still in old style file[139]     :endif[140] [141]     parent ⎕wi 'modified' 0 ⍝ Skip Ignore Changes[142]     res←'Quit'[143] [144] :case 'Quit' ⍝ Deleting "other" variables[145]     0 0⍴⎕ex '⍙⍙access'[146] [147] :endselect    ∇