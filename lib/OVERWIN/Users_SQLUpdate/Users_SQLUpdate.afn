    ∇ res←field Users_SQLUpdate parm;parent;list;rows;accesslevel;user;sqlConName;⍙⍙access;name;users[1]   ⍝ OVERWIN.sf#31[2]   ⍝ Function to allow user control on Users SQL update[3]   [4]   parent←'fmUserSQLUpd.' ⋄ res←0⍴'' ⍝ Default response[5]   [6]   :select parm[7]   [8]   :case 'Prepare'[9]       :if 0=⎕nc 'Users_tab'[10]          ⍙⍙access←⍬[11]          :for name :in m2n users←1 0↓GetUsers[12]              accesslevel←'0'[13]              0 0⍴PrefFile ReadFile name '' 'accesslevel'[14]              ⍙⍙access←⍙⍙access,zwb ⍕accesslevel[15]          :endfor[16]          Users_tab←(m2n 'Users' OVER users),[1.5](⊂'Access Level'),⍙⍙access[17]      :endif[18]  [19]  :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)[20]  [21]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)[22]  [23]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)[24]  [25]      :repeat[26]          :select ↑field[27]          :case ' '[28]          :endselect[29]      :until mt field←1↓field[30]  [31]  :case 'Valid' ⍝ Routine specific validation[32]  [33]  :case 'Run'[34]  [35]      (list rows)←(parent,'lsusers') ⎕wi 'Ref' 'list' 'value'[36]      :for user :in list←m2n list[rows;][37]          0 0⍴⍙VALUESdict ReadDictFile 'User_Preferences' '' (SStoMAT '/accesslevel/sqlConName')[38]          0 0⍴PrefFile ReadFile user '' (SStoMAT '/accesslevel/sqlConName')[39]          :if (zwb SQLAccess)>zwb ⍕accesslevel[40]              list←list~⊂user[41]              MDISPLAY "The Access Level of ",user," (",(⍕accesslevel),") is below the level required for these SQL Connection properties"[42]              :continue[43]          :endif[44]          :if mt sqlConName[45]          :orif 'Y'='YN' ASK 'Replace existing SQL Connection properties "',sqlConName,'" for User ',user,'?'[46]              sqlConName←SQLConName[47]              0 0⍴PrefFile SaveToFile user '' (pack 'sqlConName') 1[48]          :else[49]              list←list~⊂user ⋄ :continue[50]          :endif[51]      :endfor[52]      :if ~mt list[53]          MDISPLAY (⎕tcnl join list),⎕tcnl,⎕tcnl,'sucessfully updated'[54]      :endif[55]      res←'Quit'[56]  [57]  :case 'Quit' ⍝ Deleting "other" variables[58]  [59]  :endselect    ∇