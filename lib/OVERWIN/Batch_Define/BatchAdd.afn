    ∇ BatchAdd;parms;parent;list;i;ValMeth;test;csv;sex;size;runs
[1]   ⍝ OVERWIN.sf#20
[2]   ⍝ Add Defined Valuation Runs to Batch
[3]   
[4]   parent←'fmBatchDefine.'
[5]   :if ⍬≡(parent,'lsValMeth') ⎕wi 'value'
[6]       MDISPLAY 'Mandatory' ⋄ Win∆SetFocus parent,'lsValMeth' ⋄ :return
[7]   :endif
[8]   
[9]   :if ControlName ValidateParms 'Batch_Define' ⋄ :return ⋄ :endif
[10]  :if 'Save' SaveRunParms 'Batch_Define' ControlName ⋄ :return ⋄ :endif ⍝ Save Module Parameters
[11]  
[12]  ValMeth←⊂3↑,((parent,'lsValMeth') ⎕wi 'list')[(parent,'lsValMeth') ⎕wi 'value';]
[13]  
[14]  parent←'fmBatchDefine.fRunOpt.'
[15]  parms←⊂FieldDesc parent,'cbvDATEind'
[16]  :if uk=1 ⋄ parms←parms,⊂test←(parent,'cbtest') ⎕wi 'text'
[17]  :else    ⋄ parms←parms,⊂test←CheckTranslate ⍕(parent,'cktest') ⎕wi 'value'
[18]  :endif
[19]  :if uk=1 ⋄ :orif ValMeth∊'DAB' 'ABC' 'PEN' 'DEF' ⋄ parms←parms,⊂'Yes'
[20]  :else                                            ⋄ parms←parms,⊂FieldDesc parent,'ckPROPT'
[21]  :endif
[22]  parms←parms,⊂FieldDesc parent,'edcontper'
[23]  parms←parms,⊂FieldDesc parent,'ckinsind'
[24]  parms←parms,⊂FieldDesc parent,'cbabNO'
[25]  :if 'N'≠↑test ⋄ parms←parms,'No' ''
[26]  :elseif uk=1  ⋄ parms←parms,(FieldDesc parent,'cknewent') (             FieldDesc parent,'cbNEparms')
[27]  :else         ⋄ parms←parms,(FieldDesc parent,'cknewent') (1 HyphenSwap FieldDesc parent,'cbNEparms')
[28]  :endif
[29]  parms←parms,⊂FieldDesc parent,'ckaosind'
[30]  parms←parms,⊂1 HyphenSwap FieldDesc parent,'cbSurcparms'
[31]  
[32]  parent←'fmBatchDefine.fOutOpt.'
[33]  :if uk=1 ⋄ parms←parms,'No' 'No'
[34]  :else    ⋄ parms←parms,(FieldDesc parent,'ckdecopt') (FieldDesc parent,'ckpbens')
[35]  :endif
[36]  :if 'N'≠↑test          ⋄ parms←parms,⊂'No',(uk=1)/'ne'
[37]  :elseif ValMeth≡⊂'NEC' ⋄ parms←parms,⊂'Yes'
[38]  :elseif uk=1           ⋄ parms←parms,⊂FieldDesc parent,'cbdataind'
[39]  :else                  ⋄ parms←parms,⊂FieldDesc parent,'ckdataind'
[40]  :endif
[41]  :if 'N'≠↑test ⋄ :orif ValMeth∊'NEC' 'PEN' 'PPA' 'PPD' 'PPP',(uk≠1)/⊂'DEF' ⋄ parms←parms,⊂''
[42]  :else         ⋄ parms←parms,⊂FieldDesc parent,'cksummopt'
[43]  :endif
[44]  :if 'N'=↑test ⋄ :andif ValMeth∊(⊂'PEN'),(uk≠1)/⊂'DEF' ⋄ parms←parms,⊂FieldDesc parent,'ckmemsumm'
[45]  :else                                                 ⋄ parms←parms,⊂''
[46]  :endif
[47]  parms←parms,⊂FieldDesc parent,'ckvalout'
[48]  parms←parms,⊂FieldDesc parent,'ckkeepfile'
[49]  :if ValMeth∊'SUR' 'NOT' ⋄ parms←parms,⊂'Yes' ⋄ csv←'No'
[50]  :elseif 'N'≠↑test       ⋄ parms←parms,⊂csv←'No'
[51]  :else                   ⋄ parms←parms,⊂csv←FieldDesc parent,'ckSSexport'
[52]  :endif
[53]  :if csv≡'Yes' ⋄ parms←parms,⊂FieldDesc parent,'ckSSexpparms'
[54]  :else         ⋄ parms←parms,⊂''
[55]  :endif
[56]  :if 'N'≠↑test ⋄ parms←parms,⊂'No'
[57]  :else         ⋄ parms←parms,⊂FieldDesc parent,'ckKeepResult'
[58]  :endif
[59]  
[60]  ⍝ New UK fields
[61]  parent←'fmBatchDefine.fOutOpt.'
[62]  parms←parms,⊂FieldDesc parent,'ckfscopt'
[63]  parms←parms,⊂'Full' ⍝⍝⍝ OutputStyle no longer used
[64]  parent←'fmBatchDefine.fRunOpt.'
[65]  parms←parms,⊂FieldDesc parent,'ckaggopt'
[66]  parms←parms,⊂FieldDesc parent,'ckbencap'
[67]  parms←parms,⊂FieldDesc parent,'cks143'
[68]  :if uk=1 ⋄ :andif 'Both'≡sex←DLTB (parent,'cbSexSel') ⎕wi 'text' ⋄ size←2 ⋄ parms←(parms,⊂'Male') OVER (parms,⊂'Female')
[69]  :else                                                            ⋄ size←1 ⋄ parms←parms,⊂sex
[70]  :endif
[71]  parms←parms,⊂FieldDesc parent,'ckAgeInterp'
[72]  parms←parms,⊂FieldDesc 'fmBatchDefine.fOutOpt.ckIndCashFlow'
[73]  parms←parms,⊂FieldDesc 'fmBatchDefine.fOutOpt.ckVFtables'
[74]  
[75]  list←'fmBatchDefine.lvBases' ⎕wi 'list'
[76]  :for i :in 'fmBatchDefine.lvBases' ⎕wi 'value'
[77]      runs←((size,3)⍴ValMeth,(i=list[;1])⌿list[;3 4]),MATRIX parms
[78]      :if 0=⎕nc 'BatchRow' ⋄ BatchedNest←BatchedNest⍪runs
[79]      :else                ⋄ BatchedNest[BatchRow;]←runs
[80]      :endif
[81]  :endfor
[82]  
[83]  'Quit' EndModule 'Batch_Define'
    ∇
