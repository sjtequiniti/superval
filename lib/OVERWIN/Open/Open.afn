    ∇ res←field Open parm;parent;tab;z;list
[1]   ⍝ OVERWIN.sf#11
[2]   ⍝ Function to allow user control on Open Dialog
[3]   
[4]   parent←'fmOpen.' ⋄ res←0⍴'' ⍝ Default response
[5]   
[6]   :select parm
[7]   
[8]   :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)
[9]   
[10]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)
[11]  
[12]      parent ⎕wi '∆parm' 1 ⍝ Parameter File Lists and Descriptions
[13]  
[14]      :if z←1=rowsIn tab←ParametersTable for 'Module' OpenedModule ⍝ Can Import Parameters
[15]      :andif z←accesslevel≥⍎↑tab at 'ModuleAccess' ⍝ Has access to Add Parameters
[16]          (parent,'bnOpenImport') ⎕wi 'onClick' ('"',(↑tab at 'ModuleFile'),'" RunImportParms "',OpenedModule,'"')
[17]          (parent,'bnOpenImport') ⎕wi 'tooltip' ("Import ",(↑tab at 'ModuleDesc')," Parameter Set from another Folder")
[18]      :else
[19]          (parent,'bnOpenImport') ⎕wi 'visible' ¯1
[20]      :endif
[21]  
[22]      :if ~z ⋄ :andif 0∊⍴1⊃GetParmDesc InputsType ⋄ res←'NoSavedParms' ⋄ :return ⋄ :endif
[23]      (parent,'bnOpenSave') ⎕wi 'tooltip' 'Select Parameter Set'
[24]  
[25]      :if useBasisCat ⋄ :andif (⊂OpenedModule)∊'Actives' 'Deferreds' 'Pensioners',¨⊂'_Basis'
[26]          list←(' '=2⊃¨2↑¨list[;4])⌿list←'fmOpen.lvSavedParms' ⎕wi 'list'
[27]          :if ∨/z←~unique list[;3],¨↑¨list[;4]
[28]              MDISPLAY ⎕tcnl join (⊂'Duplicate Basis Identifier '),¨(⊂' in File ') join¨spin (↑¨z⌿list[;4]) (z⌿list[;3])
[29]          :endif
[30]      :endif
[31]  
[32]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)
[33]  
[34]      :repeat
[35]          :select ↑field
[36]          :case 'SavedParms'
[37]              ((parent,'lvSavedParms') 'Open') Win∆UpdateListview GetParmDesc InputsType
[38]          :case 'lvSavedParms'
[39]              z←⍴(parent,'lvSavedParms') ⎕wi 'value'
[40]              (parent,'bnOpenSave') ⎕wi 'enabled' (1=z)
[41]              (parent,'bnOpenDelete') ⎕wi 'enabled' ((×z)^genAccess[1]≤accesslevel)
[42]          :endselect
[43]      :until mt field←1↓field
[44]  
[45]  :case 'Run'
[46]  
[47]      res←'Quit'
[48]  
[49]  :case 'Quit' ⍝ Deleting "other" variables
[50]  
[51]      0 0⍴⎕ex 'SavePath'
[52]  
[53]  :endselect
    ∇
