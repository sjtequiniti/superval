    ∇ res←Batch_Display_Valid;∆;method;File;type;Index;z;size;Dirsize;BNest;tab;msk;list;vALmETH;ConsDBName;⍙⍙httpIPADDR;⍙⍙httpPORT;⍙⍙httpRESPLIMIT;maxtries;tries;response[1]   ⍝ OVERWIN.sf#19[2]   ⍝ Validation of Batch Parameters[3]   res←0⍴''[4]   [5]   :if useBasisCat[6]       :if ∨/' '≠2⊃¨2↑¨BatchedNest at 'Basis Description'[7]           res←'All Basis Parameter descriptions must be in the form {Single Character Basis Identifier} followed by a space and the description of the Basis'[8]           :return[9]       :endif[10]  [11]      :for ∆ :in nub spin BatchedNest at 'Valn Method' 'Basis File' ⋄ (method File)←∆[12]          :select method[13]          :caselist 'PEN' 'PPP' ⋄ type←'Pensioners_Basis'[14]          :caselist 'DEF' 'PPD' ⋄ type←'Deferreds_Basis'[15]          :else                 ⋄ type←'Actives_Basis'[16]          :endselect[17]          :if ~FileExist InputDir,File,'.sf'[18]              res←'FileNotFound' (InputDir,File) ⋄ :return[19]          :else[20]              Index←((InputDir,File) ReadFile 'Index') for '∆_Name' type[21]              ∆←(~unique ∆)/∆←↑¨Index at '∆_Description'[22]              :if ∨/z←∆∊↑¨((BatchedNest for 'Valn Method' method) for 'Basis File' File) at 'Basis Description'[23]                  res←res,'Duplicate Basis Identifier(s) "',(z/∆),'" in File ',File,⎕tcnl[24]              :endif[25]          :endif[26]      :endfor[27]      :if ~mt res←¯1↓res ⋄ :return ⋄ :endif[28]  :endif[29]  [30]  :if zwb excelOutput[31]      size←⍳0 ⋄ Dirsize←(⍴OutputDir)+12≤ExcelVersion[32]      :for row :in 1↓⍳↑⍴BatchedNest[33]          BNest←BatchedNest[1,row;][34]          tab←(PathNameTab for 'Short' ShortFilenames) for 'Method' (↑BNest at 'Valn Method')[35]          :if 'Y'=↑↑BNest at 'Store Results'[36]              msk←∊1,'Y'=↑¨¨BNest at 'Exact Age Interpolation' 'AOS' 'Cap Accrued Benefits'[37]              size←size,Dirsize+(⍴↑BNest at 'Basis File')+(+/msk×↑¨tab at 'Base' 'AgeInterp' 'aosind' 'Capped')+(+/(10,(~ShortFilenames)/1)≤zwb ↑BNest at 'Control Period')+ShortFilenames×'P'=↑↑BNest at 'Target Benefit'[38]          :else[39]              size←size,0[40]          :endif[41]      :endfor[42]      :if ∨/z←size>218[43]          res←'Excel has a limit of 218 characters for the path and filename of an Excel file.  '[44]          res←res,'The following runs will exceed this limit (because of the length of the combination of your Output Folder path and Basis File names):',⎕tcnl[45]          res←res,DLTB ⎕tcnl,(⊃z⌿BatchedNest[;1]),' ',(⊃z⌿BatchedNest[;2]),' ',(⊃z⌿BatchedNest[;3]),(uk=1)/' ',⊃(z←0,z)⌿BatchedNest[;29][46]          res←res,⎕tcnl,⎕tcnl,'The following solutions are available:'[47]          res←res,(~ShortFilenames)/⎕tcnl,'    -  use the short Excel filenames (system-level) option in SuperVal; and/or'[48]          res←res,⎕tcnl,'    -  choose an Output Folder with a shorter pathname (or map the Output Folder to a drive); and/or'[49]          res←res,⎕tcnl,'    -  use shorter Basis file names; and/or'[50]          res←res,⎕tcnl,'    -  don''t create Excel Output in Valuation Runs.'[51]          :return[52]      :endif[53]  :endif[54]  [55]  :if XLCtl ⋄ :andif zwb consolidate[56]      :if (⊂'PP')∊2↑¨list←BatchedNest at 'Valn Method'[57]          :if ∨/~(⊂'PP')≡¨2↑¨list[58]              res←'Cannot consolidate with a mix of PPF runs and other runs'[59]              Win∆SetFocus parent,'fConsolid.ckconsolidate' ⋄ :return[60]          :elseif ~^/(⊂↑list)≡¨list←lmt BatchedNest at 'S143 Entry'[61]              res←'Only compatible PPF runs (all s179 or all s143) can be included in a Consolidation'[62]              Win∆SetFocus parent,'fConsolid.ckconsolidate' ⋄ :return[63]          :else[64]              vALmETH←'PP',(∨/'Y'∊¨list) means '3' else 'F'[65]          :endif[66]      :elseif mt list←list~'PEN' 'DEF'[67]          vALmETH←'AAN'[68]      :elseif ~^/(⊂vALmETH←↑list)≡¨list[69]          res←'All Actives Runs must use the same Valuation Method'[70]          Win∆SetFocus parent,'fConsolid.ckconsolidate' ⋄ :return[71]      :endif[72]  [73]      :if 'PUC'≡vALmETH[74]          :if   ~^/(⊂↑list)≡¨list←(BatchedNest for 'Valn Method' 'PUC') at 'Control Period'[75]          :orif ~^/(⊂↑list)≡¨list←(BatchedNest for 'Valn Method' 'PUC') at 'Insured Cost'[76]              res←'All Actives PUC Runs must use the same Control Period and Insured Cost flag'[77]              Win∆SetFocus parent,'fConsolid.ckconsolidate' ⋄ :return[78]          :endif[79]      :elseif vALmETH≡'DAB'[80]          :if   ~^/(⊂↑list)≡¨list←(BatchedNest for 'Valn Method' 'DAB') at 'Target Benefit'[81]          :orif ~^/(⊂↑list)≡¨list←(BatchedNest for 'Valn Method' 'DAB') at 'Control Period'[82]              res←'All Actives DAB Runs must use the same Target Benefit and Control Period'[83]              Win∆SetFocus parent,'fConsolid.ckconsolidate' ⋄ :return[84]          :endif[85]      :endif[86]  [87]      :if 'Y'∊↑¨BatchedNest at 'Test'[88]          res←'Test runs cannot be included in a Consolidation'[89]          Win∆SetFocus parent,'fConsolid.ckconsolidate' ⋄ :return[90]      :endif[91]  [92]      :if ~^/(⊂↑list)≡¨list←BatchedNest at 'Valn Date'[93]          res←'All valuation runs must be at the same Valuation Date'[94]          Win∆SetFocus parent,'fConsolid.ckconsolidate' ⋄ :return[95]      :endif[96]  [97]      :if ~^/(⊂↑list)≡¨list←BatchedNest at 'ALM/LDI Interface'[98]          res←'All valuation runs must use the same ALM/LDI Interface setting'[99]          Win∆SetFocus parent,'fConsolid.ckconsolidate' ⋄ :return[100]     :endif[101] [102]     :if ~^/(⊂↑list)≡¨list←BatchedNest at 'AOS'[103]         res←'All valuation runs must use the same Analysis of Surplus setting'[104]         Win∆SetFocus parent,'fConsolid.ckconsolidate' ⋄ :return[105]     :endif[106] [107]     :if ~^/(⊂↑list)≡¨list←BatchedNest at 'Exact Age Interpolation'[108]         res←'All valuation runs must use the same Exact Age Interpolation setting'[109]         Win∆SetFocus parent,'fConsolid.ckconsolidate' ⋄ :return[110]     :endif[111] [112]     :if 'N'∊↑¨BatchedNest at 'Store Results'[113]         res←'All valuation runs must store Valuation Results'[114]         Win∆SetFocus parent,'fConsolid.ckconsolidate' ⋄ :return[115]     :endif[116] [117]     list←↑¨BatchedNest at 'Cap Accrued Benefits' ⋄ ((list=' ')/list)←'N' ⍝ Replace blank with N[118]     :if ~^/(⊂↑list)≡¨list[119]         res←'All valuation runs must be either Capped or Uncapped'[120]         Win∆SetFocus parent,'fConsolid.ckconsolidate' ⋄ :return[121]     :endif[122] [123]     :if mt ConsDBName←(parent,'fConsolid.edconsDBName') ⎕wi 'text'[124]         Win∆SetFocus parent,'fConsolid.edconsDBName'[125]         res←'Mandatory' ⋄ :return[126]     :endif[127]     :if (⊂UPPERCASE '.' Win∆Child ConsDBName)∊'XLS' 'XLSX' 'XLSM' 'MDB' 'ACCDB' 'MDF'[128]         ConsDBName←'.' StripText ConsDBName[129]     :endif[130]     :if   (~sqlDatabase)^(⊂UPPERCASE ConsDBName)∊UPPERCASE¨Win∆Parent¨m2n ⎕xlib ConsolidDir,'*.*db'[131]     :orif                (⊂UPPERCASE ConsDBName)∊UPPERCASE¨Win∆Parent¨m2n ⎕xlib OutputDir,'*.xls*'[132]         Win∆SetFocus parent,'fConsolid.edconsDBName'[133]         res←'AlreadyFile' ('Database File or Excel File named "',ConsDBName,'"') ⋄ :return[134]     :endif[135]     :if sqlDatabase ⋄ :andif ¯1↑ConsDBName ⍙DBExists 2[136]         Win∆SetFocus parent,'fConsolid.edconsDBName'[137]         res←'AlreadyFile' ('SQL Server Database named "',ConsDBName,'"') ⋄ :return[138]     :endif[139] :endif[140] [141] :if (parent,'fDisplay.ckHPCenabled') ⎕wi 'enabled'[142] :andif zwb HPCenabled[143] :andif ~mt PrefFile ReadFile 'Config_LoadShare' ''[144] :andif 'HTTP'≡4↑MethSubProc[145]     ⍙⍙hpcLogTie←(HPCDir,'log\') HPC_Log_Start ⍙⍙hpcuSER←'SuperVal ','[]' embrace uSER[146] [147]     :if mt HPCbroker[148]         Win∆SetFocus  parent,'fDisplay.cbHPCbroker'[149]         res←'SelectionReq' ⋄ :return[150]     :endif[151] [152]     msk←(m2n HTTPnames)∊⊂HPCbroker[153]     :if 'My Machine'≡⍙⍙httpIPADDR←DLTB msk⌿HTTPipaddr ⍝ Use the current machine[154]         ⍙⍙httpIPADDR←'127.0.0.1'                      ⍝ Could also be "localhost"[155]     :elseif (⊂⍙⍙httpIPADDR)∊'Local IP Address' 'My Local IP Address' ⍝ Get the current local address[156]         ⍙⍙httpIPADDR←MyAddress[157]     :endif[158]     ⍙⍙httpPORT     ← ⎕fi ,msk⌿HTTPport[159]     ⍙⍙httpRESPLIMIT←(⎕fi ,msk⌿HTTPresplimit)×1000 ⍝ Convert to milliseconds[160] [161]     maxtries←2 ⋄ tries←1[162]     ('Task:' 'Try:') Win∆ProgressBar 'SetLabels'[163]     'Testing Request Broker Connection' Win∆ProgressBar 'Open'[164]     (1 1 'Testing Request Broker Connection') Win∆ProgressBar 'FileUpdate'[165]     :repeat[166]         (tries maxtries (⍕tries)) Win∆ProgressBar 'MemberUpdate'[167]         response←eis 1 1 BrokerRequest 'sta?tid=0'[168]     :until ~∨/'Nothing'⍷↑¯1↑response ⋄ :orif maxtries<tries←tries+1[169]     Win∆ProgressBar 'Close'[170] [171]     :if ∨/'Nothing'⍷↑¯1↑response[172]         Win∆SetFocus  parent,'fDisplay.cbHPCbroker'[173]         res←'Selected Valuation Broker is not active' ⋄ :return[174]     :endif[175]     0 0⍴DeleteVars 'Config_LoadShare'[176] :endif    ∇