    ∇ InputDir BatchRun unattended;⎕io;BatchRow;TotalRuns;BatchJobName;xtag;ResultsCategoryID;ClassID;ExcelRunButton;ValnIndex;⍙dbopt;neIND;VFmissing;BasisCategoryID;MItables;inerror;MembGroup;newrecsize;dattie;IFbasischanged;comments;schemafiles;⍙⍙SubProcTab;⍙⍙MembTable;⍙⍙SubProcKeys;hpcHTTP;CLEARVARS;list;expungelist;relRules;No∆Pens;test;ppf;MethSubProc;SVRBGLOBALS;⍙⍙MaxSubProc;⍙⍙MaxSubProcMemb;⍙⍙MethSubProc;⍙⍙MinSubProcMemb;⍙⍙httpIPADDR;⍙⍙httpPORT;ValMeth
[1]   ⍝ OVERWIN.sf#19
[2]   ⍝ Run a Batch of Valuation Runs
[3]   ⎕io←0
[4]   
[5]   :if scenario ⋄ BatchJobName←DLTB (SStoMAT SavedBatch)[1;]
[6]   :else        ⋄ BatchJobName←ControlName ⎕wi '∆savedesc'
[7]   :endif
[8]                                                                                                                        ⍝⍝⍝ Localise xtag
[9]   0 0⍴(⊂SystemDir,'VALNWIN') ReadFile¨'Valn Initialisation' 'Valuation General' 'Valuation Finish' 'Valuation PenProj' 'Valuation HTML',XLCtl/'Valuation Database' 'Valuation Excel'
[10]  
[11]  ⍝ The valuation function is run from the click of a Button to enable the deletion of the Excel COM object
[12]  ExcelRunButton←(ControlName,'.bntemp') ⎕wi 'Create' 'Button' ('visible' 0)
[13]  inerror←1
[14]  :if hpcHTTP←hpcenabled ⍝ Read HPC Configuration
[15]      0 0⍴(SystemDir,'WLSWIN') ReadFile 'HPC_Valuation'
[16]      HPC_Prepare
[17]  :endif
[18]  
[19]  :for BatchRow :in 1+⍳TotalRuns←rowsIn BatchedNest←BatchConvert BatchedNest
[20]      ((BatchRow+TotalRuns×↑NoScenario) (TotalRuns×1↓NoScenario) (DLTMB ' ',⊃(BatchedNest[BatchRow;])[0 1,((uk=1)/28),2])) Win∆ProgressBar 'FileUpdate'
[21]      (0 1 'Initialising') Win∆ProgressBar 'MemberUpdate'
[22]  
[23]      MembGroup←(('PEN' 'PPP' 'DEF' 'PPD')⍳⊂0⊃BatchedNest[BatchRow;])⊃2 2 1/'Pensioners' 'Deferreds' 'Actives'
[24]      0 0⍴(SystemDir,(3↑MembGroup),'WIN') ReadFile 'Initialisation'
[25]  
[26]      ExcelRunButton ⎕wi 'onClick' 'inerror←MembGroup VALN_Valid BatchedNest[BatchRow;]'
[27]      ExcelRunButton ⎕wi 'Click'
[28]      :if inerror
[29]          ⎕NUNTIE (⎕xnnums,⎕nnums)~tpL,⍙⍙hpcLogTie ⍝ Close all files
[30]          CLEARVARS
[31]          :continue
[32]      :endif
[33]  
[34]      :select MembGroup
[35]      :case 'Pensioners' ⋄ 0 0⍴(⊂SystemDir,'PENWIN') ReadFile¨(⊂'MemberCalcs')                                                                                       ,(test/⊂'VarPrint')
[36]      :case 'Deferreds'  ⋄ 0 0⍴(⊂SystemDir,'DEFWIN') ReadFile¨  'MemberCalcs' 'All Benefits' 'Retirement' 'Death'                              'Accrued',(ppf/⊂'PPF'),(test/⊂'VarPrint'),⊂'Transfers'
[37]      :case 'Actives'    ⋄ 0 0⍴(⊂SystemDir,'ACTWIN') ReadFile¨  'MemberCalcs' 'All Benefits' 'Retirement' 'Death' 'Ill-Health',(bGAD/⊂'PHI'),'Leaving' 'Accrued',(ppf/⊂'PPF'),(test/⊂'VarPrint')
[38]                           0 0⍴(SystemDir,'VALNWIN') ReadFile 'Valuation ',⊃BatchedNest[BatchRow;0] ⍝ Valuation Method Functions
[39]      :endselect
[40]      :if test ⋄ FOURDITdecomment (ClassID=4)⊃'⍝⌿⍝' '⍝⍀⍝' ⋄ :endif ⍝ Remove commenting of Test Lines
[41]  
[42]      :if hpcenabled
[43]          HPC_Run
[44]      :elseif uk=1 ⍝ UK local Runs
[45]          ExcelRunButton ⎕wi 'onClick' 'MembGroup VALN_START BatchedNest[BatchRow;]'
[46]          ExcelRunButton ⎕wi 'Click'
[47]  
[48]          test←ppf←1 ⍝⍝⍝ FIXME
[49]          :if test ⋄ 0 0⍴(SystemDir,'VALNWIN') DeleteModule 'FOURDIT Functions' ⋄ :endif
[50]          :select MembGroup
[51]          :case 'Pensioners' ⋄ 0 0⍴(⊂SystemDir,'PENWIN') DeleteModule¨(⊂'MemberCalcs')                                                                                               ,(test/⊂'VarPrint')
[52]                    :if test ⋄ 0 0⍴(⊂SystemDir,'VALNWIN') ReadFile¨'Valuation General' 'Valuation PenProj' ⋄ :endif ⍝ Re-read functions to get commented FOURDIT lines version
[53]          :case 'Deferreds'  ⋄ 0 0⍴(⊂SystemDir,'DEFWIN') DeleteModule¨  'MemberCalcs' 'All Benefits' 'Retirement' 'Death'                                      'Accrued',(ppf/⊂'PPF'),(test/⊂'VarPrint'),⊂'Transfers'
[54]          :case 'Actives'    ⋄ 0 0⍴(⊂SystemDir,'ACTWIN') DeleteModule¨  'MemberCalcs' 'All Benefits' 'Retirement' 'Death' 'Ill-Health',(bGAD/⊂'PHI'),'Leaving' 'Accrued',(ppf/⊂'PPF'),(test/⊂'VarPrint')
[55]                               0 0⍴(SystemDir,'VALNWIN') DeleteModule 'Valuation ',⊃BatchedNest[BatchRow;0] ⍝ Valuation Method Functions
[56]          :endselect
[57]  
[58]      :elseif (⊂0⊃BatchedNest[BatchRow;])∊'PEN' 'DEF' ⍝ Non-UK Pensioners/Deferreds
[59]  ⍝⍝⍝            0 0⍴(SystemDir,'VALNWIN') ReadFile 'Valuation PEN'
[60]          ExcelRunButton ⎕wi 'onClick' 'inerror←PEN∆START BatchedNest[BatchRow;]'
[61]          ExcelRunButton ⎕wi 'Click'
[62]  
[63]          0 0⍴(SystemDir,'VALNWIN') DeleteModule 'Valuation PEN'
[64]          :if uk=2 ⋄ :andif SSexport≡1
[65]              0 0⍴(SystemDir,'GMCWIN') DeleteModule 'Valuation PEN'
[66]          :endif
[67]      :else ⍝ Non-UK Actives
[68]  ⍝⍝⍝            0 0⍴(SystemDir,'VALNWIN') ReadFile 'Valn Initialisation'
[69]          ExcelRunButton ⎕wi 'onClick' 'inerror←VALN∆START BatchedNest[BatchRow;]'
[70]          ExcelRunButton ⎕wi 'Click'
[71]  
[72]          0 0⍴(⊂SystemDir,'VALNWIN') DeleteModule¨'Valn Initialisation' 'Valuation General' 'Valuation Finish' 'New Entrant General' 'New Entrant Finish'
[73]          0 0⍴(SystemDir,'OVERWIN') DeleteModule 'Batch_Define'
[74]          :if uk=2 ⋄ :andif SSexport≡1
[75]              0 0⍴(SystemDir,'GMCWIN') DeleteModule 'Valuation ACT'
[76]          :endif
[77]          :if development ⋄ 0 0⍴⎕wcall 'ShowWindow' APLFrame 'SW_MINIMIZE'
[78]          :else           ⋄ 0 0⍴⎕wcall 'ShowWindow' APLFrame 'SW_HIDE' ⋄ ⎕elx←'ERRORLOG'
[79]          :endif
[80]      :endif
[81]      :if ~inerror ⋄ :andif ⍙dbopt ⋄ :andif ~neIND ⋄ :andif ~hpcenabled
[82]          ValuationRunList←ValuationRunList OVER BatchRow ResultsCategoryID BasisCategoryID ScenarioID ClassID vDATE excelDelay ((~BasisCategoryID∊ValuationRunList at 'VFmissing')×VFmissing×BasisCategoryID) 0
[83]          0 0⍴⎕ex 'ResultsCategoryID ScenarioID ClassID'
[84]      :endif
[85]  :endfor
[86]  
[87]  :if ~scenario
[88]      'fmBatchDisplay' ⎕wi 'visible' ¯1 ⋄ FormName ⎕wi 'Focus'
[89]      0 0⍴'ADOcsvcmd' ⎕wi 'Delete'
[90]  :endif
[91]  
[92]  :if zwb consolidate
[93]      :if (rowsIn ValuationRunList)=rowsIn BatchedNest
[94]          ConsolidationOutput
[95]      :else
[96]          MDISPLAY 'Valuation Runs not Consolidated because one or more Valuation runs were not run'
[97]      :endif
[98]  :endif
[99]  
[100] :if ~scenario ⋄ :andif excelOutput ⋄ :andif ×rowsIn ValuationRunList
[101]     :if hpcenabled
[102]         ValuationRunList←(ValuationRunList sortedBy 'BatchRow') sortedBy 'ScenarioID'
[103]     :endif
[104]     ExcelOutputs ValuationRunList for ValuationRunList at 'ExcelDelay'
[105] :endif
[106] 0 0⍴ExcelRunButton ⎕wi 'Delete'
[107] 
[108] UpdateListviewDict 0
[109] 0 0⍴(SystemDir,'OVERWIN') ReadFile 'Client'
[110] 'CreateVars' RunModule 'Client'  ⍝ Create Client Vars
[111] 0 0⍴(SystemDir,'OVERWIN') DeleteModule 'Client'
[112] 
[113] 0 0⍴(⊂SystemDir,'VALNWIN') DeleteModule¨'Valn Initialisation' 'Valuation General' 'Valuation Finish' 'Valuation PenProj' 'Valuation HTML',XLCtl/'Valuation Database' 'Valuation Excel'
[114] :if hpcenabled
[115]     0 0⍴DeleteVars 'Config_LoadShare'
[116]     0 0⍴(SystemDir,'WLSWIN') DeleteModule 'HPC_Valuation'
[117] :endif
[118] 0 0⍴⎕ex ⊃((AbsDict for 'Module' 'Financials') for 'Type' 'Number1') at 'Variable'
[119] 
[120] ⎕nuntie (⎕nnums,⎕xnnums)~tpL,scenario/⍙⍙hpcLogTie
[121] 
[122] bLANKING←1
[123] :if ~scenario ⋄ Win∆ProgressBar 'Close' ⋄ :endif
    ∇
