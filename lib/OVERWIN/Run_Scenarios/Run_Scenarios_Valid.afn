    ∇ res←Run_Scenarios_Valid;list;size;Dirsize;BNest;tab;msk;PathNameTab;row
[1]   ⍝ OVERWIN.sf#29
[2]   ⍝ Validation of Scenarios Run settings
[3]   
[4]   :if mt list←(parent,'lvSavedBatch') ⎕wi 'list'
[5]       res←'A Valuation Batch run must be specified'
[6]       Win∆SetFocus parent,'lvSavedBatch' ⋄ :return
[7]   :endif
[8]   (parent,'lvSavedBatch') ⎕wi 'value' (list[;1]) ⍝ Select all for Variable assignment
[9]   :if mt list←(parent,'lvSavedScens') ⎕wi 'list'
[10]      res←'At least one Scenario run must be specified'
[11]      Win∆SetFocus parent,'lvSavedScens' ⋄ :return
[12]  :endif
[13]  (parent,'lvSavedScens') ⎕wi 'value' (list[;1])
[14]  
[15]  Win∆AssignVars ControlName
[16]  
[17]  0 0⍴⍙VALUESdict ReadDictFile 'Batch_Display'
[18]  0 0⍴ClientFile ReadModule 'Batch_Display' (DLTB (SStoMAT SavedBatch)[2;])
[19]  
[20]  :if (⊂'PP')∊2↑¨list←BatchedNest at 'Valn Method'
[21]      res←'PPF runs not supported'
[22]      Win∆SetFocus parent,'lvSavedBatch' ⋄ :return
[23]  :endif
[24]  
[25]  :if ~^/(⊂vALmETH←↑list)≡¨list←list~'PEN' 'DEF'
[26]      res←'All Actives Runs must use the same Valuation Method'
[27]      Win∆SetFocus parent,'lvSavedBatch' ⋄ :return
[28]  :endif
[29]  
[30]  :if 'Y'∊↑¨BatchedNest at 'Test'
[31]      res←'Test runs cannot be included'
[32]      Win∆SetFocus parent,'lvSavedBatch' ⋄ :return
[33]  :endif
[34]  
[35]  :if 'P'∊↑¨BatchedNest at 'Valn Date'
[36]      res←'All valuation runs must be at the Current Valuation Date'
[37]      Win∆SetFocus parent,'lvSavedBatch' ⋄ :return
[38]  :endif
[39]  
[40]  :if 'N'∊↑¨BatchedNest at 'Store Results'
[41]      res←'All valuation runs must store Valuation Results'
[42]      Win∆SetFocus parent,'lvSavedBatch' ⋄ :return
[43]  :endif
[44]  
[45]  list←↑¨BatchedNest at 'Cap Accrued Benefits' ⋄ ((list=' ')/list)←'N' ⍝ Replace blank with N
[46]  :if ~^/(⊂bENcAP←↑list)≡¨list
[47]      res←'All valuation runs must be either Capped or Uncapped'
[48]      Win∆SetFocus parent,'lvSavedBatch' ⋄ :return
[49]  :endif
[50]  
[51]  :if nOTpuc←~'PUC'≡vALmETH
[52]      cONTpER←'100' ⋄ iNSiND←'0'
[53]  :elseif ~^/(⊂cONTpER←↑list)≡¨list←(BatchedNest for 'Valn Method' 'PUC') at 'Control Period'
[54]  :orif   ~^/(⊂iNSiND ←↑list)≡¨list←(BatchedNest for 'Valn Method' 'PUC') at 'Insured Cost'
[55]      res←'All Actives PUC Runs must use the same Control Period and Insured Cost flag'
[56]      Win∆SetFocus parent,'lvSavedBatch' ⋄ :return
[57]  :endif
[58]  
[59]  :if ~DaB←vALmETH≡'DAB'
[60]      ABnO←' '
[61]  :elseif ~^/(⊂ABnO←   ↑list)≡¨list←(BatchedNest for 'Valn Method' 'DAB') at 'Target Benefit'
[62]  :orif   ~^/(⊂cONTpER←↑list)≡¨list←(BatchedNest for 'Valn Method' 'DAB') at 'Control Period'
[63]      res←'All Actives Runs must use the same Target Benefit and Control Period'
[64]      Win∆SetFocus parent,'lvSavedBatch' ⋄ :return
[65]  :endif
[66]  
[67]  :if XLCtl
[68]      :if (⊂UPPERCASE '.' Win∆Child ScenDBName)∊'XLS' 'XLSX' 'XLSM' 'MDB' 'ACCDB' 'MDF'
[69]          ScenDBName←'.' StripText ScenDBName
[70]      :endif
[71]      :if   (⊂UPPERCASE ScenDBName)∊UPPERCASE¨Win∆Parent¨m2n ⎕xlib ConsolidDir,'*.*db'
[72]      :orif (⊂UPPERCASE ScenDBName)∊UPPERCASE¨Win∆Parent¨m2n ⎕xlib OutputDir,'*.xls*'
[73]          Win∆SetFocus parent,'edScenDBName'
[74]          res←'AlreadyFile' ('Database File or Excel File named "',ScenDBName,'"') ⋄ :return
[75]      :endif
[76]      :if sqlDatabase ⋄ :andif ¯1↑ScenDBName ⍙DBExists 3
[77]          Win∆SetFocus parent,'edScenDBName'
[78]          res←'AlreadyFile' ('SQL Server Database named "',ScenDBName,'"') ⋄ :return
[79]      :endif
[80]  :endif
[81]  
[82]  0 0⍴(SystemDir,'OVERWIN') ReadFile 'Batch_Display' '' 'PathNameTab'
[83]  size←⍳0 ⋄ Dirsize←(⍴OutputDir)+12≤ExcelVersion
[84]  :for row :in 1↓⍳↑⍴BatchedNest
[85]      BNest←BatchedNest[1,row;]
[86]      tab←(PathNameTab for 'Short' ShortFilenames) for 'Method' (↑BNest at 'Valn Method')
[87]      :if 'Y'=↑↑BNest at 'Store Results'
[88]          msk←∊1,'Y'=↑¨¨BNest at 'Exact Age Interpolation' 'AOS' 'Cap Accrued Benefits'
[89]          size←size,Dirsize+(⍴↑BNest at 'Basis File')+(+/msk×↑¨tab at 'Base' 'AgeInterp' 'aosind' 'Capped')+(+/(10,(~ShortFilenames)/1)≤zwb ↑BNest at 'Control Period')+ShortFilenames×'P'=↑↑BNest at 'Target Benefit'
[90]      :else
[91]          size←size,0
[92]      :endif
[93]  :endfor
[94]  size←,size∘.+∊2+⍴¨(⊂'Primary Basis'),DLTB¨2⊃¨⎕split¨SStoMAT¨⎕split SavedScens
[95]  :if ∨/size>218
[96]      res←'Excel has a limit of 218 characters for the path and filename of an Excel file.  '
[97]      res←res,'Some of Scenario runs will exceed this limit (because of the length of the combination of your Output Folder path, Basis File names and Scenario Descriptions).'
[98]      res←res,⎕tcnl,⎕tcnl,'The following solutions are available:'
[99]      res←res,(~ShortFilenames)/⎕tcnl,'    -  use the short Excel filenames (system-level) option in SuperVal; and/or'
[100]     res←res,⎕tcnl,'    -  choose an Output Folder with a shorter pathname (or map the Output Folder to a drive); and/or'
[101]     res←res,⎕tcnl,'    -  use shorter Basis file names; and/or'
[102]     res←res,⎕tcnl,'    -  use shorter Scenario Descriptions.'
[103]     :return
[104] :endif
[105] 
[106] res←0⍴''
    ∇
