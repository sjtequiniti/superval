    ∇ Scenarios_Valuation;ScenarioDesc;∆;MESS;tpL;VALN∆Errors;ValuationRunList;scenario;AbortedRuns;ClassID;Sex;Desc;ExcelRunButton;sIDs;ClientAbsDict;ScenarioJobName;NoScenario;Reason;tab;groups;run;vDATEOrig;TermAdjFin;ScenGlobList;AdjustPointers;array;GlobList;parmsets;Scenbasisnos;ScenBasisData;ScenarioID;consolidate;hpcenabled;⍙⍙hpcLogTie;maxtries;tries;response;MethSubProc;⍙⍙hpcuSER;msk;⍙⍙httpIPADDR;⍙⍙httpPORT;⍙⍙httpRESPLIMIT
[1]   ⍝ OVERWIN.sf#29
[2]   
[3]   0 0⍴(SystemDir,'OVERWIN') ReadFile 'Batch_Display'
[4]   
[5]   VALN∆LOG 'Create' ⍝ Create Valuation Log tied to tpL
[6]   
[7]   ScenarioJobName←ControlName ⎕wi '∆savedesc'
[8]   ValuationRunList←MATRIX 'BatchRow' 'ResultsCategoryID' 'BasisCategoryID' 'ScenarioID' 'ClassID' 'vDATE' 'ExcelDelay' 'VFmissing' 'Skipped'
[9]   ScenGlobList←MATRIX 'Parms' 'Desc'
[10]  AbortedRuns←MATRIX 'ClassID' 'Sex' 'Desc' 'ScenarioDesc' 'Reason'
[11]  ClientAbsDict←AbsDict for 'Module' 'Client' ⋄ vDATEOrig←vDATE
[12]  :if hpcenabled←zwb HPCenabled ⍝ Check if Broker is alive
[13]  :andif ~mt PrefFile ReadFile 'Config_LoadShare' ''
[14]  :andif 'HTTP'≡4↑MethSubProc
[15]      ⍙⍙hpcLogTie←(HPCDir,'log\') HPC_Log_Start ⍙⍙hpcuSER←'SuperVal ','[]' embrace uSER
[16]  
[17]      msk←(m2n HTTPnames)∊⊂HPCbroker
[18]      :if 'My Machine'≡⍙⍙httpIPADDR←DLTB msk⌿HTTPipaddr ⍝ Use the current machine
[19]          ⍙⍙httpIPADDR←'127.0.0.1'                      ⍝ Could also be "localhost"
[20]      :elseif (⊂⍙⍙httpIPADDR)∊'Local IP Address' 'My Local IP Address' ⍝ Get the current local address
[21]          ⍙⍙httpIPADDR←MyAddress
[22]      :endif
[23]      ⍙⍙httpPORT     ← ⎕fi ,msk⌿HTTPport
[24]      ⍙⍙httpRESPLIMIT←(⎕fi ,msk⌿HTTPresplimit)×1000 ⍝ Convert to milliseconds
[25]  
[26]      maxtries←2 ⋄ tries←1
[27]      ('Task:' 'Try:') Win∆ProgressBar 'SetLabels'
[28]      'Testing Request Broker Connection' Win∆ProgressBar 'Open'
[29]      (1 1 'Testing Request Broker Connection') Win∆ProgressBar 'FileUpdate'
[30]      :repeat
[31]          (tries maxtries (⍕tries)) Win∆ProgressBar 'MemberUpdate'
[32]          response←eis 1 1 BrokerRequest 'sta?tid=0'
[33]      :until ~∨/'Nothing'⍷↑¯1↑response ⋄ :orif maxtries<tries←tries+1
[34]      Win∆ProgressBar 'Close'
[35]  
[36]      :if ∨/'Nothing'⍷↑¯1↑response
[37]          MDISPLAY 'Selected Valuation Broker is not active'
[38]          :return
[39]      :endif
[40]  :else    
[41]      ⍙⍙hpcLogTie←⍳0
[42]  :endif
[43]  excelOutput←zwb excelOutput
[44]  excelDelay←(~excelOutput)∨hpcenabled⌈zwb excelDelay
[45]  consolidate←'0'
[46]  
[47]  0 0⍴(SystemDir,'PARMWIN') ReadFile 'Scenarios' '' 'AdjustPointers'
[48]  parmsets←'Fin' 'RelNum' 'ParmsM' 'ParmsI' 'ParmsX' 'ParmsD' 'ParmsW' 'ParmsR' 'ParmsT' 'ParmsL' 'ParmsS' 'ParmsN'
[49]  
[50]  scenario←1 ⋄ NoScenario←0,1+↑⍴MATRIX SavedScens ⋄ OrigValnRun←zwb OrigValnRun ⋄ ScenValnRun←zwb ScenValnRun ⋄ ScenRel←ScenAbs←0
[51]  :for ScenarioDesc :in (⊂'Primary Basis'),DLTB¨2⊃¨⎕split¨SStoMAT¨⎕split SavedScens
[52]      ('Running ',(scenario/ScenarioDesc),' Valuations') Win∆ProgressBar 'Caption'
[53]  
[54]      :if ~ScenarioDesc≡'Primary Basis'
[55]          0 0⍴ReadModule 'Scenarios' 'None' ⍝ Read Defaults
[56]          :if 1≠⍴,ClientFile ReadFile 'Scenarios' ScenarioDesc
[57]              MDISPLAY 'Scenario definition "',ScenarioDesc,'" not found' ⋄ :continue
[58]          :endif
[59]          ScenGlobList←ScenGlobList Scenarios_RunDesc ⊂'Data'
[60]  
[61]          vDATE←ClientAbsDict Scenarios_Data 'Update'
[62]          :if TermAdjFin←(~mt DatavDATE)^zwb TermAdjFin
[63]              TermAdjFin←0⌈vDATEOrig YDAYS vDATE
[64]          :endif
[65]          ScenGlobList←ScenGlobList Scenarios_RunDesc parmsets
[66]          (ScenRel ScenAbs)←zwb¨ScenRel ScenAbs
[67]      :else
[68]          TermAdjFin←0
[69]      :endif
[70]  
[71]      :if ScenarioDesc≡'Primary Basis' ⋄ :orif zwb FinCurrent ⋄ :orif mt DLTB FinParms
[72]          0 0⍴ClientFile ReadFile 'Financials_Display'
[73]          FinParms←FinDefault
[74]      :else
[75]          FinDefault←FinParms
[76]      :endif
[77]      ⍙FinAssdict←GetFinList FinDefault
[78]  
[79]      :if 0=⎕nc 'FinDefault'
[80]      :orif mt DLTB FinDefault
[81]      :orif ~↑(∆ MESS)←2↑ClientFile ReadModule 'Financials' FinDefault 'Financial Assumptions' '' 1
[82]          MDISPLAY ⊃MESS[;3] ⋄ :continue
[83]      :endif
[84]  
[85]      InputDir BatchRun 1
[86]  
[87]      :if ScenarioDesc≡'Primary Basis' ⍝ After Primary Runs, change ScenGlobList to a "summarised" dictionary
[88]          :if 0=rowsIn ValuationRunList
[89]              unattended←0 ⋄ MDISPLAY 'Scenario Run aborted because all Primary Valuation Runs failed Validation'
[90]              :leave
[91]          :endif
[92]          ScenGlobList←ScenGlobList Scenarios_RunDesc 'Primary'
[93]  
[94]          Scenbasisnos←'Init' ⍙DBXL_ScenarioData ScenGlobList
[95]      :else
[96]          0 0⍴'Add' ⍙DBXL_ScenarioData ScenBasisData
[97]      :endif
[98]      ScenBasisData←0 2⍴0 ''
[99]      NoScenario←NoScenario+1 0
[100] :endfor
[101] 0 0⍴'ADOcsvcmd' ⎕wi 'Delete'
[102] 
[103] vDATE←ClientAbsDict Scenarios_Data 'Restore'
[104] 
[105] ExcelRunButton←(FormName,'.bntemp') ⎕wi 'Create' 'Button' ('visible' 0)
[106] 
[107] :if CreateScenXL ⋄ :andif ~mt (sIDs←nub ValuationRunList at 'ScenarioID')~1000000×sqlschemeID
[108]    :if (rowsIn ValuationRunList)=(rowsIn BatchedNest)×1+↑⍴MATRIX SavedScens
[109]         0 0⍴(SystemDir,'CONSWIN') ReadFile 'Scenario_Output'
[110]         ⍝ The Scenarios_Output function is run from the click of a Button to enable the deletion of the Excel COM object
[111]         ExcelRunButton ⎕wi 'onClick' 'ScenDBName Scenarios_Output ValuationRunList'
[112]         ExcelRunButton ⎕wi 'Click'
[113]         0 0⍴(SystemDir,'CONSWIN') DeleteModule 'Scenario_Output'
[114]     :else
[115]         MDISPLAY 'Scenario Excel Output not produced because one or more Valuation/Scenario runs were not run'
[116]     :endif
[117] :endif
[118] 
[119] :if excelOutput ⋄ :andif ×rowsIn ValuationRunList
[120]     ExcelOutputs ValuationRunList for ValuationRunList at 'ExcelDelay'
[121] :endif
[122] 0 0⍴ExcelRunButton ⎕wi 'Delete'
[123] 
[124] Win∆ProgressBar 'Close'
[125] 
[126] :if CreateScenXL ⋄ :andif 0≠⎕nc 'XLfile' ⋄ :andif 'Y'='YN' ASK 'Open Scenario Excel Output?'
[127]     ¯1 Win∆EditFile XLfile
[128] :endif
[129] 
[130] :if 0≠rowsIn AbortedRuns
[131]     MESS←'The following runs were skipped (see VALN.$LOG file for more detail):',⎕tcnl
[132]     :for run :in nub groups←spin AbortedRuns at 'ClassID' 'Sex' 'Desc' 'ScenarioDesc'
[133]         tab←AbortedRuns for (⊂run)≡¨groups
[134]         ClassID←↑tab at 'ClassID' ⋄ Sex←↑tab at 'Sex' ⋄ Desc←(↑tab at 'Desc'),' [',(↑tab at 'ScenarioDesc'),']' ⋄ Reason←nub tab at 'Reason'
[135]         MESS←MESS,⎕tcnl,' ' join (↑('MF'=↑Sex)/'Male' 'Female') (↑(ClassID=1 3 4)/'Actives' 'Deferreds' 'Pensioners') 'in' Desc ('{}' embrace '/' join Reason)
[136]     :endfor
[137]     unattended←0 ⋄ MDISPLAY MESS
[138] :endif
[139] 
[140] BROWSE 'ß',InputDir,'VALN.$LOG' ⋄ ⎕nuntie tpL,⍙⍙hpcLogTie
[141] 
[142] 0 0⍴(SystemDir,'OVERWIN') DeleteModule 'Batch_Display'
[143] 0 0⍴DeleteVars¨'Scenarios' 'Batch_Display'
[144] 
[145] 0 0⍴ClientFile ReadFile 'Financials_Display' ⍝ Restore FinDefault
[146] ⍙FinAssdict←GetFinList FinDefault
[147] 0 0⍴DeleteVars 'Financials_Display'
    ∇
