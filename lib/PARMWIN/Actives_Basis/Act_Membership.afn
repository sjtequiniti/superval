    ∇ field Act_Membership parm;page;isActive;MESS;sex[1]   ⍝ PARMWIN.sf#6[2]   ⍝ Do Initialisation, Changes and Validation of Membership[3]   [4]   page←'pgMembership.'[5]   [6]   :select parm[7]   :case 'Init'[8]       :if uk≠1[9]           0 0⍴(⊂'edNRA') Actives_Basis 'Change' ⍝ Set "nra" initially[10]      :elseif uk=1[11]          (parent,page,'fRetirement.edm_NRA') ⎕wi 'onChange' ((parent,page,'fRetirement.edm_NRA') ⎕wi 'onExit')[12]          (parent,page,'fRetirement.edf_NRA') ⎕wi 'onChange' ((parent,page,'fRetirement.edf_NRA') ⎕wi 'onExit')[13]          (parent,page,'fButtons.bnActives_BasisEditRA') ⎕wi 'onMouseEnter' '⎕wself ⎕wi "∆focusfield" ("#" ⎕wi "focus")'[14]      :endif[15]  [16]  :case 'Change'[17]      :select field[18]      :case 'cbnrdind'[19]          (parent,page,'fRetirement.ednrDATE') ⎕wi 'enabled' ('3'=1↑(parent,page,'fRetirement.cbnrdind') ⎕wi 'text')[20]      :case 'edNRA'[21]           nra←zwb (parent,page,'fRetirement.edNRA') ⎕wi 'text'[22]      :case 'edm_NRA'[23]          :if ~bGAD[24]              (parent,page,'fRetirement.edm_LRA') ⎕wi 'text' (m_LRA←(parent,page,'fRetirement.edm_NRA') ⎕wi 'text')[25]          :endif[26]      :case 'edf_NRA'[27]          :if ~bGAD[28]              (parent,page,'fRetirement.edf_LRA') ⎕wi 'text' (f_LRA←(parent,page,'fRetirement.edf_NRA') ⎕wi 'text')[29]          :endif[30]      :caselist 'cbm_RAParm' 'cbf_RAParm'[31]          :if ~mt ⍎(2↓field),'←"',(DLTB (parent,page,'fRetirement.',field) ⎕wi 'text'),'"'[32]              isActive←1[33]              sex←(↑('M' 'Fem')[1+'f'=field[3]]),'ale '[34]              MESS←2⊃((sex,'Retirement Age Parameter Set') 0) GET∆RetAgeGlobals 2↓field[35]              :if ~openParameters∨changedParm[36]                  changedParm←1[37]                  (parent,page,'fRetirement.',field) ⎕wi 'suppress' 1[38]                  Assign_Inputs 1[39]                  (parent,page,'fRetirement.',field) ⎕wi 'suppress' 0[40]                  changedParm←0[41]              :endif[42]              :if ~mt MESS ⋄ MDISPLAY ((⊃MESS[;3]),⎕tcnl),⎕tcnl ⋄ :endif[43]          :endif[44]      :endselect[45]  [46]  :case 'Valid'[47]  [48]  :endselect    ∇