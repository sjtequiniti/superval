    ∇ res←field BasisFile_Copy parm;parent;z;text;Folder;SourceFile;TargetFile[1]   ⍝ PARMWIN.sf#32[2]   ⍝ Function to allow user control on Basis File Copy[3]   [4]   parent←'fmBasisCopy.' ⋄ res←0⍴'' ⍝ Default response[5]   [6]   :select parm[7]   :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)[8]   [9]   :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)[10]      (parent,'edImpSourceFile') ⎕wi 'onChange' ''[11]      (parent,'edExpTargetFile') ⎕wi 'onChange' ''[12]  [13]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)[14]  [15]      :repeat[16]          :select ↑field[17]          :case 'opDirection_1'[18]              (parent 'cbExpSourceFile') Win∆SetRelated 'visible' 1[19]              (parent 'edImpSourceFile') Win∆SetRelated 'visible' 0[20]              (parent 'edImpTargetFile') Win∆SetRelated 'visible' 1[21]              (parent 'edExpTargetFile') Win∆SetRelated 'visible' 0[22]          :case 'opDirection_2'[23]              (parent 'cbExpSourceFile') Win∆SetRelated 'visible' 1[24]              (parent 'edImpSourceFile') Win∆SetRelated 'visible' 0[25]              (parent 'edImpTargetFile') Win∆SetRelated 'visible' 0[26]              (parent 'edExpTargetFile') Win∆SetRelated 'visible' 1[27]          :case 'opDirection_3'[28]              (parent 'cbExpSourceFile') Win∆SetRelated 'visible' 0[29]              (parent 'edImpSourceFile') Win∆SetRelated 'visible' 1[30]              (parent 'edImpTargetFile') Win∆SetRelated 'visible' 1[31]              (parent 'edExpTargetFile') Win∆SetRelated 'visible' 0[32]          :case 'edExpTargetFile'[33]              :if '\'=¯1↑Folder←(parent,'edExpTargetFile') ⎕wi 'text'[34]              :andif ~mt text←(parent,'cbExpSourceFile') ⎕wi 'text'[35]                  (parent,'edExpTargetFile') ⎕wi 'text' (Folder,text)[36]              :endif[37]          :endselect[38]      :until mt field←1↓field[39]  [40]  :case 'Valid' ⍝ Routine specific validation[41]  [42]  :case 'Run'[43]  [44]      :select DLTB Direction[45]      :case 'Copy'   ⋄ SourceFile←InputDir,ExpSourceFile ⋄ TargetFile←InputDir,ImpTargetFile[46]      :case 'Export' ⋄ SourceFile←InputDir,ExpSourceFile ⋄ TargetFile←         ExpTargetFile[47]      :case 'Import' ⋄ SourceFile←         ImpSourceFile ⋄ TargetFile←InputDir,ImpTargetFile[48]      :endselect[49]  [50]      :if ~'.SF'≡¯3↑DLTB UPPERCASE SourceFile ⋄ SourceFile←SourceFile,'.SF' ⋄ :endif[51]      :if ~'.SF'≡¯3↑DLTB UPPERCASE TargetFile ⋄ TargetFile←TargetFile,'.SF' ⋄ :endif[52]  [53]      :if FileExist TargetFile ⍝ Check TargetFile does not exist[54]          MDISPLAY 'Target File [',TargetFile,'] already exists.  Please delete or rename existing File'[55]      :endif[56]  [57]      :if ''≡res←(1 CopyFile SourceFile TargetFile)/'Quit'[58]          MDISPLAY 'File copy failed.  Please check that the Source File exists and the Target File does not exist.'[59]      :endif[60]  [61]  :case 'Quit' ⍝ Deleting "other" variables[62]  [63]  :endselect    ∇