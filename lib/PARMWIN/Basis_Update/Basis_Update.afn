    ∇ res←field Basis_Update parm;parent;list;cn;z;SaveFiles
[1]   ⍝ PARMWIN.sf#39
[2]   ⍝ Function to allow user control on running Update Bases
[3]   
[4]   parent←'fmUpdBases.' ⋄ res←0⍴'' ⍝ Default response
[5]   
[6]   :select parm
[7]   
[8]   :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)
[9]       :if mt ClientFile ReadFile 'Financials_Display'
[10]          FinDefault←''
[11]      :endif
[12]      combinedfile←0
[13]      BasisList←⊂''
[14]      CIndex←ClientFile ReadFile 'Index'
[15]      (ParmFileList ParmFileDesc)←('BasisFile' Win∆CountryCode) GetParmFileList InputDir
[16]  
[17]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)
[18]      BasisList←m2n UPPERCASE (parent,'cbTargetFile') ⎕wi 'list'
[19]      :if mt (parent,'lvSavedScens') ⎕wi 'list'
[20]          res←'A saved set Scenario Parameters is required to Update Bases' ⋄ :return
[21]      :endif
[22]      0 0⍴('lvSavedScens' 'ckCreateFin' 'cbTargetFile') Basis_Update 'Change'
[23]  
[24]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)
[25]  
[26]      :repeat
[27]          :select ↑field
[28]          :case 'lvSavedScens'
[29]              :if mt cn←(parent,'lvSavedScens') ⎕wi 'value'
[30]                  (parent ('ckupdateScheme' 'lvSavedParms' 'cbTargetFile' 'edTargetFileDesc' 'cbFinSavedDesc' 'edFinNewDesc' 'ckCreateFin')) Win∆SetRelated 'enabled' 0
[31]              :else
[32]                  (parent 'lvSavedParms') Win∆SetRelated 'enabled' 1
[33]                  FinCurrent←''
[34]                  0 0⍴ClientFile ReadFile cn '' (⊃'FinParms' 'FinCurrent' 'ScenRel' 'ScenAbs' 'DatavDATE' 'TermAdjFin' 'DataScenFile' 'DataScenFormat') ⍝⍝⍝ 'DatapvDATE'
[35]                  (parent 'ckupdateScheme') Win∆SetRelated 'enabled' (~mt DLTB DatavDATE OVER DataScenFile OVER DataScenFormat) ⍝⍝⍝ OVER DatapvDATE
[36]                  z←(∨/zwb¨ScenRel ScenAbs)∨(∨/zwb¨FinCurrent TermAdjFin)^0<vDATE YDAYS 'DD/MM/YYYY' DATEEXP DatavDATE
[37]                  (parent ('ckCreateFin' 'edFinNewDesc')) Win∆SetRelated 'enabled' z
[38]                  :if ~z ⋄ (parent,'ckCreateFin') ⎕wi 'value' 0 ⋄ :endif
[39]                  (parent,'cbFinSavedDesc') ⎕wi 'text' ((~z)/fnonmt FinParms FinDefault)
[40]                  0 0⍴(⊂'lvSavedParms') Basis_Update 'Change'
[41]              :endif
[42]          :case 'lvSavedParms'
[43]              z←~mt (parent,'lvSavedParms') ⎕wi 'value'
[44]              (parent ('cbTargetFile' 'edTargetFileDesc' 'cbFinSavedDesc')) Win∆SetRelated 'enabled' z
[45]          :case 'ckCreateFin'
[46]              z←^/(parent,'ckCreateFin') ⎕wi 'Ref' 'enabled' 'value'
[47]              (parent 'cbFinSavedDesc') Win∆SetRelated 'visible' (~z)
[48]              (parent 'edFinNewDesc') Win∆SetRelated 'visible' z
[49]          :case 'cbTargetFile'
[50]              (parent 'edTargetFileDesc') Win∆SetRelated 'enabled' (~(⊂UPPERCASE TargetFile←(parent,'cbTargetFile') ⎕wi 'text')∊BasisList)
[51]              (parent,'edTargetFileDesc') ⎕wi 'text' (,((m2n ParmFileList)∊⊂UPPERCASE TargetFile)⌿ParmFileDesc)
[52]          :endselect
[53]      :until mt field←1↓field
[54]  
[55]  :case 'Valid'
[56]  
[57]      :if (~zwb updateScheme)^(~zwb CreateFin)^mt SavedParms
[58]          res←'Select Parameters to be updated - Scheme Details and/or Basis Parameters and/or Create a New Financials Set'
[59]          Win∆SetFocus parent,'lvSavedParms' ⋄ :return
[60]      :endif
[61]  
[62]      :if zwb CreateFin
[63]      :andif (⊂FinNewDesc)∊(CIndex for '∆_Name' 'Financials') at '∆_Description'
[64]          res←'Financials Parameters Set Description already exists'
[65]          Win∆SetFocus parent,'edFinNewDesc' ⋄ :return
[66]      :endif
[67]  
[68]      :if ~mt SavedParms
[69]          SaveFiles←UPPERCASE¨nub ,2⊃¨m2n¨SStoMAT¨m2n SavedParms
[70]          :if basAccess[1]>accesslevel
[71]          :andif (mt TargetFile)∨(⊂'.' Win∆Parent UPPERCASE TargetFile)∊SaveFiles
[72]              res←'NoAccess' 'modify'
[73]              Win∆SetFocus parent,'cbTargetFile' ⋄ :return
[74]          :endif
[75]  
[76]          :if ~combinedfile
[77]          :andif ~mt TargetFile
[78]          :andif 1<⍴SaveFiles
[79]          :andif 'N'='YN' ASK 'Basis Parameter Sets (currently stored in different Basis Files) will all be stored in the "',TargetFile,'" Basis Parameter File.',⎕tcnl,'Do you want to continue?'
[80]              combinedfile←1
[81]              res←'Select Bases from a single Basis Parameter File'
[82]              Win∆SetFocus parent,'lvSavedParms' ⋄ :return
[83]          :endif
[84]  
[85]          :if ~mt TargetFile
[86]          :andif ~FileExist InputDir,TargetFile,(~'.SF'≡UPPERCASE ¯3↑TargetFile)/'.sf'
[87]          :andif 0='BasisFile' CreateFile (InputDir,TargetFile) TargetFileDesc
[88]              res←'InvFileName' TargetFile
[89]              Win∆SetFocus parent,'cbTargetFile' ⋄ :return
[90]          :endif
[91]      :endif
[92]  
[93]  :case 'Run'
[94]  
[95]      'res←Run_BasisUpdate' Win∆ProgressBar 'Start'
[96]  
[97]  :case 'Quit' ⍝ Deleting "other" variables
[98]  
[99]      0 0⍴(SystemDir,'PARMWIN') DeleteModule 'Scenarios'
[100]     0 0⍴(SystemDir,'OVERWIN') DeleteModule 'Run_Scenarios'
[101]     0 0⍴DeleteVars¨'Scenarios' 'Financials_Display'
[102]     0 0⍴⎕ex 'combinedfile BasisList CIndex ParmFileDesc ParmFileList'
[103] 
[104] :endselect
    ∇
