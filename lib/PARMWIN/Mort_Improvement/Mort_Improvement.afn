    ∇ res←field Mort_Improvement parm;parent;cmi;text
[1]   ⍝ PARMWIN.sf#21
[2]   ⍝ Function to allow user control on Mortality Improvement
[3]   
[4]   parent←'fmMortImp.' ⋄ res←0⍴'' ⍝ Default response
[5]   
[6]   :select parm
[7]   
[8]   :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)
[9]       :if ~mt defIMPORIG ⋄ gmiIMPORIG←defIMPORIG ⋄ :endif
[10]  
[11]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)
[12]      Display∆Access basAccess[1 2]
[13]  
[14]      :if '2'≠↑gmiMORTIMPR
[15]          MDISPLAY 'Only 2D Mortality Improvement tables are still supported'
[16]          (parent,'fMIDef.cbgmiMORTIMPR' ) ⎕wi 'text' '2D Table'
[17]      :endif
[18]      (parent,'fMIDef.cbgmiMORTIMPR' ) ⎕wi 'enabled' 0
[19]  
[20]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)
[21]  
[22]      :select ↑field
[23]      :caselist 'cbmiType' 'cbgmiMORTIMPR'
[24]          cmi←~'2D'≡2↑text←DLTB (parent,'fMIDef.',↑field) ⎕wi 'text'
[25]          (parent,'fCMI') ⎕wi 'visible' cmi ⋄ (parent,'fTwoDTab') ⎕wi 'visible' (~cmi)
[26]          :if uk≠1
[27]              :select text
[28]              :case 'CMI Calendar Year' ⍝ Aus/SA CMI Calendar Year
[29]                  ((parent,'fCMI.') 'edmiCMICalYr') Win∆SetRelated 'visible' 1
[30]                  ((parent,'fCMI.') 'edmiCMIYOB') Win∆SetRelated 'visible' 0
[31]              :case 'CMI Specified Year' ⍝ Aus/SA CMI Specified Year (Generation YOB)
[32]                  ((parent,'fCMI.') 'edmiCMIYOB') Win∆SetRelated 'visible' 1
[33]                  ((parent,'fCMI.') 'edmiCMICalYr') Win∆SetRelated 'visible' 0
[34]              :case 'CMI Member Specific' ⍝ Aus/SA CMI Member Specific
[35]                  ((parent,'fCMI.') 'edmiCMIYOB') Win∆SetRelated 'visible' 0
[36]                  ((parent,'fCMI.') 'edmiCMICalYr') Win∆SetRelated 'visible' 0
[37]              :case '2D Table Calendar Year' ⍝ Aus/SA 2D Calendar Year
[38]                  ((parent,'fTwoDTab.') 'edmi2DCalYr') Win∆SetRelated 'visible' 1
[39]              :case '2D Table Member Specific' ⍝ Aus/SA 2D Member Specific
[40]                  ((parent,'fTwoDTab.') 'edmi2DCalYr') Win∆SetRelated 'visible' 0
[41]              :endselect
[42]          :endif
[43]      :endselect
[44]       (↑field) Win∆FormValidation 'Change'
[45]  
[46]  :case 'Valid'
[47]  
[48]      res←((Win∆GetControlList parent) at 'variable') Win∆FormValidation 'Valid' ⍝ fields on this form
[49]  
[50]  :case 'Run'
[51]  
[52]      res←'Quit'
[53]  
[54]  :case 'Quit' ⍝ Deleting "other" variables
[55]      ⍙MortAssdict←GetMortList 'Update'
[56]  
[57]  :endselect
    ∇
