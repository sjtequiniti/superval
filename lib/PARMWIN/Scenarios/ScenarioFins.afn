    ∇ res←field ScenarioFins parm;SSName;z;order;warnings;row;col;page;list;msk;nlist;flist;tab;MESS[1]   ⍝ PARMWIN.sf#24[2]   ⍝ Update the Financials Scenario Parameters[3]   [4]   res←0⍴'' ⋄ SSName←(page←(DTDot parent),'.pgFinancials.'),'fFinancials.ssFinancials'[5]   [6]   :select parm[7]   :case 'Prepare'[8]       Finwarnings←0 0⍴''[9]       FinGlobs←m2n 0 Uniquelist ⊃⎕av[209] StripText¨(LocalGlobals for 'Type' 'Fin') at 'value' ⍝ Currently used Globals[10]  [11]      ⍝ Globals contained in Current Selected Financials Set[12]      :if ∨/~msk←~(1+rowsIn ⍙FinAssdict)=z←(DLTB¨⎕av[209] StripText¨⍙FinAssdict at 'List')⍳FinGlobs[13]          Finwarnings←Finwarnings OVER (', ' join (~msk)/FinGlobs),'" are not defined in currently selected Financials Set'[14]      :endif[15]      ⍝ Type of Financial Rate[16]      finType ← ((⍙FinAssdict at 'Key'  ),⊂'Unk'      )[z][17]      finType ← ('Interest' 'Inflation' 'Revaluation' 'Increases' 'Unknown')[order←('Int' 'Inf' 'Rev' 'Inc' 'Unk')⍳finType][18]      finType ←⊃finType[order←⍋order][19]  [20]      finValue←⊃((((⊂'⋄ ') REPL¨⍙FinAssdict at 'Label'),⊂'Undefined')[z])[order] ⍝ Value in current Financial set[21]      (msk/FinGlobs)←(⍙FinAssdict at 'List')[msk/z] ⋄ FinGlobs←⊃FinGlobs[order][22]  [23]      ⍝ Financial Constants[24]      list←(LocalGlobals for 'Type' 'RelNum') at 'value'[25]      list←(unique StripText¨list)/list[26]      :if    ∨/z←~^/¨⎕vi¨list         ⍝ Remove "numeric" fields[27]      :andif ∨/z←z^~'q'=↑¨list        ⍝ Remove Member Data Fields[28]          list←z/list ⍝ Remove "numeric" fields and Member Data Fields[29]  [30]          ⍝ Globals contained in Current Selected Financials Set[31]          :if ∨/~msk←~(1+rowsIn tab)=z←((tab←(AbsDict for 'Module' 'Financials' 'Constants') for 'Type' 'Number') at 'Variable')⍳DLTB¨StripText¨list[32]              Finwarnings←Finwarnings OVER (', ' join (~msk)/list),'" are not defined in Constants Set or currently selected Financials Set'[33]          :endif[34]          FinGlobs←FinGlobs OVER ⊃list←msk/list[35]          finType ←finType  OVER ⊃(+/msk)/⊂'Constant'[36]          finValue←finValue OVER ⊃(push (AbsDict for (⊂'Variable'),list) at 'Variable' 'Parameter') at list←DLTB¨StripText¨list[37]      :endif[38]  [39]  :case 'Vars'[40]      warnings←Finwarnings[41]      FinType ←finType[42]      FinValue←finValue[43]      :if 0≠⎕nc 'FinScenValue' ⋄ FinScenRel←FinScenValue ⋄ FinScenAbs←0/FinScenValue ⋄ 0 0⍴⎕ex 'FinScenValue' ⋄ :endif ⍝ Conversion for EC[44]      :if mt ClientFile ReadFile 'Financials_Display' ⍝ Read Financials default[45]          FinDefault←''[46]      :endif[47]      :if ~mt FinGlobal ⋄ :andif ~FinGlobal≡FinDefault ⋄ :andif ~mt warnings[48]          warnings←warnings OVER offerexit←'Current Selected Financials" description differs from "',FinDefault,'" used when this Scenario was last saved.'[49]      :endif[50]      FinGlobal←FinDefault[51]  [52]      (MESS FinDesc FinScenRel FinScenAbs)←⊃¨AdjustPointers m2n¨FinGlobs FinDesc FinScenRel FinScenAbs[53]      :if mt warnings OVER MESS ⋄ res←0 0⍴' '[54]      :else       ⋄ res←⊃(⊂'Financial Parameters: "'),¨⎕split warnings OVER (~mt MESS)⌿MATRIX MESS[55]      :endif[56]  [57]  :case 'Init'[58]      SSName ⎕wi 'xShowRowHeading' 0 ⍝ Hide Row Headings[59]      SSName Win∆F1SSProtectCells (⊂¯1 1 ¯1 3) ⍝ Lock first 3 columns[60]      'fmScenarios.bnScenariosCreateFin' ⎕wi 'enabled' 0[61]  [62]      :if 0≠⎕nc 'offerexit'[63]      :andif ~'Y'='YN' ASK '"',offerexit,⎕tcnl,'Do you want to continue?'[64]          ControlName ⎕wi '∆modified' 1[65]          res←'Abort' ⋄ :return[66]      :else[67]          0 0⍴⎕ex 'offerexit'[68]      :endif[69]  [70]  :case 'Change'[71]      :select field[72]      :caselist 'ckFinCurrent' 'ckScenRel' 'ckScenAbs'[73]          :if ∨/z←((⊂page),¨'ckFinCurrent' 'ckScenRel' 'ckScenAbs') MultiWI 'value'[74]              (page,'cbFinParms') ⎕wi 'text' FinDefault[75]          :endif[76]          (page,'cbFinParms') ⎕wi 'enabled' (~∨/z)[77]          :select field[78]          :case 'ckScenRel'[79]              z←↑1↓z[80]              (page,'ckScenAbs') ⎕wi 'enabled' (~z)[81]              SSName ⎕wi 'xColHidden' 5 z[82]              →SSopen[83]          :case 'ckScenAbs'[84]              z←↑2↓z[85]              (page,'ckScenRel') ⎕wi 'enabled' (~z)[86]              SSName ⎕wi 'xColHidden' 4 z[87]              →SSopen[88]  SSopen:[89]          'fmScenarios.bnScenariosCreateFin' ⎕wi 'enabled' (z∨^/((DTDot parent),'.pgValuationData.ckTermAdjFin') ⎕wi 'Ref' 'enabled' 'value')[90]          (page,'fFinancials') ⎕wi 'enabled' z[91]          SSName ⎕wi 'visible' z[92]          :endselect[93]      :case 'ssFinancials'[94]          SSName ⎕wi "SetColWidthAuto" 1 1 (SSName ⎕wi 'MaxRow') 5 0[95]      :endselect[96]  [97]  :endselect    ∇