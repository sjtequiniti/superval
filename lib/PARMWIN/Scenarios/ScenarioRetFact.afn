    ∇ res←ScenarioRetFact parm;SSName;z;row;col;MESS
[1]   ⍝ PARMWIN.sf#24
[2]   ⍝ Update the Retirement Factors Scenario Parameters
[3]   
[4]   res←0⍴'' ⋄ SSName←(DTDot parent),'.pgRetFactors.fRetFact.ssRetFact'
[5]   
[6]   :select parm
[7]   :case 'Prepare'
[8]       RetFactGlobs←0 Uniquelist ⊃(LocalGlobals for 'Type' 'ParmsR') at 'value' ⍝ Currently used Globals
[9]   
[10]  :case 'Vars'
[11]      (MESS RetFactDesc RetFactScenDesc)←⊃¨((CIndex for '∆_Name' 'Retirement_Factors') at '∆_Description') AdjustPointers m2n¨RetFactGlobs RetFactDesc RetFactScenDesc
[12]      :if mt MESS ⋄ res←0 0⍴' '
[13]      :else       ⋄ res←⊃(⊂'Retirement Factors Parameters: "'),¨⎕split MESS
[14]      :endif
[15]  
[16]  :case 'Init'
[17]      :if mt RetFactGlobs
[18]          (parent,'pgRetFactors') ⎕wi 'Delete'
[19]      :else
[20]          SSName ⎕wi 'onXStartEdit' '0 0⍴ScenarioRetFact "Edit"'
[21]          SSName ⎕wi 'xShowRowHeading' 0 ⍝ Hide Row Headings
[22]          SSName Win∆F1SSProtectCells (⊂¯1 1 ¯1 1) ⍝ Lock first column
[23]      :endif
[24]  
[25]  :case 'Edit'
[26]      (row col)←SSName ⎕wi 'GetActiveCell' 0 0
[27]      :if col=2
[28]          0 Win∆F1SSRowMenu ('Scenarios' SSName)
[29]          ⎕warg[1]←SSName Win∆F1SSGetTextArray row col 1 1
[30]          SSName ⎕wi 'AllowArrows' 1 ⋄ row Win∆ValidF1SSCell col ⋄ 0 0⍴⎕ex 'F1SSEvent'
[31]      :else
[32]          SSName ⎕wi 'AllowArrows' 1
[33]      :endif
[34]  
[35]  :case 'Change'
[36]      SSName ⎕wi "SetColWidthAuto" ¯1 1 (SSName ⎕wi 'MaxRow') 2 0
[37]  
[38]  :case 'Valid'
[39]      :if ~unchanged ⋄ :andif ∨/' '≠,RetFactDesc ⋄ :andif ∨/z←(m2n RetFactDesc)≡¨m2n RetFactScenDesc
[40]          unchanged←1 ⋄ z←↑WHERE z
[41]          Win∆SetFocus SSName ⋄ SSName Win∆F1SSSetSelection 4⍴z 2
[42]          res←'Unchanged Global assumptions do not need to be specified' ⋄ :return
[43]      :endif
[44]  
[45]  :endselect
    ∇
