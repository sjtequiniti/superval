    ∇ res←ScenarioData parm;SSName;page;row;col;z;MESS;Format;n;File;∆[1]   ⍝ PARMWIN.sf#24[2]   ⍝ Update the Valuation Data Scenario Parameters[3]   [4]   res←0⍴'' ⋄ SSName←(page←(DTDot parent),'.pgValuationData'),'.fValnData.ssValnData'[5]   [6]   :select parm[7]   :case 'Prepare'[8]       DataGlobs←DLTB¨↑¨((⊂AbsDict) for ¨(⊂⊂'Variable'),¨ ⊂¨'Actsfile' 'Defsfile' 'Pensfile') at¨⊂'Parameter'[9]   [10]  :case 'Vars'[11]      ⍝ Can't use AdjustPointers as special case - 3 fixed rows (no reduction/expansion)[12]      DataDesc←⊃"Main Actives Data File" "Main Deferreds Data File" "Main Pensioners Data File"[13]      :if mt DataValue[14]          (DataScenFile DataScenFormat)←(⍴DataGlobs)↑[1]¨DataScenFile DataScenFormat[15]      :else[16]          ⍝ Report any Globals (when previously saved) no longer used (ignore blanks)[17]          DataValue←m2n DataValue[18]          ∆←DataValue∊DataGlobs,⊂''[19]          MESS←1 HyphenSwap¨(~∆)/DataValue,¨⊂'" is no longer used'[20]  [21]          ⍝ Report New Globals (ignore blanks)[22]          ∆←DataGlobs∊DataValue,⊂''[23]          MESS←MESS,1 HyphenSwap¨(~∆)/DataGlobs,¨⊂'" is now in use'[24]  [25]          :if mt MESS ⋄ res←0 0⍴' '[26]          :else       ⋄ res←⊃(⊂'Valuation Data: "'),¨MESS[27]          :endif[28]      :endif[29]      DataValue←⊃DataGlobs ⍝ Value updated to be current Globals[30]  [31]  :case 'Init'[32]      (page,'.llDatavDATE') ⎕wi 'caption' (('{' StripText (page,'.llDatavDATE') ⎕wi 'caption'),,'<{>,ZI2,</>,ZI2,</>,ZI4,<}>' ⎕fmt MATRIX vDATE)[33]      SSName ⎕wi 'onXStartEdit' '0 0⍴ScenarioData "Edit"'[34]      SSName ⎕wi 'xShowRowHeading' 0 ⍝ Hide Row Headings[35]      SSName Win∆F1SSProtectCells (⊂¯1 ¯1 ¯1 ¯1) ⍝ Lock whole Grid[36]      :for row :in (∨/' '≠DataValue)/1 2 3[37]          SSName ⎕wi 'xSetSelection' row 3 row 4 ⍝ unLock rows that have relative values[38]          SSName ⎕wi 'xSetPattern' 0 0 0[39]          SSName ⎕wi 'xSetProtection' 0 0[40]          SSName ⎕wi 'xEnableProtection' 0[41]      :endfor[42]      SSName Win∆F1SSProtectCells (⊂¯1 1 ¯1 2) ⍝ Lock first 2 columns[43]  [44]  :case 'Edit'[45]      (row col)←SSName ⎕wi 'GetActiveCell' 0 0[46]      :if col∊3 4[47]          0 Win∆F1SSRowMenu ('Scenarios' SSName)[48]          ⎕warg[1]←SSName Win∆F1SSGetTextArray row col 1 1[49]          SSName ⎕wi 'AllowArrows' 1 ⋄ row Win∆ValidF1SSCell col ⋄ 0 0⍴⎕ex 'F1SSEvent'[50]      :else[51]          SSName ⎕wi 'AllowArrows' 1[52]      :endif[53]  [54]  :case 'Change'[55]      SSName ⎕wi "SetColWidthAuto" ¯1 1 (SSName ⎕wi 'MaxRow') 4 0[56]  [57]  :case 'Valid'[58]      :if ∨/' '≠,DataValue[59]          :for n :in 1 2 3[60]             :if mt Format←DLTB DataScenFormat[n;] ⋄ Format←n⊃FormatA FormatD FormatP ⋄ :endif[61]             :if ~mt File←DLTB DataScenFile[n;][62]                 :if ~FileExist InputDir,File[63]                      res←MESS∆TRANS 'FileNotFound' (InputDir,File)[64]                      SSName Win∆F1SSSetSelection 4⍴n 3 ⋄ :return[65]                 :elseif ~mt z←MESS∆TRANS Format Format∆CHECK (MATRIX InputDir,File) ''[66]                      res←z[67]                      SSName Win∆F1SSSetSelection 4⍴n 4 ⋄ :return[68]                 :endif[69]              :elseif ~mt DLTB DataScenFormat[n;][70]                  res←'Data Filename must be specified if a Data Format is specified'[71]                  SSName Win∆F1SSSetSelection 4⍴n 3 ⋄ :return[72]             :endif[73]          :endfor[74]      :endif[75]  [76]      :if ~mt DatavDATE ⋄ :andif 0≥vDATE YDAYS 'DD/MM/YYYY' DATEEXP DatavDATE[77]          res←'Scenario Valuation Date must be after Current Valuation Date'[78]          Win∆SetFocus (DTDot parent),'.pgValuationData.edDatavDATE'[79]      :endif[80]  [81]  :endselect    ∇