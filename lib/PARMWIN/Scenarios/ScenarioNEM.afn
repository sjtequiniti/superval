    ∇ res←ScenarioNEM parm;SSName;z;row;col;MESS;cn;BatchedNest[1]   ⍝ PARMWIN.sf#24[2]   ⍝ Update the New Entrant Model Scenario Parameters[3]   [4]   res←0⍴'' ⋄ SSName←(DTDot parent),'.pgNEModel.fNEModel.ssNEModel'[5]   [6]   :select parm[7]   :case 'Prepare'[8]       NEMGlobs←0⍴''[9]       :for cn :in (CIndex for '∆_Name' 'Batch_Display') at '∆_CompNo'[10]          0 0⍴ClientFile ReadFile cn '' 'BatchedNest'[11]          NEMGlobs←NEMGlobs,('Y'=↑¨BatchedNest at 'New Entrants')/BatchedNest at 'New Entrant Description'[12]      :endfor[13]      NEMGlobs←0 Uniquelist MATRIX ⊃NEMGlobs ⍝ Currently used Globals[14]  [15]  :case 'Vars'[16]      (MESS NEMDesc NEMScenDesc)←⊃¨((CIndex for '∆_Name' 'NE_Model') at '∆_Description') AdjustPointers m2n¨NEMGlobs NEMDesc NEMScenDesc[17]      :if mt MESS ⋄ res←0 0⍴' '[18]      :else       ⋄ res←⊃(⊂'New Entrant Model Parameters: "'),¨⎕split MESS[19]      :endif[20]  [21]  :case 'Init'[22]      :if mt NEMGlobs[23]          (parent,'pgNEModel') ⎕wi 'Delete'[24]      :else[25]          SSName ⎕wi 'onXStartEdit' '0 0⍴ScenarioNEM "Edit"'[26]          SSName ⎕wi 'xShowRowHeading' 0 ⍝ Hide Row Headings[27]          SSName Win∆F1SSProtectCells (⊂¯1 1 ¯1 1) ⍝ Lock first column[28]      :endif[29]  [30]  :case 'Edit'[31]      (row col)←SSName ⎕wi 'GetActiveCell' 0 0[32]      :if col=2[33]          0 Win∆F1SSRowMenu ('Scenarios' SSName)[34]          ⎕warg[1]←SSName Win∆F1SSGetTextArray row col 1 1[35]          SSName ⎕wi 'AllowArrows' 1 ⋄ row Win∆ValidF1SSCell col ⋄ 0 0⍴⎕ex 'F1SSEvent'[36]      :else[37]          SSName ⎕wi 'AllowArrows' 1[38]      :endif[39]  [40]  :case 'Change'[41]      SSName ⎕wi "SetColWidthAuto" ¯1 1 (SSName ⎕wi 'MaxRow') 2 0[42]  [43]  :case 'Valid'[44]      :if ~unchanged ⋄ :andif ∨/' '≠,NEMDesc ⋄ :andif ∨/z←(m2n NEMDesc)≡¨m2n NEMScenDesc[45]          unchanged←1 ⋄ z←↑WHERE z[46]          Win∆SetFocus SSName ⋄ SSName Win∆F1SSSetSelection 4⍴z 2[47]          res←'Unchanged Global assumptions do not need to be specified' ⋄ :return[48]      :endif[49]  [50]  :endselect    ∇