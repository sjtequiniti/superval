    ∇ Z←FinancialsUpdate arg;vars;termAdjFin;finParms;FinNumComment;Rel;Abs;Type;Desc;Value;rows
[1]   ⍝ PARMWIN.sf#24
[2]   ⍝ Create a new Financials Parameter Set from a set of Absolute/Relevant Financial changes
[3]   ⍝   and/or a skip to a later Valuation Date
[4]   
[5]   vars←⍙VALUESdict ReadDictFile 'Financials' '' 'NAMES'
[6]   0 0⍴⍙VALUESdict ReadDictFile 'Financials'
[7]   
[8]   :if termAdjFin←zwb TermAdjFin ⋄ :andif termAdjFin←~mt DatavDATE ⍝ Period after VDate
[9]       termAdjFin←0⌈vDATE YDAYS 'DD/MM/YYYY' DATEEXP DatavDATE
[10]  :endif
[11]  
[12]  :if mt finParms←FinParms ⋄ :andif ×termAdjFin
[13]      0 0⍴ClientFile ReadFile 'Financials_Display'
[14]      finParms←FinDefault
[15]  :endif
[16]  
[17]  :if 1=⍴,ClientFile ReadFile 'Financials' finParms
[18]      :if 0≠⎕nc 'FinNumComment' ⋄ FinNumDesc←FinNumComment ⋄ :endif
[19]      (Rel Abs)←zwb¨ScenRel ScenAbs
[20]      :if     Rel ⋄ (Type Desc Value)←(⊂(×termAdjFin)∨∨/' '≠FinScenRel) sel1¨FinType FinDesc FinScenRel
[21]      :elseif Abs ⋄ (Type Desc Value)←(⊂(×termAdjFin)∨∨/' '≠FinScenAbs) sel1¨FinType FinDesc FinScenAbs
[22]      :else       ⋄ (Type Desc Value)←FinType FinDesc (0/FinScenAbs)
[23]      :endif
[24]  
[25]      :if ~mt rows←Type ExactTLU 'Interest'
[26]          :if ∨/Z←~(m2n ⎕av[209] StripText Desc[rows;])∊m2n intName
[27]              Z←0 ('Financials Interest Rate(s): ',(', ' join Z/m2n Desc[rows;]),' not found in Financials Set') vars ⋄ →end
[28]          :endif
[29]          intValue←intValue UpdateFinancials Rel Abs termAdjFin intName (⎕av[209] StripText Desc[rows;]) (Value[rows;])
[30]      :endif
[31]      :if ~mt rows←Type ExactTLU 'Inflation'
[32]          :if ∨/Z←~(m2n ⎕av[209] StripText Desc[rows;])∊m2n infName
[33]              Z←0 ('Financials Inflation Rate(s): ',(', ' join Z/m2n Desc[rows;]),' not found in Financials Set') vars ⋄ →end
[34]          :endif
[35]          infValue←infValue UpdateFinancials Rel Abs termAdjFin infName (⎕av[209] StripText Desc[rows;]) (Value[rows;])
[36]      :endif
[37]      :if ~mt rows←Type ExactTLU 'Revaluation'
[38]          :if ∨/Z←~(m2n ⎕av[209] StripText Desc[rows;])∊m2n revName
[39]              Z←0 ('Financials Revaluation Rate(s): ',(', ' join Z/m2n Desc[rows;]),' not found in Financials Set') vars ⋄ →end
[40]          :endif
[41]          revValue←revValue UpdateFinancials Rel Abs termAdjFin revName (⎕av[209] StripText Desc[rows;]) (Value[rows;])
[42]      :endif
[43]      :if ~mt rows←Type ExactTLU 'Increases'
[44]          :if ∨/Z←~(m2n ⎕av[209] StripText Desc[rows;])∊m2n incName
[45]              Z←0 ('Financials Increase Rate(s): ',(', ' join Z/m2n Desc[rows;]),' not found in Financials Set') vars ⋄ →end
[46]          :endif
[47]          incValue←incValue UpdateFinancials Rel Abs termAdjFin incName (⎕av[209] StripText Desc[rows;]) (Value[rows;])
[48]      :endif
[49]      :if ~mt rows←Type ExactTLU 'Constant'
[50]          :if ∨/Z←~(m2n ⎕av[209] StripText Desc[rows;])∊m2n FinNumName
[51]              Z←0 ('Financials Constant(s): ',(', ' join Z/m2n Desc[rows;]),' not found in Financials Set') vars ⋄ →end
[52]          :endif
[53]          FinNumValue←FinNumValue UpdateFinancials Rel Abs 0 FinNumName (StripText Desc[rows;]) (Value[rows;])
[54]      :endif
[55]      Z←1 '' vars
[56]  :else
[57]      Z←0 ('Financials Parameter Set "',finParms,'" not found') vars
[58]  :endif
[59]  end:
[60]  :if arg ⋄ 0 0⍴DeleteVars 'Financials_Display' ⋄ :endif
    ∇
