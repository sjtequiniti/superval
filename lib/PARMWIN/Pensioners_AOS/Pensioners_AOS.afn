    ∇ res←field Pensioners_AOS parm;parent;list[1]   ⍝ PARMWIN.sf#18[2]   ⍝ Function to allow user control on Editing Pensioners AOS Paramters[3]   [4]   parent←'fmSV.fPenAOS.' ⋄ res←0⍴'' ⍝ Default response[5]   [6]   :select parm[7]   [8]   :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)[9]       (parent,'fData.') ⎕wi '∆moe' (0 0 ⍴'')[10]      (parent,'fData.') ⎕wi '∆top' (0 0 ⍴'')[11]  [12]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)[13]  [14]      Display∆Access basAccess[1 2][15]      :if ~0≡list←(parent,'fData') ⎕wi '∆moe'[16]          :for field :in 'RetCode' 'DISCode'[17]              :if 0>(parent,'fExit.ls',field) ⎕wi 'visible' ⋄ :continue ⋄ :endif[18]              :if mt list ⋄ (parent,'fExit.ls',field) ⎕wi 'value' ⍬[19]              :else       ⋄ (parent,'fExit.ls',field) MakeSelections list (SStoMAT ⍎field)[20]              :endif[21]              Sel∆LabelUpdate parent,'fExit.ls',field[22]          :endfor[23]      :endif[24]  [25]      :if ~0≡list←(parent,'fData') ⎕wi '∆top'[26]          :for field :in 'RetType' 'DISType' 'IllType' 'WthType'[27]              :if mt list ⋄ (parent,'fTypes.ls',field) ⎕wi 'value' ⍬[28]              :else       ⋄ (parent,'fTypes.ls',field) MakeSelections list (SStoMAT ⍎field)[29]              :endif[30]              Sel∆LabelUpdate parent,'fTypes.ls',field[31]          :endfor[32]      :endif[33]  [34]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)[35]  [36]      :repeat[37]          :select ↑field[38]          :case 'edFILES'[39]              (parent,'fData.') Win∆FileChanges 'MOE'[40]              (parent,'fData.') Win∆FileChanges 'TOP'[41]              0 0⍴Pensioners_AOS 'Init'[42]          :case 'cbFormat'[43]              ControlName ⎕wi '∆formatcreated' 0 ⍝ Indicate new format[44]              Format←(parent,'fData.cbFormat')⎕wi 'text'[45]              0 0⍴(⊂'edFILES') Pensioners_AOS 'Change'[46]          :endselect[47]          (↑field) Win∆FormValidation 'Change'[48]      :until mt field←1↓field[49]  [50]  :case 'Valid' ⍝ Routine specific validation[51]  [52]      res←((Win∆GetControlList parent) at 'variable') Win∆FormValidation 'Valid' ⍝ fields on this form[53]  [54]  :case 'Run'[55]  [56]      res←'Quit'[57]  [58]  :case 'Quit' ⍝ Deleting "other" variables[59]  [60]  :endselect    ∇