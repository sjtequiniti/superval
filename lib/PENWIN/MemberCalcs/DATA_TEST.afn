    ∇ res←DATA∆TEST A;idx;z
[1]   ⍝ PENWIN.sf#3
[2]   ⍝
[3]   errmsg←'  EXCLUDED'
[4]   :if res←A ⍝ Member Not Active
[5]       errmsg←errmsg,' - Not in-force at the Valuation Date'
[6]   :else
[7]       :if res←~DATECHECK DOB
[8]           errmsg←errmsg,' - Invalid Date of Birth'
[9]       :endif
[10]      :if ~NotSpouse ⋄ :andif Male ⋄ :andif GMP0≠0
[11]          Pre88GMP←valuePre88MS
[12]              (' ' join 'Record:' (⍕recn) (REC[fNAME]) (REC[fSEX]) (REC[fDOB]) ('Male Spouse Pre 1988 GMP ',((~valuePre88MS)/'Not '),'Valued')) VALN∆LOG 'Warning'
[13]      :else
[14]          Pre88GMP←1
[15]      :endif
[16]      :if GMPSplit ⋄ :andif Xe<SPA ⍝ Check for adequacy of data - don't do later tests if earlier ones fail
[17]          :if ~z←~∨/idx←GMPADJ^∨/' '≠RETPUP ⍝ At least one relevant data field exists
[18]              z←0=+/ZWB RETPUP[WHERE idx;] ⍝ At least one contains a non-zero value
[19]          :endif
[20]          :if z ⋄ :andif (0≠ZWB TotPreR)∨(0≠ZWB TotPostR)
[21]              res←1 ⋄ errmsg←errmsg,' - GMP Allocation Failed'
[22]          :else
[23]              :if ~z←~∨/idx←GMPADJ^∨/' '≠PENDATA ⍝ At least one relevant data field exists
[24]                  z←0=+/ZWB PENDATA[WHERE idx;] ⍝ At least one contains a non-zero value
[25]              :endif
[26]              :if z ⋄ :andif (0≠ZWB TotPreV)∨(0≠ZWB TotPostV)
[27]                  res←1 ⋄ errmsg←errmsg,' - GMP Allocation Failed'
[28]              :endif
[29]          :endif
[30]      :endif
[31]  :endif
    ∇
