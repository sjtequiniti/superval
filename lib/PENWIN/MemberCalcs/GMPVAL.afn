    ∇ GMPVAL;rev;GMP;IncType∆pp;SL∆pp;Con∆pp;BenType∆pp;Start∆pp;End∆pp;GP∆pp;Inc∆pp;RevOnly∆pp;IncOnly∆pp;BenefitTypeID;Dec∆pp;ExitProbs∆pp;RetAge∆pp;Age∆pp;ABno∆pp;AltABno∆pp;ct;Inc;IncType;Identifier∆pp;VARIABLE_ALIASES[1]   ⍝ PENWIN.sf#3[2]   ⍝ Calculate the value of the GMPs and reversions[3]   [4]   GMP←gmp0 gmpE0[5]   rev←NotSpouse×0.5×(Male∨ppf),1 ⍝ Always 50% Pre for PPF[6]   IncType←'G1' 'G2'[7]   Inc←(bencap^IsAccrued)⊃(B88GMPINC A88GMPINC) (DYNINCPre DYNINCPre)[8]   BenID←BenID,BenefitTypeID←ppf⊃(2 3) (12 12)[9]   [10]  :if IsAccrued ⋄ ABno∆pp←'1' ⋄ AltABno∆pp←'4' ⋄ :endif[11]  BenType∆pp←'P' ⋄ End∆pp←⍬ ⋄ IncOnly∆pp←0 ⋄ ExitProbs∆pp←NX↑1 ⍝ The probability of receipt of this benefit[12]  [13]  :for ct :in ⍳2 ⍝ 2 GMPs[14]      :if ⍙dbresults[15]          ⍙dbbenres←⍙dbbenres⍪(((ct⊃BenefitTypeID),2,(7-4×bencap^IsAccrued),10-(×DEF)⌈NotSpouse×SPA>Xe) dbXe 0) ⍙DBValnRecords ct⊃GMP ⍝ 10 or 9 if deferred[16]      :endif[17]      :if ~aosind^prevind[18]          :if ppf ⋄ OutputMat[1;⍳3]←OutputMat[1;⍳3]+(NOM×0=OutputMat[1;0]), (ct⊃GMP)×1,X0[19]          :else   ⋄ OutputMat[1+ct;⍳7]←              NOM                  ,((ct⊃GMP)×1,X0),(100×ct⊃rev),RGP,yop,def[20]          :endif[21]      :endif[22]  [23]      Identifier∆pp←IncType∆pp←ct⊃IncType ⋄ Inc∆pp←ct⊃Inc[24]  [25]      Dec∆pp←'NR' ⋄ GP∆pp←NX↑,RGP ⋄ Start∆pp←,(NotSpouse×SPA)⌈RetAge∆pp←,(X0+DEF)⌈Age∆pp←,X0+⍳NX ⋄ RevOnly∆pp←0[26]      Con∆pp←,(ct⊃rev)×SL∆pp←NX↑,(ct⊃GMP)×(1,GMPREVSY)[NotSpouse][27]  [28]  ⍝⍀⍝    VARIABLE_ALIASES←('SL∆pp' 'GP∆pp' 'Inc∆pp') (('GMP',(ct/'E'),'0') 'RGP' ('BA'[ct],'88GMPINC'))[29]  [30]      PP∆CreateInterface[31]  [32]      :if def≠0 ⍝ Death in deferment benefit[33]          Dec∆pp←'N2' ⋄ GP∆pp←⍬ ⋄ Start∆pp←Age∆pp ⋄ RevOnly∆pp←1[34]          SL∆pp←0×Con∆pp←(NX,NX)↑MATRIX (ct⊃rev)×(ct⊃GMP)×GMPREV[35]          Identifier∆pp←Identifier∆pp,' DiD'[36]  [37]  ⍝⍀⍝        VARIABLE_ALIASES←('Con∆pp' 'Inc∆pp') ('GMPREV' ('BA'[ct],'88GMPINC'))[38]  [39]          PP∆CreateInterface[40]      :endif[41]  [42]      ⍝⍀⍝ :if NotSpouse[43]      ⍝⍀⍝     ⍙indmembres←⍙indmembres⍪(2+ct),3,0,ct⊃rev[44]      ⍝⍀⍝     ⍙indmembres←⍙indmembres⍪(2+ct),4,0,(SPA⌈X0)[45]      ⍝⍀⍝     ⍙indmembres←⍙indmembres⍪(2+ct),21,(⍳1+def),[0.5]GMPREV,GMPREVSY[46]      ⍝⍀⍝ :endif[47]  :endfor    ∇