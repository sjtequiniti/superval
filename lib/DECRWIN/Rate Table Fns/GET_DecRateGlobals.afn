    ∇ res←larg GET∆DecRateGlobals varname;flds;success;MESS;desc;errflag;var;tab;old;new;vars;descs;∆;list;labs;parms;parmlist;idx
[1]   ⍝ DECRWIN.sf#2
[2]   ⍝ Extract the Decrement Rate Global parameters using the "description" pointer "varname"
[3]   ⍝ larg is the description of the Decrement Rates set and a valuation flag
[4]   
[5]   (desc errflag)←larg ⋄ var←DLTB ⍎varname
[6]   
[7]   :if ↑res←(success MESS)←2↑ClientFile ReadModule 'Decrement_Rates' var 'Decrement Rates' desc errflag varname
[8]       :if ~isActive ⋄ :andif 'RM'≡2↑gdrRXX[1;]
[9]           MESS←MATRIX varname ⍬ ((errflag/'ERROR:  '),'Retirement Decrement Type "RM" not available in Deferreds Module')
[10]          ⍎varname,'←""'
[11]          success←0 ⋄ →end
[12]      :endif
[13]  
[14]      tab←⍙RULESdict ReadDictFile 'Decrement_Rates'
[15]      tab←tab for ⍎¨tab at 'Editable' ⍝ Exclude those not required
[16]      flds←tab at 'Field'
[17]  
[18]      old←DLTB¨⍎¨vars←(⊂2↑varname),¨3↓¨flds ⍝ Currently set Variables
[19]  
[20]      ∆←~(⍎comment_var,' at "variable"')∊(⊂'/gdr/',2↑varname) TEXTREPL¨flds
[21]      ⍎comment_var,'←',comment_var,' for ∆'
[22]      :if ×rowsIn Comment_Decrement_Rates←Comment_Decrement_Rates for (⊂'variable'),flds ⍝ Add Decrement_Rates comments
[23]          Comment_Decrement_Rates←Comment_Decrement_Rates amend 'variable' ((⊂'/gdr/',2↑varname) TEXTREPL¨Comment_Decrement_Rates at 'variable')
[24]          ⍎comment_var,'←',comment_var,' append Comment_Decrement_Rates'
[25]      :endif
[26]  
[27]      list←m2n ⍙VALUESdict ReadDictFile 'Decrement_Rates' '' 'NAMES'
[28]      flds←0 Uniquelist ⊃(qtrim¨flds),(labs∊list)/labs←(⊂'lr'),¨flds~¨⊂'[;]'
[29]      flds RenameVars 'gdr' (2↑varname) ⋄ flds RenameVars 'lrgdr' ('lr',2↑varname)
[30]      0 0⍴⎕ex ⊃list
[31]      :if ∨/∆←~old≡¨new←DLTB¨⍎¨vars
[32]          new←∆/new ⋄ vars←∆/vars
[33]  
[34]          parms←⊃spin (tab for (⊂'Field'),parmlist←(⊂'gdr'),¨2↓¨vars) at 'Field' 'Type' 'Desc'
[35]          idx←parmlist⍳parms[;1]
[36]          parms[;1]←vars[idx] ⋄ parms[;2]←new[idx]
[37]  
[38]          :for ∆ :in ⎕split parms ⋄ (vars new descs)←∆
[39]              MESS←MESS OVER vars ⍬ ((errflag/'Warning:  '),'Value for "',descs,'" in ',desc,' has changed to "',new,'"')
[40]          :endfor
[41]      :endif
[42]  
[43]  end:res←success MESS
[44]  :endif
    ∇
