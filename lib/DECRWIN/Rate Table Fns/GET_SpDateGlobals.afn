    ∇ res←larg GET∆SpDateGlobals varname;flds;success;MESS;desc;errflag;var;tab;old;new;vars;descs;∆;list;suffix;prefix;parms;idx;parmlist[1]   ⍝ DECRWIN.sf#2[2]   ⍝ Extract the Spreading Dates Global parameters using the "description" pointer "varname"[3]   ⍝ varname has the form "stem variable name" (either as prefix or suffix),'SDParm' and 'C' if cash[4]   ⍝ larg is the description of the Spreading Dates set and a valuation flag[5]   [6]   (desc errflag)←larg ⋄ var←DLTB ⍎varname[7]   [8]   :if ↑res←(success MESS)←2↑ClientFile ReadModule 'Spreading_Dates' var 'Spreading Dates' desc errflag varname[9]       tab←⍙RULESdict ReadDictFile 'Spreading_Dates'[10]      tab←tab for ⍎¨tab at 'Editable' ⍝ Exclude those not required[11]      flds←(tab at 'Field')~(zwb¨gsdSSDmt gsdSFDmt)/'gsdSSD' 'gsdSFD' ⍝ Remove Dates if they are Blank[12]  [13]      :if ↑'SDParm'⍷varname ⋄ suffix←varname~'SDParm' ⋄ prefix←''[14]      :else                 ⋄ prefix←varname~'SDParm' ⋄ suffix←''[15]      :endif[16]  [17]      ∆←~(⍎comment_var,' at "variable"')∊(⊂'/gsd/',prefix) TEXTREPL¨flds,¨⊂suffix[18]      ⍎comment_var,'←',comment_var,' for ∆'[19]      :if ×rowsIn Comment_Spreading_Dates←Comment_Spreading_Dates for (⊂'variable'),flds ⍝ Add Spreading_Dates comments[20]          Comment_Spreading_Dates←Comment_Spreading_Dates amend 'variable' (((⊂'/gsd/',prefix) TEXTREPL¨Comment_Spreading_Dates at 'variable'),¨⊂suffix)[21]          ⍎comment_var,'←',comment_var,' append Comment_Spreading_Dates'[22]      :endif[23]  [24]      list←m2n ⍙VALUESdict ReadDictFile 'Spreading_Dates' '' 'NAMES'[25]      flds←(list∊(flds,(⊂'lr'),¨flds))/list[26]      vars←(⊂'/gsd/',prefix) TEXTREPL¨(flds~'gsdSSDmt' 'gsdSFDmt'),¨⊂suffix ⍝ Variable Names (remove mt's)[27]      old←DLTB¨⍎¨vars                                                     ⍝ Currently set Variables[28]  [29]      ⍎'(',⍕((⊂'/gsd/',prefix) TEXTREPL¨flds,¨⊂suffix),')←',⍕flds[30]      0 0⍴⎕ex ⊃list[31]  [32]      :if ∨/∆←~old≡¨new←DLTB¨⍎¨vars[33]          new←∆/new ⋄ vars←∆/vars[34]  [35]          parms←⊃spin (tab for (⊂'Field'),parmlist←∆/flds~'gsdSSDmt' 'gsdSFDmt') at 'Field' 'Type' 'Desc'[36]          idx←parmlist⍳parms[;1][37]          parms[;1]←vars[idx] ⋄ parms[;2]←new[idx][38]  [39]          :for ∆ :in ⎕split parms ⋄ (vars new descs)←∆[40]              MESS←MESS OVER vars ⍬ ((errflag/'Warning:  '),'Value for "',descs,'" in ',desc,' has changed to "',new,'"')[41]          :endfor[42]      :endif[43]  [44]      res←success MESS[45]  :endif    ∇