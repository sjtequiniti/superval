    ∇ SUMMREC←parm DecrPrint values;code;n;fmt;Header;i;Label
[1]   ⍝ DECRWIN.sf#2
[2]   ⍝ Prepare the Print Output of a Rate Table Printout
[3]   ⍝ Relies on global rtCODE, rtInt and rtDecP
[4]   
[5]   (code Header)←parm ⋄ code←¯5↑DLTB (MATRIX code)[⎕io;]
[6]   Header←'Rate Table:  ',,Header
[7]   
[8]   n←⍬⍴(rtCODE TLU UPPERCASE 2↑code)-~⎕io
[9]   fmt←DLTMB ('IF')[⎕io+×rtDecP[n]],(⍕i←6⌈3++/rtInt[n],rtDecP[n]),(0≠rtDecP[n])/'.',⍕rtDecP[n]
[10]  
[11]  :if TwoDTable code ⍝ 2D Tables
[12]      values←120 120↑values
[13]      :if ∨/0≠,values ⋄ fmt←'B',fmt ⋄ :endif
[14]      ⍝ Format as one big table - calling function must break into printable chunks
[15]      SUMMREC←'   ',,(120,-i)↑'Q<  >I5' ⎕fmt ¯1+⍳120
[16]      SUMMREC←SUMMREC⍪('I3,120',fmt) ⎕fmt (¯1+⍳120),values
[17]      SUMMREC←i SUMMREC ⍝ Pass back size of each column
[18]  :else
[19]      Label←¯5↑DLTMB rtXLabel[n;⎕io+0 1 2 7]
[20]      :if (1↑1↓code)∊'Tt'
[21]          values←60 OVERTAKE values
[22]          Header←Header OVER ' ' OVER (3×5+i)⍴Label,(-i)↑'Rate '
[23]      :else
[24]          Header←Header OVER ' ' OVER (6×5+i)⍴Label,(-i)↑'Rate '
[25]          :if ∨/0≠values ⋄ :andif ~(⊂code[⍳2])∊'AD' 'ad' ⋄ fmt←'B',fmt ⋄ :endif
[26]      :endif
[27]      fmt←'I5,',fmt ⋄ SUMMREC←20 0⍴''
[28]      :for i :in (~⎕io)+⍳3+3×~(1↑1↓code)∊'Tt' ⍝ 3 or 6 columns
[29]          SUMMREC←SUMMREC,fmt ⎕fmt ((¯20↑⍳20×i)-⎕io;20↑(20×i-1)↓values)
[30]      :endfor
[31]      SUMMREC←Header OVER ' ' OVER SUMMREC
[32]  :endif
    ∇
