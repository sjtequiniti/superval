    ∇ res←field Decr_Merge parm;parent;list1;value;list2;∆;exclusions;xsl;index;tieno
[1]   ⍝ DECRWIN.sf#23
[2]   ⍝ Function to allow user control on DECR Merge
[3]   
[4]   parent←'fmDecrMerge.' ⋄ res←0⍴'' ⍝ Default response
[5]   
[6]   :select parm
[7]   :case 'Prepare'
[8]       colEdit←0
[9]   
[10]  :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)
[11]      primaryFile←('\' Win∆Child DECRFile),'.SF'
[12]  
[13]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)
[14]  
[15]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)
[16]  
[17]      :repeat
[18]          :select ↑field
[19]          :case 'lvFile2'
[20]              :if 1=(parent,'fNotOK') ⎕wi 'visible'
[21]                  value←,(parent,'fNotOK.lvFile2') ⎕wi 'value'
[22]                  (parent,'fNotOK.bnDecr_MergeView') ⎕wi 'enabled' (1=⍴value)
[23]                  ((⊂parent,'fNotOK.bnDecr_MergeAdd'),¨'New' 'Both' 'Old') MultiWI 'enabled' (0≠⍴value)
[24]                  :if mt list1←(parent,'fNotOK.lvFile2') ⎕wi 'list'
[25]                      Win∆WizardNext 'Decr_Merge'
[26]                  :elseif ~0∊⍴value
[27]                      value←↑list1[;1]⍳value
[28]                      value←(list2←(parent,'fNotOK.lvFile1') ⎕wi 'list')[;4]⍳list1[value;4]
[29]                      0 0⍴(parent,'fNotOK.lvFile1') ⎕wi 'EnsureVisible' (list2[value;1])
[30]                  :endif
[31]              :endif
[32]          :endselect
[33]      :until mt field←1↓field
[34]  
[35]  :case 'Valid' ⍝ Routine specific validation
[36]  
[37]      :select DLTMB Win∆Child ↑field
[38]      :case 'fFiles'
[39]          index←(LibraryDir,primaryFile) ReadFile 'Index'
[40]          :if ~^/unique index at '∆_Name' ⍝ Check for duplicates.
[41]              res←'Primary file ',primaryFile,' is corrupted.  Please fix corruptions before merging.' ⋄ :return
[42]          :endif
[43]          index←(LibraryDir,importFile) ReadFile 'Index'
[44]          :if ~^/unique index at '∆_Name' ⍝ Check for duplicates.
[45]              res←'Merge file ',importFile,' is corrupted.  Please fix corruptions before merging.' ⋄ :return
[46]          :endif
[47]  
[48]      :case 'fOK'
[49]  
[50]      :case 'fNotOK'
[51]          :if    ~mt (parent,'fNotOK.lvFile2') ⎕wi 'list' ⍝ Tables left
[52]          :andif ~'Y'='YN' ASK 'All remaining Rate Tables from Merge File will be ignored and Primary File Rate Tables retained',⎕tcnl,'Are you sure you want to continue?'
[53]              res←'Finalise Selections for Conflicting Rate Tables'
[54]          :endif
[55]  
[56]      :case 'fSummary'
[57]  
[58]      :endselect
[59]  
[60]  :case 'Back'
[61]  
[62]      :select DLTMB Win∆Child ↑field
[63]      :case 'fOK'
[64]          :if 'N'='YN' ASK 'All selections for Conflicting Rate Tables will be lost.  Are you sure?'
[65]              res←'Continue with Conflicting Tables selections.'
[66]          :endif
[67]  
[68]      :case 'fNotOK'
[69]  
[70]      :case 'fSummary'
[71]          0 0⍴(parent,'fSummary.webSummary') ⎕wi 'XNavigate2' (StyleDir,'blank.htm')
[72]          :if htm NTIE tieno←TieNumber htm ⋄ htm NERASE tieno ⋄ :endif
[73]  
[74]      :endselect
[75]  
[76]  :case 'Next'
[77]  
[78]      :select DLTMB Win∆Child ↑field
[79]      :case 'fFiles'
[80]          accept←delete←MATRIX (,1↑[1]ClientFile ReadFile 1),'value' 'file' 'newcode' ⍝ tables for import choices
[81]          (original import)←DecrFileAsTable¨primaryFile importFile
[82]          ∆←'Y'≠↑¨¨(original import)at¨⊂'∆_Deleted'
[83]          (singletons matched unmatched)←CompareTables (original import) for¨ ∆   ⍝ exclude deleted
[84]          ⍝ honour choices recorded in accept delete (ie support Back button)
[85]          unmatched←unmatched for¨ ~(unmatched at¨⊂'∆_Name') ∊¨ ,/ (accept delete) at¨⊂'∆_Name'
[86]          ((parent,'fOK.lvUnique') 'Decr_Merge') Win∆UpdateListview '' GetDecrMerge 'Unique'
[87]      :case 'fOK'
[88]          ((parent,'fNotOK.lvFile1') 'Decr_Merge') Win∆UpdateListview 'Primary ' GetDecrMerge 'File1'
[89]          ((parent,'fNotOK.lvFile2') 'Decr_Merge') Win∆UpdateListview 'Merging ' GetDecrMerge 'File2'
[90]  
[91]      :case 'fNotOK' ⍝ Determine the Rate Table code to be given to "new" Tables (change "new" dictionary to reflect these Table code allocations)
[92]  ⍝⍝      Use THIS defn to permit re-use of unimported table codes
[93]  ⍝⍝        exclusions←↑,/ (singletons matched,⊂accept for 'file' primaryFile) at¨ ⊂'∆_Name'
[94]  ⍝⍝      use THIS defn to prevent ANY re-use of table codes
[95]          exclusions←↑,/ original import at¨ ⊂'∆_Name'
[96]          accept←exclusions NewTableCodesFor accept
[97]          (accept delete)←(accept delete) append ¨unmatched
[98]          delete←delete amend 'newcode' ((rowsIn delete)/⊂'')
[99]  
[100] ⍝       Display HTML report of Changes
[101]         htm←LibraryDir,'Rate Table Merge.',(,'I12' ⎕FMT 100⊥5↑⎕TS),'.htm'
[102]         xsl←StyleDir,'decrmerge.xsl'
[103]         htm xsl writeHtmReport primaryFile importFile ReportDecrMerge singletons matched accept delete unmatched
[104]         0 0⍴(parent,'fSummary.webSummary') ⎕wi 'XNavigate2' htm
[105] 
[106]     :case 'fSummary'
[107]          ⍝ Update DECRFile with changes and create Audit records
[108]          res←RebuildDecrFile primaryFile
[109] 
[110]     :endselect
[111] 
[112] :case 'Run'
[113]     parent ⎕wi '∆modified' 1 ⍝ Skip Ignore Changes?
[114]     res←'Quit'
[115] 
[116] :case 'Quit' ⍝ Deleting "other" variables
[117]     0 0⍴⎕ex 'original import singletons matched unmatched accept delete htm colEdit'
[118] 
[119] :endselect
    ∇
