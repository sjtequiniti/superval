    ∇ Init_DisplayAudit;z;red;i
[1]   ⍝ DECRWIN.sf#15
[2]   ⍝ Initialise the grids for the Audit Display
[3]   
[4]   :if ~0∊⍴OldValues
[5]       (parent,'edoldDesc') ⎕wi 'visible' 1
[6]       (parent,'lloldDesc') ⎕wi 'visible' 1
[7]       :if TwoDTable code ⍝ 2D Tables
[8]           (SSName1←parent,'fOldTwoDRates.ssOldTwoDRates') DecrSS∆Adjust 'TwoD'
[9]           (parent,'fOldTwoDRates') ⎕wi 'visible' 1
[10]          SSName1 DecrSS∆Insert (code (120 120↑OldValues))
[11]      :elseif (1↑1↓code)∊'Tt'
[12]          (SSName1←parent,'fOldDurnRates.ssOldDurnRates') DecrSS∆Adjust 'Duration'
[13]          (parent,'fOldDurnRates') ⎕wi 'visible' 1
[14]          SSName1 DecrSS∆Insert (code (60 OVERTAKE OldValues))
[15]      :else
[16]          (SSName1←parent,'fOldAgeRates.ssOldAgeRates') DecrSS∆Adjust 'Age'
[17]          (parent,'fOldAgeRates') ⎕wi 'visible' 1
[18]          SSName1 DecrSS∆Insert (code OldValues)
[19]      :endif
[20]  :else
[21]      (parent,'lDiff') ⎕wi 'visible' ¯1
[22]      (parent,'bnDisplay_AuditViewOld') ⎕wi 'enabled' 0
[23]  :endif
[24]  
[25]  :if ~0∊⍴NewValues
[26]      (parent,'ednewDesc') ⎕wi 'visible' 1
[27]      (parent,'llnewDesc') ⎕wi 'visible' 1
[28]      :if TwoDTable code ⍝ 2D Tables
[29]          (SSName2←parent,'fNewTwoDRates.ssNewTwoDRates') DecrSS∆Adjust 'TwoD'
[30]          (parent,'fNewTwoDRates') ⎕wi 'visible' 1
[31]          SSName2 DecrSS∆Insert (code (120 120↑NewValues))
[32]      :elseif (1↑1↓code)∊'Tt'
[33]          (SSName2←parent,'fNewDurnRates.ssNewDurnRates') DecrSS∆Adjust 'Duration'
[34]          (parent,'fNewDurnRates') ⎕wi 'visible' 1
[35]          SSName2 DecrSS∆Insert (code (60 OVERTAKE NewValues))
[36]      :else
[37]          (SSName2←parent,'fNewAgeRates.ssNewAgeRates') DecrSS∆Adjust 'Age'
[38]          (parent,'fNewAgeRates') ⎕wi 'visible' 1
[39]          SSName2 DecrSS∆Insert (code NewValues)
[40]      :endif
[41]  :else
[42]      (parent,'lDiff') ⎕wi 'visible' ¯1
[43]      (parent,'bnDisplay_AuditViewNew') ⎕wi 'enabled' 0
[44]  :endif
[45]  
[46]  :if 1=(parent,'lDiff') ⎕wi 'visible'
[47]      (parent,'lDiff') ⎕wi 'color' ¯1 (red←256⊥0 0 255)
[48]      :if TwoDTable code ⍝ 2D Tables
[49]          z←(,(120 120↑OldValues)≠(120 120↑NewValues))/⍳120×120 ⋄ diff←⍳0
[50]          :for i :in z
[51]              diff←diff,⊂(⌈i÷120),(1+120∣¯1+i)
[52]          :endfor
[53]          :for z :in diff
[54]              SSName1 Win∆F1SSSetSelection 4⍴⊃z
[55]              SSName1 ⎕wi 'XFontColor' red
[56]              SSName2 Win∆F1SSSetSelection 4⍴⊃z
[57]              SSName2 ⎕wi 'XFontColor' red
[58]          :endfor
[59]      :else
[60]          z←120-60×(1↑1↓code)∊'Tt'
[61]          diff←((z↑OldValues)≠(z↑NewValues))/¯1+⍳z
[62]          :for z :in diff ⍝ Color "diff" in red
[63]              SSName1 Win∆F1SSSetSelection 4⍴(1+10∣z),(2×⌈0.1×z+1)
[64]              SSName1 ⎕wi 'XFontColor' red
[65]              SSName2 Win∆F1SSSetSelection 4⍴(1+10∣z),(2×⌈0.1×z+1)
[66]              SSName2 ⎕wi 'XFontColor' red
[67]          :endfor
[68]      :endif
[69]      SSName1 ⎕wi 'onXTopLeftChanged' ('Win∆F1SSsync "',SSName2,'"')
[70]      SSName2 ⎕wi 'onXTopLeftChanged' ('Win∆F1SSsync "',SSName1,'"')
[71]  :endif
    ∇
