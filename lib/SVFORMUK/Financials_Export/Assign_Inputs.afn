    ∇ Assign_Inputs modified;PickList;list;n;NameList;value;MaxRow;MaxCol;selection;nn;no;package;warnings;var;control;row[1]   warnings←0 0⍴""[2]   package←pack ⍙VALUESdict ReadDictFile "Financials_Export" "" "Names"[3]   [4]   :if 1=ControlName ⎕wi "∆relrules"[5]       :for control :in nub FormFields at "control"[6]           "Financials_Export" ParmColor control "" ⍬ 0[7]       :endfor[8]   :endif[9]   PickList←"fmFinExport.lvSavedParms" ⎕wi "list"[10]  :if 0∊⍴PickList[11]      value←⍬[12]  :else[13]      list←(1 0×⍴PickList)⍴""[14]      :for n :in 2+⍳1⌈+/"⍺"=((MATRIX SavedParms) OVER " ")[1;][15]          list←list,"⍺",(⊃PickList[;n])," "[16]      :endfor[17]      list←m2n list[18]      NameList←m2n MATRIX SavedParms[19]      value←(list∊NameList)/PickList[;1][20]  :endif[21]  :if 0∊⍴value ⋄ :andif ~0∊⍴PickList ⋄ :andif 1[22]      value←PickList[1;1] ⋄ modified←1[23]  :endif[24]  "fmFinExport.lvSavedParms" ⎕wi "value" value[25]  0 0⍴"fmFinExport.lvSavedParms" ⎕wi "EnsureVisible" ((1↑value),1)[26]  "fmFinExport.ssOldParms" ⎕wi "XClearRange" 1 1 ("fmFinExport.ssOldParms" ⎕wi "MaxRow") ("fmFinExport.ssOldParms" ⎕wi "MaxCol") 3[27]  MaxRow←MaxCol←1[28]  value←(1 32⌈⍴value)↑value←MATRIX OldName[29]  MaxCol←"fmFinExport.ssOldParms" ⎕wi "MaxCol"[30]  "fmFinExport.ssOldParms" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[31]  "fmFinExport.ssOldParms" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,1) (m2n ⎕av[209 151] REPL value)[32]  value←(1 50⌈⍴value)↑value←MATRIX OldValue[33]  MaxCol←"fmFinExport.ssOldParms" ⎕wi "MaxCol"[34]  "fmFinExport.ssOldParms" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[35]  "fmFinExport.ssOldParms" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,2) (m2n ⎕av[209 151] REPL value)[36]  value←(1 5⌈⍴value)↑value←MATRIX OldCap[37]  MaxCol←"fmFinExport.ssOldParms" ⎕wi "MaxCol"[38]  "fmFinExport.ssOldParms" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[39]  "fmFinExport.ssOldParms" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,3) (m2n ⎕av[209 151] REPL value)[40]  value←(1 5⌈⍴value)↑value←MATRIX OldCollar[41]  MaxCol←"fmFinExport.ssOldParms" ⎕wi "MaxCol"[42]  "fmFinExport.ssOldParms" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[43]  "fmFinExport.ssOldParms" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,4) (m2n ⎕av[209 151] REPL value)[44]  value←(1 40⌈⍴value)↑value←MATRIX OldConsDyn[45]  MaxCol←"fmFinExport.ssOldParms" ⎕wi "MaxCol"[46]  "fmFinExport.ssOldParms" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[47]  "fmFinExport.ssOldParms" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,5) (m2n ⎕av[209 151] REPL value)[48]  value←(1 32⌈⍴value)↑value←MATRIX OldGroup[49]  MaxCol←"fmFinExport.ssOldParms" ⎕wi "MaxCol"[50]  "fmFinExport.ssOldParms" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[51]  "fmFinExport.ssOldParms" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,6) (m2n ⎕av[209 151] REPL value)[52]  value←(1 40⌈⍴value)↑value←MATRIX OldDesc[53]  MaxCol←"fmFinExport.ssOldParms" ⎕wi "MaxCol"[54]  "fmFinExport.ssOldParms" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[55]  "fmFinExport.ssOldParms" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,7) (m2n ⎕av[209 151] REPL value)[56]  "fmFinExport.ssOldParms" ⎕wi "SetColWidthAuto" 1 1 MaxRow MaxCol 0[57]  (MaxRow MaxCol)←"fmFinExport.ssOldParms" ⎕wi "xGetActiveCell" 0 0[58]  "fmFinExport.ssOldParms" ⎕wi "xSetActiveCell" (MaxRow⌊"fmFinExport.ssOldParms" ⎕wi "xMaxRow") (MaxCol⌊"fmFinExport.ssOldParms" ⎕wi "xMaxCol")[59]  "fmFinExport.ssOldParms" ⎕wi "xmodified" 0[60]  "fmFinExport.ssOldParms" ⎕wi "onXModified" "('fmFinExport.' (Win∆Parent 'fmFinExport.')) MultiWI 'modified' ('fmFinExport.ssOldParms' ⎕wi 'xmodified')"[61]  "fmFinExport.ssNewParms" ⎕wi "XClearRange" 1 1 ("fmFinExport.ssNewParms" ⎕wi "MaxRow") ("fmFinExport.ssNewParms" ⎕wi "MaxCol") 3[62]  MaxRow←MaxCol←1[63]  value←(1 32⌈⍴value)↑value←MATRIX NewName[64]  MaxCol←"fmFinExport.ssNewParms" ⎕wi "MaxCol"[65]  "fmFinExport.ssNewParms" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[66]  "fmFinExport.ssNewParms" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,1) (m2n ⎕av[209 151] REPL value)[67]  value←(1 50⌈⍴value)↑value←MATRIX NewValue[68]  MaxCol←"fmFinExport.ssNewParms" ⎕wi "MaxCol"[69]  "fmFinExport.ssNewParms" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[70]  "fmFinExport.ssNewParms" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,2) (m2n ⎕av[209 151] REPL value)[71]  value←(1 5⌈⍴value)↑value←MATRIX NewCap[72]  MaxCol←"fmFinExport.ssNewParms" ⎕wi "MaxCol"[73]  "fmFinExport.ssNewParms" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[74]  "fmFinExport.ssNewParms" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,3) (m2n ⎕av[209 151] REPL value)[75]  value←(1 5⌈⍴value)↑value←MATRIX NewCollar[76]  MaxCol←"fmFinExport.ssNewParms" ⎕wi "MaxCol"[77]  "fmFinExport.ssNewParms" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[78]  "fmFinExport.ssNewParms" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,4) (m2n ⎕av[209 151] REPL value)[79]  value←(1 40⌈⍴value)↑value←MATRIX NewConsDyn[80]  MaxCol←"fmFinExport.ssNewParms" ⎕wi "MaxCol"[81]  "fmFinExport.ssNewParms" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[82]  "fmFinExport.ssNewParms" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,5) (m2n ⎕av[209 151] REPL value)[83]  value←(1 32⌈⍴value)↑value←MATRIX NewGroup[84]  MaxCol←"fmFinExport.ssNewParms" ⎕wi "MaxCol"[85]  "fmFinExport.ssNewParms" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[86]  "fmFinExport.ssNewParms" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,6) (m2n ⎕av[209 151] REPL value)[87]  value←(1 40⌈⍴value)↑value←MATRIX NewDesc[88]  MaxCol←"fmFinExport.ssNewParms" ⎕wi "MaxCol"[89]  "fmFinExport.ssNewParms" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[90]  "fmFinExport.ssNewParms" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,7) (m2n ⎕av[209 151] REPL value)[91]  "fmFinExport.ssNewParms" ⎕wi "SetColWidthAuto" 1 1 MaxRow MaxCol 0[92]  (MaxRow MaxCol)←"fmFinExport.ssNewParms" ⎕wi "xGetActiveCell" 0 0[93]  "fmFinExport.ssNewParms" ⎕wi "xSetActiveCell" (MaxRow⌊"fmFinExport.ssNewParms" ⎕wi "xMaxRow") (MaxCol⌊"fmFinExport.ssNewParms" ⎕wi "xMaxCol")[94]  "fmFinExport.ssNewParms" ⎕wi "xmodified" 0[95]  "fmFinExport.ssNewParms" ⎕wi "onXModified" "('fmFinExport.' (Win∆Parent 'fmFinExport.')) MultiWI 'modified' ('fmFinExport.ssNewParms' ⎕wi 'xmodified')"[96]  :if 1=ControlName ⎕wi "∆relrules" ⋄ :andif ×rowsIn Comment_Financials_Export[97]      :for var :in spin Comment_Financials_Export at "variable" "row" ⋄ (var row)←var[98]          "Financials_Export" ParmColor ((FormFields for "variable" var) at "control"),var row 1[99]      :endfor[100] :endif[101] :if ~0∊⍴,warnings[102]     MDISPLAY DLTMB warnings,⎕tcnl[103]     Win∆AssignVars "fmFinExport"[104] :endif[105] :if 0=modified←modified⌈~package≡pack ⍙VALUESdict ReadDictFile "Financials_Export" "" "Names"[106]     "fmFinExport" ⎕wi "modified" 0[107] :endif    ∇