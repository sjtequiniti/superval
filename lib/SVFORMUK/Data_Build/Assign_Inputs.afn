    ∇ Assign_Inputs modified;PickList;list;n;NameList;value;MaxRow;MaxCol;selection;nn;no;package;warnings;var;control;row[1]   warnings←0 0⍴""[2]   package←pack ⍙VALUESdict ReadDictFile "Data_Build" "" "Names"[3]   [4]   :if 1=ControlName ⎕wi "∆relrules"[5]       :for control :in nub FormFields at "control"[6]           "Data_Build" ParmColor control "" ⍬ 0[7]       :endfor[8]   :endif[9]   PickList←"fmDataBuild.fData.cbFILE" ⎕wi "list"[10]  selection←PickList ExactTLU DLTB FILE[11]  :if mt selection[12]      :if ~mt DLTB FILE[13]          warnings←warnings OVER "Previous Selection for 'Data Build Source File' is no longer available"[14]      :endif[15]      modified←⌈/modified,1[16]  :endif[17]  "fmDataBuild.fData.cbFILE" ⎕wi "value" (¯1↑1,selection)[18]  PickList←"fmDataBuild.fData.cbxlFILE" ⎕wi "list"[19]  selection←PickList ExactTLU DLTB xlFILE[20]  :if mt selection[21]      :if ~mt DLTB xlFILE[22]          warnings←warnings OVER "Previous Selection for 'Data Build Source File' is no longer available"[23]      :endif[24]      modified←⌈/modified,1[25]  :endif[26]  "fmDataBuild.fData.cbxlFILE" ⎕wi "value" (¯1↑1,selection)[27]  PickList←"fmDataBuild.fData.cbxlSHEET" ⎕wi "list"[28]  selection←PickList ExactTLU DLTB xlSHEET[29]  :if mt selection[30]      :if ~mt DLTB xlSHEET[31]          warnings←warnings OVER "Previous Selection for 'Excel Sheet Name' is no longer available"[32]      :endif[33]      modified←⌈/modified,1[34]  :endif[35]  "fmDataBuild.fData.cbxlSHEET" ⎕wi "value" (¯1↑1,selection)[36]  PickList←"fmDataBuild.fData.cbExpFormat" ⎕wi "list"[37]  selection←PickList ExactTLU DLTB ExpFormat[38]  :if mt selection[39]      :if ~mt DLTB ExpFormat[40]          warnings←warnings OVER "Previous Selection for 'Format of Source File' is no longer available"[41]      :endif[42]      modified←⌈/modified,1[43]  :endif[44]  "fmDataBuild.fData.cbExpFormat" ⎕wi "value" (¯1↑1,selection)[45]  no←1↑⍴PickList←SStoMAT ("fmDataBuild.fData.fmembtype.opmembtype_1" ⎕wi "∆lastoption") ⎕wi "∆options"[46]  value←¯1↑1,selection←PickList ExactTLU membtype[47]  :if 0∊⍴selection[48]      modified←⌈/modified,×value[49]  :endif[50]  :for nn :in ⍳no[51]      ("fmDataBuild.fData.fmembtype.opmembtype_",⍕nn) ⎕wi "value" (value=nn)[52]  :endfor[53]  "fmDataBuild.fData.ckgrouped" ⎕wi "value" (zwb grouped)[54]  "fmDataBuild.fData.ckuseguess" ⎕wi "value" (zwb useguess)[55]  PickList←"fmDataBuild.fFields.lvStandard" ⎕wi "list"[56]  :if 0∊⍴PickList[57]      value←⍬[58]  :else[59]      list←(1 0×⍴PickList)⍴""[60]      :for n :in 2+⍳1⌈+/"⍺"=((MATRIX Standard) OVER " ")[1;][61]          list←list,"⍺",(⊃PickList[;n])," "[62]      :endfor[63]      list←m2n list[64]      NameList←m2n MATRIX Standard[65]      value←(list∊NameList)/PickList[;1][66]  :endif[67]  :if 0∊⍴value ⋄ :andif ~0∊⍴PickList ⋄ :andif 0[68]      value←PickList[1;1] ⋄ modified←1[69]  :endif[70]  "fmDataBuild.fFields.lvStandard" ⎕wi "value" value[71]  0 0⍴"fmDataBuild.fFields.lvStandard" ⎕wi "EnsureVisible" ((1↑value),1)[72]  PickList←"fmDataBuild.fFields.lvUserDefined" ⎕wi "list"[73]  :if 0∊⍴PickList[74]      value←⍬[75]  :else[76]      list←(1 0×⍴PickList)⍴""[77]      :for n :in 2+⍳1⌈+/"⍺"=((MATRIX UserDefined) OVER " ")[1;][78]          list←list,"⍺",(⊃PickList[;n])," "[79]      :endfor[80]      list←m2n list[81]      NameList←m2n MATRIX UserDefined[82]      value←(list∊NameList)/PickList[;1][83]  :endif[84]  :if 0∊⍴value ⋄ :andif ~0∊⍴PickList ⋄ :andif 0[85]      value←PickList[1;1] ⋄ modified←1[86]  :endif[87]  "fmDataBuild.fFields.lvUserDefined" ⎕wi "value" value[88]  0 0⍴"fmDataBuild.fFields.lvUserDefined" ⎕wi "EnsureVisible" ((1↑value),1)[89]  PickList←"fmDataBuild.fFields.lvExcluded" ⎕wi "list"[90]  :if 0∊⍴PickList[91]      value←⍬[92]  :else[93]      list←(1 0×⍴PickList)⍴""[94]      :for n :in 2+⍳1⌈+/"⍺"=((MATRIX Excluded) OVER " ")[1;][95]          list←list,"⍺",(⊃PickList[;n])," "[96]      :endfor[97]      list←m2n list[98]      NameList←m2n MATRIX Excluded[99]      value←(list∊NameList)/PickList[;1][100] :endif[101] :if 0∊⍴value ⋄ :andif ~0∊⍴PickList ⋄ :andif 0[102]     value←PickList[1;1] ⋄ modified←1[103] :endif[104] "fmDataBuild.fFields.lvExcluded" ⎕wi "value" value[105] 0 0⍴"fmDataBuild.fFields.lvExcluded" ⎕wi "EnsureVisible" ((1↑value),1)[106] no←1↑⍴PickList←SStoMAT ("fmDataBuild.fFields.ffreq.opfreq_1" ⎕wi "∆lastoption") ⎕wi "∆options"[107] value←¯1↑1,selection←PickList ExactTLU freq[108] :if 0∊⍴selection[109]     modified←⌈/modified,×value[110] :endif[111] :for nn :in ⍳no[112]     ("fmDataBuild.fFields.ffreq.opfreq_",⍕nn) ⎕wi "value" (value=nn)[113] :endfor[114] "fmDataBuild.fFields.ckblankwarning" ⎕wi "value" (zwb blankwarning)[115] "fmDataBuild.fReport.edResults" ⎕wi "text" (1↓,⎕tcnl,Results)[116] PickList←"fmDataBuild.fCheckSum.lvSums" ⎕wi "list"[117] :if 0∊⍴PickList[118]     value←⍬[119] :else[120]     list←(1 0×⍴PickList)⍴""[121]     :for n :in 2+⍳1⌈+/"⍺"=((MATRIX Sums) OVER " ")[1;][122]         list←list,"⍺",(⊃PickList[;n])," "[123]     :endfor[124]     list←m2n list[125]     NameList←m2n MATRIX Sums[126]     value←(list∊NameList)/PickList[;1][127] :endif[128] :if 0∊⍴value ⋄ :andif ~0∊⍴PickList ⋄ :andif 0[129]     value←PickList[1;1] ⋄ modified←1[130] :endif[131] "fmDataBuild.fCheckSum.lvSums" ⎕wi "value" value[132] 0 0⍴"fmDataBuild.fCheckSum.lvSums" ⎕wi "EnsureVisible" ((1↑value),1)[133] :if 1=ControlName ⎕wi "∆relrules" ⋄ :andif ×rowsIn Comment_Data_Build[134]     :for var :in spin Comment_Data_Build at "variable" "row" ⋄ (var row)←var[135]         "Data_Build" ParmColor ((FormFields for "variable" var) at "control"),var row 1[136]     :endfor[137] :endif[138] :if ~0∊⍴,warnings[139]     MDISPLAY DLTMB warnings,⎕tcnl[140]     Win∆AssignVars "fmDataBuild"[141] :endif[142] :if 0=modified←modified⌈~package≡pack ⍙VALUESdict ReadDictFile "Data_Build" "" "Names"[143]     "fmDataBuild" ⎕wi "modified" 0[144] :endif    ∇