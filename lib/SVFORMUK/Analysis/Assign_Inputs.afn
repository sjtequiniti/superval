    ∇ Assign_Inputs modified;PickList;list;n;NameList;value;MaxRow;MaxCol;selection;nn;no;package;warnings;var;control;row[1]   warnings←0 0⍴""[2]   package←pack ⍙VALUESdict ReadDictFile "Analysis" "" "Names"[3]   [4]   :if 1=ControlName ⎕wi "∆relrules"[5]       :for control :in nub FormFields at "control"[6]           "Analysis" ParmColor control "" ⍬ 0[7]       :endfor[8]   :endif[9]   "FileSelections" Win∆Inherits "fILESelections"[10]  "fmSV.fAnalysis.fData.ckFileSelections" ⎕wi "value" (zwb FileSelections)[11]  "FILES" Win∆Inherits "Actsfile"[12]  "fmSV.fAnalysis.fData.edFILES" ⎕wi "text" (DLTB FILES)[13]  "fILENAME" Win∆Inherits "Actsfile"[14]  GetAbsFileList "Fund"[15]  warnings←warnings OVER "Analysis Data File" Win∆FileRelative "fILENAME" "lrfILENAME"[16]  "fmSV.fAnalysis.fData.edfILENAME" ⎕wi "text" (DLTB fILENAME)[17]  "Format" Win∆Inherits "FormatA"[18]  PickList←"fmSV.fAnalysis.fData.cbFormat" ⎕wi "list"[19]  warnings←warnings OVER "Data Format" Win∆FormatRelative "Format" "lrFormat"[20]  selection←(StripText PickList) ExactTLU DLTB StripText Format[21]  :if mt selection[22]      modified←⌈/modified,1[23]  :endif[24]  "fmSV.fAnalysis.fData.cbFormat" ⎕wi "value" (¯1↑1,selection)[25]  "fmSV.fAnalysis.fData.ckUseSex" ⎕wi "value" (zwb UseSex)[26]  "fmSV.fAnalysis.fData.ckUseCat" ⎕wi "value" (zwb UseCat)[27]  PickList←"fmSV.fAnalysis.fData.lsCatSels" ⎕wi "list"[28]  :if 0∊⍴selection←PickList ExactTLU SStoMAT CatSels[29]      "fmSV.fAnalysis.fData.lsCatSels" ⎕wi "value" ((×1↑⍴PickList)⍴1)[30]      modified←⌈/modified,"fmSV.fAnalysis.fData.lsCatSels" ⎕wi "value"[31]  :else[32]      "fmSV.fAnalysis.fData.lsCatSels" ⎕wi "visible" ¯1[33]      "fmSV.fAnalysis.fData.lsCatSels" ⎕wi "value" selection[34]      "fmSV.fAnalysis.fData.lsCatSels" ⎕wi "visible" 1[35]  :endif[36]  "fmSV.fAnalysis.fData.ckUseSubs" ⎕wi "value" (zwb UseSubs)[37]  "fmSV.fAnalysis.fData.ckDeleteSubs" ⎕wi "value" (zwb DeleteSubs)[38]  PickList←"fmSV.fAnalysis.fParms.cbEDATE" ⎕wi "list"[39]  warnings←warnings OVER "Calculation Date" Win∆DateRelative "EDATE" "lrEDATE"[40]  selection←(StripText PickList) ExactTLU DLTB StripText EDATE[41]  :if mt selection[42]          "fmSV.fAnalysis.fParms.cbEDATE" ⎕wi "text" (DLTB EDATE)[43]  :else[44]      "fmSV.fAnalysis.fParms.cbEDATE" ⎕wi "value" selection[45]  :endif[46]  no←1↑⍴PickList←SStoMAT ("fmSV.fAnalysis.fParms.fsalind.opsalind_1" ⎕wi "∆lastoption") ⎕wi "∆options"[47]  value←¯1↑1,selection←PickList ExactTLU salind[48]  :if 0∊⍴selection[49]      modified←⌈/modified,×value[50]  :endif[51]  :for nn :in ⍳no[52]      ("fmSV.fAnalysis.fParms.fsalind.opsalind_",⍕nn) ⎕wi "value" (value=nn)[53]  :endfor[54]  "fmSV.fAnalysis.fParms.edX" ⎕wi "text" (DLTB X)[55]  no←1↑⍴PickList←SStoMAT ("fmSV.fAnalysis.fParms.frounding.oprounding_1" ⎕wi "∆lastoption") ⎕wi "∆options"[56]  value←¯1↑1,selection←PickList ExactTLU rounding[57]  :if 0∊⍴selection[58]      modified←⌈/modified,×value[59]  :endif[60]  :for nn :in ⍳no[61]      ("fmSV.fAnalysis.fParms.frounding.oprounding_",⍕nn) ⎕wi "value" (value=nn)[62]  :endfor[63]  "fmSV.fAnalysis.fParms.edPS" ⎕wi "text" (DLTB PS)[64]  no←1↑⍴PickList←SStoMAT ("fmSV.fAnalysis.fParms.fservind.opservind_1" ⎕wi "∆lastoption") ⎕wi "∆options"[65]  value←¯1↑1,selection←PickList ExactTLU servind[66]  :if 0∊⍴selection[67]      modified←⌈/modified,×value[68]  :endif[69]  :for nn :in ⍳no[70]      ("fmSV.fAnalysis.fParms.fservind.opservind_",⍕nn) ⎕wi "value" (value=nn)[71]  :endfor[72]  "fmSV.fAnalysis.fOutput.ckPROPT1" ⎕wi "value" (zwb PROPT[1;])[73]  "fmSV.fAnalysis.fOutput.ckPROPT2" ⎕wi "value" (zwb PROPT[2;])[74]  "fmSV.fAnalysis.fOutput.ckPROPT3" ⎕wi "value" (zwb PROPT[3;])[75]  :if 1=ControlName ⎕wi "∆relrules" ⋄ :andif ×rowsIn Comment_Analysis[76]      :for var :in spin Comment_Analysis at "variable" "row" ⋄ (var row)←var[77]          "Analysis" ParmColor ((FormFields for "variable" var) at "control"),var row 1[78]      :endfor[79]  :endif[80]  :if ~0∊⍴,warnings[81]      MDISPLAY DLTMB warnings,⎕tcnl[82]      Win∆AssignVars "fmSV.fAnalysis"[83]  :endif[84]  :if 0=modified←modified⌈~package≡pack ⍙VALUESdict ReadDictFile "Analysis" "" "Names"[85]      "fmSV.fAnalysis" ⎕wi "modified" 0[86]  :endif    ∇