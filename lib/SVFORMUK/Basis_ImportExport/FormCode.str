∇ Container←Form_Make;⎕wself;ControlName;childlist;list;Fieldlist;Fieldcontrol;FrameWidth;Caption;buttonsize;buttonwhere;where;size;alignment;Header;PickList;NameList;value;sortorder;SortList;MaxRow;MaxCol;Parent;level;node;no;nn;NN;x;fnsize;framelist;relTests[1] [2] Fieldlist←Fieldcontrol←list←0 0⍴""[3] "fmSV" ⎕wi "pointer" 13[4] buttonsize←25 65 ⋄ buttonwhere←¯5[5] FormName ⎕wi "caption" ((FormName ⎕wi "caption")," - Export Parameters")[6] "fmSV" ⎕wi "∆caption" (("fmSV" ⎕wi "∆caption"),⊂("fmSV" ⎕wi "caption"))[7] :if 300<fnsize←1↑⍴⎕cr "Form_Make"[8]     "Generating Form" Win∆ProgressBar "Open"[9]     ("Menu Items:" "Form Controls:") Win∆ProgressBar "SetLabels"[10]     (1 1 "Help About") Win∆ProgressBar "FileUpdate"[11] :endif[12] [13] Container←"∆Dialog"[14] [15] ⎕wself←"fmExport" ⎕wi "New" "Form" "Hide"[16] ⎕wi "caption" ("fmSV" ⎕wi "caption")[17] ⎕wi "scale" 5[18] ⎕wi "font" ("fmSV" ⎕wi "font")[19] ⎕wi "border" 2 32 64[20] ⎕wi "where" (Win∆CentrePos .80 1.50×768 1024×1⌈CharSize÷13 6)[21] ⎕wi "limitwhere" (0.8×¯2↑⎕wi "where")[22] ⎕wi "tooltipwidth" 200[23] ⎕wi "onResize" "AutoResize"[24] ⎕wi "onClose" "ExitSystem ''"[25] ControlName←"fmExport"[26] relTests←0[27] 0 Menu_Make "fmSV"[28] 0 Menu_Make "fmExport"[29] "fmExport" Win∆CutCopyPaste "Build"[30] "fmExport" ⎕wi "∆helpid" 2236[31] list←list OVER "fmExport.bnBasis_ImportExportHelp"[32] ⎕wself←"fmExport.bnBasis_ImportExportHelp" ⎕wi "New" "Button"[33] ⎕wi "deferexit" 1[34] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[35] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][36] ⎕wi "∆where" ((x,2)⍴where)[37] ⎕wi "where" (("fmExport" ⎕wi "size") Win∆Resize ⎕wi "∆where")[38] ⎕wi "tooltip" "SuperVal Help"[39] ⎕wi "onClick" ("fmSV.mBasis_ImportExportHelp.mContext"⎕wi "onClick")[40] ⎕wi "caption" "Help"[41] :if buttonimage[42]     ⎕wi "imagelist" "fmSV.iStandard"[43]     ⎕wi "imageindex" 12[44] :endif[45] ⎕wi "visible" ¯1[46] ⎕wi "onMouseDown" "∆HelpField←'#' ⎕wi 'focus' "[47] list←list OVER "fmExport.bnBasis_ImportExportQuit"[48] ⎕wself←"fmExport.bnBasis_ImportExportQuit" ⎕wi "New" "Button"[49] ⎕wi "style" 2[50] ⎕wi "deferexit" 1[51] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[52] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][53] ⎕wi "∆where" ((x,2)⍴where)[54] ⎕wi "where" (("fmExport" ⎕wi "size") Win∆Resize ⎕wi "∆where")[55] ⎕wi "tooltip" "Cancel and Return"[56] ⎕wi "onClick" ("fmSV.mBasis_ImportExportFile.mQuit"⎕wi "onClick")[57] ⎕wi "caption" "Cancel"[58] ⎕wi "∆helpid" 5286[59] ⎕wi "order" .5[60] ⎕wi "visible" ¯1[61] list←list OVER "fmExport.bnBasis_ImportExportSave"[62] ⎕wself←"fmExport.bnBasis_ImportExportSave" ⎕wi "New" "Button"[63] ⎕wi "style" 1[64] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[65] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][66] ⎕wi "∆where" ((x,2)⍴where)[67] ⎕wi "where" (("fmExport" ⎕wi "size") Win∆Resize ⎕wi "∆where")[68] ⎕wi "tooltip" "Save Parameters"[69] ⎕wi "onClick" ("fmSV.mBasis_ImportExportFile.mSave"⎕wi "onClick")[70] ⎕wi "caption" "OK"[71] ⎕wi "∆helpid" 5287[72] ⎕wi "order" .5[73] ⎕wi "visible" ¯1[74] "fmExport" ⎕wi "∆modified" 1[75] [76] ⎕wself←"fmExport.lvSavedParms" ⎕wi "New" "Listview"[77] Fieldlist←Fieldlist OVER "fmExport.lvSavedParms"[78] Fieldcontrol←Fieldcontrol OVER "Listview"[79] ⎕wi "∆name" "SavedParms"[80] ⎕wi "∆type" "ListviewM"[81] ⎕wi "∆mandatory" 1[82] ⎕wi "∆helpid" 5288[83] ⎕wi "tooltip" "Select the Basis Parameter Set(s) to receive the Exported Parameter"[84] list←list OVER "fmExport.lvSavedParms"[85] ⎕wi "scale" 5[86] ⎕wi "viewmode" "report"[87] ⎕wi "style" 1 4 0[88] ⎕wi "∆where" (4 2⍴0.05 0 0.05 0 0.4 0 0.9 0)[89] ⎕wi "where" (("fmExport" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.05 0 0.4 0 0.9 0))[90] ⎕wi "∆update" "GetParmDesc 'BasisFile'"[91] (PickList NameList sortorder SortList)←4↑GetParmDesc 'BasisFile'[92] ⎕wi "list" PickList[93] NameList[;1]←NameList[;1],¨⊂4↑" "[94] ⎕wi "columndisplay" NameList[95] ⎕wi "AutoFit" "header" "all"[96] ⎕wi "∆sortorder" sortorder[97] ⎕wi "∆sortlist" SortList[98] ⎕wi "onColClick" "('fmExport.lvSavedParms' 'Basis_ImportExport') Win∆SortListview ⎕warg"[99] :if 0=⎕nc "listviewDict"[100] listviewDict←MATRIX keysIn ListviewDict[101] :endif[102] :if ~mt sortorder←DLTB ↑((ListviewDict for "Control" "fmExport.lvSavedParms") for "Parameters" "") at "Sort"[103] ("fmExport.lvSavedParms" "Basis_ImportExport") Win∆SortListview sortorder[104] :else[105] ("fmExport.lvSavedParms" "Basis_ImportExport") Win∆SortListview "Date/Time Saved"[106] :endif[107] ⎕wi "onResize" "Win∆SizeListview ⎕wi 'self'"[108] ⎕wi "onPaint" "0 Sel∆LabelUpdate 'fmExport.lvSavedParms' "[109] ⎕wi "onSelect" "0 Sel∆LabelUpdate 'fmExport.lvSavedParms' ⋄ 0 0⍴(⊂⎕wi 'name') Basis_ImportExport 'Change' "[110] ⎕wi "onExit" "⍎(0∊⍴,⎕wres←0 List∆CHECK 'fmExport.lvSavedParms')/'0 0⍴(⊂⎕wi ''name'') Basis_ImportExport ''Change'' ' "[111] ⎕wi "onExitError" "Win∆ExitError ⎕warg"[112] ⎕wi "∆rightlabel" "fmExport.lrSavedParms"[113] [114] ⎕wself←"fmExport.lrSavedParms" ⎕wi "New" "Label"[115] ⎕wi "scale" 5[116] ⎕wi "extent" (CharSize×¯2↑1,19)[117] ⎕wi "style" 32[118] ⎕wi "caption" " "[119] where←4↑,"fmExport.lvSavedParms" ⎕wi "∆where"[120] x←0.5×⍴where←Win∆Calcwhere where+((5+1↑2↓"fmExport.lvSavedParms" ⎕wi "where") CDIV 1↑"fmExport" ⎕wi "size"),0 0 0[121] ⎕wi "∆where" ((x,2)⍴where)[122] ⎕wi "where" (("fmExport" ⎕wi "size") Win∆Resize ⎕wi "∆where")[123] [124] ⎕wself←"fmExport.llSavedParms" ⎕wi "New" "Label"[125] ⎕wi "scale" 5[126] ⎕wi "style" 2[127] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Basis Selection"))[128] ⎕wi "caption" "Basis Selection"[129] where←4↑,"fmExport.lvSavedParms" ⎕wi "∆where"[130] x←0.5×⍴where←Win∆Calcwhere where-0,(5+1↑⎕wi "extent"),0 0[131] ⎕wi "∆where" ((x,2)⍴where)[132] ⎕wi "where" (("fmExport" ⎕wi "size") Win∆Resize ⎕wi "∆where")[133] [134] ⎕wself←"fmExport.lParms" ⎕wi "New" "Label"[135] ⎕wi "scale" 5[136] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Current Parameter Values of Selected Bases"))[137] ⎕wi "caption" "Current Parameter Values of Selected Bases"[138] ⎕wi "∆where" (2 2⍴0.55 ¯20 0 0)[139] ⎕wi "where" (("fmExport" ⎕wi "size") Win∆Resize (2 2⍴0.55 ¯20 0 0))[140] ⎕wself←"fmExport.ssParms" ⎕wi "New" "{13E51003-A52B-11D0-86DA-00608CB9FBFB}6D5ECD55-86B8-11d0-95AD-0020AF1E9EB2"[141] ⎕wi "∆where" (4 2⍴0.55 0 0 0 0.45 ¯45 1 0)[142] ⎕wi "where" (("fmExport" ⎕wi "size") Win∆Resize (4 2⍴0.55 0 0 0 0.45 ¯45 1 0))[143] Fieldlist←Fieldlist OVER "fmExport.ssParms"[144] Fieldcontrol←Fieldcontrol OVER "F1SS"[145] Win∆F1SSDefaults 0[146] ⎕wi "MaxRow" (MaxRow←1)[147] ⎕wi "MaxCol" (MaxCol←1)[148] ⎕wi "xDoStartEdit" 1[149] ⎕wi "xDoEndEdit" 1[150] ⎕wi "xDoCancelEdit" 1[151] ⎕wi "onClick" "Win∆F1SSClick 'fmExport.ssParms'"[152] ⎕wi "onXStartEdit" "⎕wi 'AllowArrows' 0"[153] NameList←0 0⍴" "[154] ⎕wi "MaxCol" (MaxCol←MaxCol⌈1)[155] ⎕wi "ColText" 1 (("/⍺/",⎕tcnl,⎕tclf) TEXTREPL "Basis File")[156] ⎕wi "XSetRowHeight" 1 1 255 1[157] NameList←NameList OVER "ExportFile"[158] ⎕wi "MaxCol" (MaxCol←MaxCol⌈2)[159] ⎕wi "ColText" 2 (("/⍺/",⎕tcnl,⎕tclf) TEXTREPL "Basis Description")[160] ⎕wi "XSetRowHeight" 1 1 255 1[161] NameList←NameList OVER "ExportBasis"[162] ⎕wi "xHdrHeight" (350⌈250×1)[163] ⎕wi "onXRClick" "0 Win∆F1SSRowMenu ('Basis_ImportExport' 'fmExport.ssParms')"[164] ⎕wi "∆roworcol" "Col"[165] ⎕wi "∆name" NameList[166] ⎕wi "∆limit" (,0 0)[167] ⎕wi "∆mandatory" 0 0[168] ⎕wi "∆helpid" 5289 5290[169] ⎕wi "∆type" "⍺Char⍺Char"[170] ⎕wi "∆valid" "⍺''⍺''"[171] ⎕wi "∆range" "⍺⍺"[172] ⎕wi "onXEndEdit" "(⎕wi 'xRow') Win∆ValidF1SSCell ⎕wi 'xCol' ⋄ 0 0⍴⎕ex 'F1SSEvent' "[173] ⎕wi "onExit" "Win∆ValidF1SSExit 'Basis_ImportExport'"[174] ⎕wi "onExitError" "MDISPLAY ⎕warg ⋄ ⎕wi 'XStartEdit' 0 1 1"[175] ⎕wi "onXCancelEdit" "⎕wi 'AllowArrows' 1 ⋄ ⎕wi 'SetColWidthAuto' 1 1 (⎕wi 'MaxRow') (⎕wi 'MaxCol') 0"[176] "fmExport.ssParms" Win∆F1SSProtectCells "Unlock"[177] ⎕wi "SetSelection" 1 1 1 1[178] [179] "fmExport" ⎕wi "∆multifile" ""[180] "fmExport" ⎕wi "∆singlefile" ""[181] "fmExport" ⎕wi "∆format" ""[182] "fmExport" ⎕wi "∆financial" 0[183] "fmExport" ⎕wi "∆relrules" 0[184] "fmExport" ⎕wi "∆parm" 0[185] "fmExport" ⎕wi "∆decr" 0[186] "fmExport" ⎕wi "∆file" 0[187] "fmExport" ⎕wi "∆codefile" CodeFile[188] "fmExport" ⎕wi "∆inputstype" ""[189] "fmExport" ⎕wi "∆inputsentry" ""[190] "fmExport" ⎕wi "∆savecn" (⍳0)[191] "fmExport" ⎕wi "∆savedesc" ""[192] list←list OVER "fmExport"[193] "fmExport" ⎕wi "∆fieldlist" Fieldlist[194] "fmExport" ⎕wi "∆fieldcontrol" Fieldcontrol[195] childlist←"fmSV" ⎕wi "∆childlist"[196] list←(⊃¯1↑childlist) OVER list[197] childlist[⍴childlist]←⊂list[198] "fmSV" ⎕wi "∆childlist" childlist[199] list←,⎕split list[200] 0 0⍴((∨/¨(⊂".mBasis_ImportExport")⍷¨list)/list) MultiWI "enabled" 1[201] :if 300<fnsize[202]     (fnsize fnsize ".") Win∆ProgressBar "MemberUpdate"[203]     Win∆ProgressBar "Hide"[204] :endif[205] "Init" OpenParameters "Basis_ImportExport"[206] "fmExport.bnBasis_ImportExportHelp" ⎕wi "visible" 1[207] "fmExport.bnBasis_ImportExportQuit" ⎕wi "visible" 1[208] "fmExport.bnBasis_ImportExportSave" ⎕wi "visible" 1[209] "#" ⎕wi "focus" "fmExport.lvSavedParms"[210] :if ~0∊⍴,Error←Win∆Initialise "Basis_ImportExport"[211]     "Quit" EndModule Module[212]     "fmSV" ⎕wi "pointer" 0[213]     0 0⍴"fmExport" ⎕wi "Delete"[214]     :return[215] :endif[216] :if bar_open←commandbar^"Multi"≡""[217]     bar_open←0×"fmExport.mBasis_ImportExportFile.m" Win∆CommandBar "OKHelp"[218] :endif[219] "fmExport" ⎕wi "Paint"[220] "fmSV" ⎕wi "pointer" 11[221] "fmExport" ⎕wi "onWait" "0 0⍴Basis_ImportExport 'Wait' ⋄ 'fmExport' ⎕wi 'modified' 0"[222] 0 0⍴"fmExport" ⎕wi "Wait"[223] 0 0⍴"fmExport" ⎕wi "Delete"[224] "fmSV" ⎕wi "pointer" 0 ∇