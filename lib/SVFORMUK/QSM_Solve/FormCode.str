∇ Container←Form_Make;⎕wself;ControlName;childlist;list;Fieldlist;Fieldcontrol;FrameWidth;Caption;buttonsize;buttonwhere;where;size;alignment;Header;PickList;NameList;value;sortorder;SortList;MaxRow;MaxCol;Parent;level;node;no;nn;NN;x;fnsize;framelist;relTests[1] [2] Fieldlist←Fieldcontrol←list←0 0⍴""[3] "fmSV" ⎕wi "pointer" 13[4] buttonsize←25 65 ⋄ buttonwhere←¯5[5] FormName ⎕wi "caption" ((FormName ⎕wi "caption")," - Quick Scenario Modeller Amortisation Solver")[6] "fmSV" ⎕wi "∆caption" (("fmSV" ⎕wi "∆caption"),⊂("fmSV" ⎕wi "caption"))[7] :if 300<fnsize←1↑⍴⎕cr "Form_Make"[8]     "Generating Form" Win∆ProgressBar "Open"[9]     ("Menu Items:" "Form Controls:") Win∆ProgressBar "SetLabels"[10]     (1 1 "Help About") Win∆ProgressBar "FileUpdate"[11] :endif[12] [13] Container←"∆Dialog"[14] [15] ⎕wself←"fmQSMSolve" ⎕wi "New" "Form" "Hide"[16] ⎕wi "caption" ("fmSV" ⎕wi "caption")[17] ⎕wi "scale" 5[18] ⎕wi "font" ("fmSV" ⎕wi "font")[19] ⎕wi "border" 2 32 64[20] ⎕wi "where" (Win∆CentrePos 0.3 0.7×768 1024×1⌈CharSize÷13 6)[21] ⎕wi "limitwhere" (0.8×¯2↑⎕wi "where")[22] ⎕wi "tooltipwidth" 200[23] ⎕wi "onResize" "AutoResize"[24] ⎕wi "onClose" "ExitSystem ''"[25] ControlName←"fmQSMSolve"[26] relTests←0[27] 0 Menu_Make "fmSV"[28] 1 Menu_Make "fmQSMSolve"[29] "fmQSMSolve" Win∆CutCopyPaste "Build"[30] "fmQSMSolve" ⎕wi "∆helpid" 2282[31] list←list OVER "fmQSMSolve.bnQSM_SolveHelp"[32] ⎕wself←"fmQSMSolve.bnQSM_SolveHelp" ⎕wi "New" "Button"[33] ⎕wi "deferexit" 1[34] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[35] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][36] ⎕wi "∆where" ((x,2)⍴where)[37] ⎕wi "where" (("fmQSMSolve" ⎕wi "size") Win∆Resize ⎕wi "∆where")[38] ⎕wi "tooltip" "SuperVal Help"[39] ⎕wi "onClick" ("fmSV.mQSM_SolveHelp.mContext"⎕wi "onClick")[40] ⎕wi "caption" "Help"[41] :if buttonimage[42]     ⎕wi "imagelist" "fmSV.iStandard"[43]     ⎕wi "imageindex" 12[44] :endif[45] ⎕wi "visible" ¯1[46] ⎕wi "onMouseDown" "∆HelpField←'#' ⎕wi 'focus' "[47] list←list OVER "fmQSMSolve.bnQSM_SolveQuit"[48] ⎕wself←"fmQSMSolve.bnQSM_SolveQuit" ⎕wi "New" "Button"[49] ⎕wi "style" 2[50] ⎕wi "deferexit" 1[51] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[52] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][53] ⎕wi "∆where" ((x,2)⍴where)[54] ⎕wi "where" (("fmQSMSolve" ⎕wi "size") Win∆Resize ⎕wi "∆where")[55] ⎕wi "tooltip" "Quit and Return"[56] ⎕wi "onClick" ("fmSV.mQSM_SolveFile.mQuit"⎕wi "onClick")[57] ⎕wi "caption" "Quit"[58] ⎕wi "∆helpid" 5682[59] ⎕wi "order" .5[60] ⎕wi "visible" ¯1[61] ControlName ⎕wi "∆quitbutton" "fmQSMSolve.bnQSM_SolveQuit"[62] list←list OVER "fmQSMSolve.bnQSM_SolveSave"[63] ⎕wself←"fmQSMSolve.bnQSM_SolveSave" ⎕wi "New" "Button"[64] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[65] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][66] ⎕wi "∆where" ((x,2)⍴where)[67] ⎕wi "where" (("fmQSMSolve" ⎕wi "size") Win∆Resize ⎕wi "∆where")[68] ⎕wi "tooltip" "Save Parameters"[69] ⎕wi "onClick" ("fmSV.mQSM_SolveFile.mSave"⎕wi "onClick")[70] ⎕wi "caption" "Save"[71] :if buttonimage[72]     ⎕wi "imagelist" "fmSV.iStandard"[73]     ⎕wi "imageindex" 9[74] :endif[75] ⎕wi "∆helpid" 5683[76] ⎕wi "enabled" 0[77] ⎕wi "order" .5[78] ⎕wi "visible" ¯1[79] "fmQSMSolve" ⎕wi "onModified" "('QSM_Solve' 'fmQSMSolve.bnQSM_SolveSave') Win∆SaveEnabled (0≠⎕warg[1])"[80] list←list OVER "fmQSMSolve.bnQSM_SolveSaveAs"[81] ⎕wself←"fmQSMSolve.bnQSM_SolveSaveAs" ⎕wi "New" "Button"[82] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[83] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][84] ⎕wi "∆where" ((x,2)⍴where)[85] ⎕wi "where" (("fmQSMSolve" ⎕wi "size") Win∆Resize ⎕wi "∆where")[86] ⎕wi "tooltip" "Save Parameters As ..."[87] ⎕wi "onClick" ("fmSV.mQSM_SolveFile.mSaveAs"⎕wi "onClick")[88] ⎕wi "caption" "Save As"[89] ⎕wi "∆helpid" 5684[90] ⎕wi "order" .5[91] ⎕wi "visible" ¯1[92] list←list OVER "fmQSMSolve.bnQSM_SolveRun"[93] ⎕wself←"fmQSMSolve.bnQSM_SolveRun" ⎕wi "New" "Button"[94] ⎕wi "style" 1[95] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[96] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][97] ⎕wi "∆where" ((x,2)⍴where)[98] ⎕wi "where" (("fmQSMSolve" ⎕wi "size") Win∆Resize ⎕wi "∆where")[99] ⎕wi "tooltip" "Save Parameters and Run Quick Scenario Modeller Amortisation Solver"[100] ⎕wi "onClick" ("fmSV.mQSM_SolveFile.mRun"⎕wi "onClick")[101] ⎕wi "caption" "Run"[102] :if buttonimage[103]     ⎕wi "imagelist" "fmSV.iStandard"[104]     ⎕wi "imageindex" 33[105] :endif[106] ⎕wi "∆helpid" 5685[107] ⎕wi "order" .5[108] ⎕wi "visible" ¯1[109] [110] ⎕wself←"fmQSMSolve.cbamortselect" ⎕wi "New" "Combo"[111] Fieldlist←Fieldlist OVER "fmQSMSolve.cbamortselect"[112] Fieldcontrol←Fieldcontrol OVER "Combo"[113] ⎕wi "∆name" "amortselect"[114] ⎕wi "∆type" "Combo"[115] ⎕wi "∆mandatory" 1[116] ⎕wi "∆helpid" 5686[117] ⎕wi "tooltip" "Select the Amortisation(s) to be adjusted"[118] ⎕wi "style" 16 128 256 2[119] ⎕wi "∆where" (2 2⍴0.35 0 0.25 0)[120] ⎕wi "where" (("fmQSMSolve" ⎕wi "size") Win∆Resize (2 2⍴0.35 0 0.25 0))[121] PickList←⍙POPUPSdict ReadDictFile "Amorts"[122] PickList←⊃m2n 1 0↓PickList[123] ⎕wi "list" PickList[124] ⎕wi "extent" (150,(¯10+6×¯1↑CharSize)+¯1↑Win∆TextSize ((0,⎕wi "limit")⌈⍴PickList)↑PickList)[125] ⎕wi "onClick" "0 0⍴(⊂⎕wi 'name') QSM_Solve 'Change' "[126] [127] ⎕wself←"fmQSMSolve.llamortselect" ⎕wi "New" "Label"[128] ⎕wi "scale" 5[129] ⎕wi "style" 2[130] ⎕wi "extent" (↑⎕wi "Draw" ("?text" (("⍺",⎕tcnl) char_replace "Amortisations⍺Included")))[131] ⎕wi "caption" (("⍺",⎕tcnl) char_replace "Amortisations⍺Included")[132] where←4↑,"fmQSMSolve.cbamortselect" ⎕wi "∆where"[133] size←1↑"fmQSMSolve.cbamortselect" ⎕wi "extent"[134] size←¯3⌈0.5×(1↑⎕wi "extent")-size[135] x←0.5×⍴where←Win∆Calcwhere where-0,size,0,10+¯1↑⎕wi "extent"[136] ⎕wi "∆where" ((x,2)⍴where)[137] ⎕wi "where" (("fmQSMSolve" ⎕wi "size") Win∆Resize ⎕wi "∆where")[138] [139] ⎕wself←"fmQSMSolve.cbamortmethod" ⎕wi "New" "Combo"[140] Fieldlist←Fieldlist OVER "fmQSMSolve.cbamortmethod"[141] Fieldcontrol←Fieldcontrol OVER "Combo"[142] ⎕wi "∆name" "amortmethod"[143] ⎕wi "∆type" "Combo"[144] ⎕wi "∆mandatory" 1[145] ⎕wi "∆helpid" 5687[146] ⎕wi "tooltip" "Select how the Amortisation(s) are to be adjusted"[147] ⎕wi "style" 16 128 256 2[148] ⎕wi "∆where" (2 2⍴0.35 0 0.5 0)[149] ⎕wi "where" (("fmQSMSolve" ⎕wi "size") Win∆Resize (2 2⍴0.35 0 0.5 0))[150] PickList←GetAmortMethod[151] ⎕wi "∆update" "GetAmortMethod"[152] PickList←⊃m2n 1 0↓PickList[153] ⎕wi "list" PickList[154] ⎕wi "extent" (150,(¯10+6×¯1↑CharSize)+¯1↑Win∆TextSize ((0,⎕wi "limit")⌈⍴PickList)↑PickList)[155] ⎕wi "onClick" "0 0⍴(⊂⎕wi 'name') QSM_Solve 'Change' "[156] [157] ⎕wself←"fmQSMSolve.llamortmethod" ⎕wi "New" "Label"[158] ⎕wi "scale" 5[159] ⎕wi "style" 2[160] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Changing"))[161] ⎕wi "caption" "Changing"[162] where←4↑,"fmQSMSolve.cbamortmethod" ⎕wi "∆where"[163] x←0.5×⍴where←Win∆Calcwhere where-0 ¯3 0,10+¯1↑⎕wi "extent"[164] ⎕wi "∆where" ((x,2)⍴where)[165] ⎕wi "where" (("fmQSMSolve" ⎕wi "size") Win∆Resize ⎕wi "∆where")[166] [167] ⎕wself←"fmQSMSolve.cbamortshare" ⎕wi "New" "Combo"[168] Fieldlist←Fieldlist OVER "fmQSMSolve.cbamortshare"[169] Fieldcontrol←Fieldcontrol OVER "Combo"[170] ⎕wi "∆name" "amortshare"[171] ⎕wi "∆type" "Combo"[172] ⎕wi "∆mandatory" 1[173] ⎕wi "∆helpid" 5688[174] ⎕wi "tooltip" "Indicate Amortisation allocated to each Amortisation"[175] ⎕wi "style" 16 128 256 2[176] ⎕wi "∆where" (2 2⍴0.35 0 0.75 0)[177] ⎕wi "where" (("fmQSMSolve" ⎕wi "size") Win∆Resize (2 2⍴0.35 0 0.75 0))[178] PickList←⍙POPUPSdict ReadDictFile "AmortShare"[179] PickList←⊃m2n 1 0↓PickList[180] ⎕wi "list" PickList[181] ⎕wi "extent" (150,(¯10+6×¯1↑CharSize)+¯1↑Win∆TextSize ((0,⎕wi "limit")⌈⍴PickList)↑PickList)[182] ⎕wi "onClick" "0 0⍴(⊂⎕wi 'name') QSM_Solve 'Change' "[183] [184] ⎕wself←"fmQSMSolve.llamortshare" ⎕wi "New" "Label"[185] ⎕wi "scale" 5[186] ⎕wi "style" 2[187] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Shared"))[188] ⎕wi "caption" "Shared"[189] where←4↑,"fmQSMSolve.cbamortshare" ⎕wi "∆where"[190] x←0.5×⍴where←Win∆Calcwhere where-0 ¯3 0,10+¯1↑⎕wi "extent"[191] ⎕wi "∆where" ((x,2)⍴where)[192] ⎕wi "where" (("fmQSMSolve" ⎕wi "size") Win∆Resize ⎕wi "∆where")[193] [194] ⎕wself←"fmQSMSolve.lParmDesc" ⎕wi "New" "Label"[195] ⎕wi "scale" 5[196] ⎕wi "extent" (CharSize×¯2↑1,40)[197] ⎕wi "style" 32[198] ⎕wi "caption" " "[199] ⎕wi "∆where" (2 2⍴0.85 0 0.02 0)[200] ⎕wi "where" (("fmQSMSolve" ⎕wi "size") Win∆Resize (2 2⍴0.85 0 0.02 0))[201] [202] "fmQSMSolve" ⎕wi "∆multifile" ""[203] "fmQSMSolve" ⎕wi "∆singlefile" ""[204] "fmQSMSolve" ⎕wi "∆format" ""[205] "fmQSMSolve" ⎕wi "∆financial" 0[206] "fmQSMSolve" ⎕wi "∆relrules" 0[207] "fmQSMSolve" ⎕wi "∆parm" 0[208] "fmQSMSolve" ⎕wi "∆decr" 0[209] "fmQSMSolve" ⎕wi "∆file" 0[210] "fmQSMSolve" ⎕wi "∆codefile" CodeFile[211] "fmQSMSolve" ⎕wi "∆inputstype" "QSMFile"[212] "fmQSMSolve" ⎕wi "∆inputsentry" "Multi"[213] "fmQSMSolve" ⎕wi "∆savecn" (⍳0)[214] "fmQSMSolve" ⎕wi "∆savedesc" ""[215] list←list OVER "fmQSMSolve"[216] "fmQSMSolve" ⎕wi "∆fieldlist" Fieldlist[217] "fmQSMSolve" ⎕wi "∆fieldcontrol" Fieldcontrol[218] childlist←"fmSV" ⎕wi "∆childlist"[219] list←(⊃¯1↑childlist) OVER list[220] childlist[⍴childlist]←⊂list[221] "fmSV" ⎕wi "∆childlist" childlist[222] list←,⎕split list[223] 0 0⍴((∨/¨(⊂".mQSM_Solve")⍷¨list)/list) MultiWI "enabled" 1[224] :if 300<fnsize[225]     (fnsize fnsize ".") Win∆ProgressBar "MemberUpdate"[226]     Win∆ProgressBar "Hide"[227] :endif[228] "Init" OpenParameters "QSM_Solve"[229] "fmQSMSolve.bnQSM_SolveHelp" ⎕wi "visible" 1[230] "fmQSMSolve.bnQSM_SolveQuit" ⎕wi "visible" 1[231] "fmQSMSolve.bnQSM_SolveSave" ⎕wi "visible" 1[232] "fmQSMSolve.bnQSM_SolveSaveAs" ⎕wi "visible" 1[233] "fmQSMSolve.bnQSM_SolveRun" ⎕wi "visible" 1[234] "#" ⎕wi "focus" "fmQSMSolve.cbamortselect"[235] :if ~0∊⍴,Error←Win∆Initialise "QSM_Solve"[236]     "Quit" EndModule Module[237]     "fmSV" ⎕wi "pointer" 0[238]     0 0⍴"fmQSMSolve" ⎕wi "Delete"[239]     :return[240] :endif[241] :if bar_open←commandbar^"Multi"≡"Multi"[242]     bar_open←0×"fmQSMSolve.mQSM_SolveFile.m" Win∆CommandBar "RunAsHelp"[243] :endif[244] "fmQSMSolve" ⎕wi "Paint"[245] "fmSV" ⎕wi "pointer" 11[246] "fmQSMSolve" ⎕wi "onWait" "0 0⍴QSM_Solve 'Wait' ⋄ 'fmQSMSolve' ⎕wi 'modified' 0"[247] 0 0⍴"fmQSMSolve" ⎕wi "Wait"[248] 0 0⍴"fmQSMSolve" ⎕wi "Delete"[249] "fmSV" ⎕wi "pointer" 0 ∇