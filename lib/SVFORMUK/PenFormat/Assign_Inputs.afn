    ∇ Assign_Inputs modified;PickList;list;n;NameList;value;MaxRow;MaxCol;selection;nn;no;package;warnings;var;control;row[1]   warnings←0 0⍴""[2]   package←pack ⍙VALUESdict ReadDictFile "PenFormat" "" "Names"[3]   [4]   :if 1=ControlName ⎕wi "∆relrules"[5]       :for control :in nub FormFields at "control"[6]           "PenFormat" ParmColor control "" ⍬ 0[7]       :endfor[8]   :endif[9]   :if (⊂"pgCurrent")∊"fmSV.sPenFormat" ⎕wi "pages"[10]  "fmSV.sPenFormat.pgCurrent.edRECL" ⎕wi "text" (DLTB RECL)[11]  PickList←"fmSV.sPenFormat.pgCurrent.cbpenfreq" ⎕wi "list"[12]  selection←PickList ExactTLU DLTB penfreq[13]  :if mt selection[14]      :if ~mt DLTB penfreq[15]          warnings←warnings OVER "Previous Selection for 'Pension Frequency' is no longer available"[16]      :endif[17]      modified←⌈/modified,1[18]  :endif[19]  "fmSV.sPenFormat.pgCurrent.cbpenfreq" ⎕wi "value" (¯1↑1,selection)[20]  :endif[21]  :if (⊂"pgPrevious")∊"fmSV.sPenFormat" ⎕wi "pages"[22]  "fmSV.sPenFormat.pgPrevious.edpRECL" ⎕wi "text" (DLTB pRECL)[23]  PickList←"fmSV.sPenFormat.pgPrevious.cbppenfreq" ⎕wi "list"[24]  selection←PickList ExactTLU DLTB ppenfreq[25]  :if mt selection[26]      :if ~mt DLTB ppenfreq[27]          warnings←warnings OVER "Previous Selection for 'Pension Frequency' is no longer available"[28]      :endif[29]      modified←⌈/modified,1[30]  :endif[31]  "fmSV.sPenFormat.pgPrevious.cbppenfreq" ⎕wi "value" (¯1↑1,selection)[32]  :endif[33]  "fmSV.sPenFormat.pgCurrent.edfNOM1" ⎕wi "text" (DLTB fNOM[1;])[34]  "fmSV.sPenFormat.pgCurrent.edfNOM2" ⎕wi "text" (DLTB fNOM[2;])[35]  "fmSV.sPenFormat.pgPrevious.edpfNOM1" ⎕wi "text" (DLTB pfNOM[1;])[36]  "fmSV.sPenFormat.pgPrevious.edpfNOM2" ⎕wi "text" (DLTB pfNOM[2;])[37]  "fmSV.sPenFormat.pgCurrent.edfNAME1" ⎕wi "text" (DLTB fNAME[1;])[38]  "fmSV.sPenFormat.pgCurrent.edfNAME2" ⎕wi "text" (DLTB fNAME[2;])[39]  "fmSV.sPenFormat.pgPrevious.edpfNAME1" ⎕wi "text" (DLTB pfNAME[1;])[40]  "fmSV.sPenFormat.pgPrevious.edpfNAME2" ⎕wi "text" (DLTB pfNAME[2;])[41]  "fmSV.sPenFormat.pgCurrent.edfSEX1" ⎕wi "text" (DLTB fSEX[1;])[42]  "fmSV.sPenFormat.pgCurrent.edfSEX2" ⎕wi "text" (DLTB fSEX[2;])[43]  "fmSV.sPenFormat.pgPrevious.edpfSEX1" ⎕wi "text" (DLTB pfSEX[1;])[44]  "fmSV.sPenFormat.pgPrevious.edpfSEX2" ⎕wi "text" (DLTB pfSEX[2;])[45]  "fmSV.sPenFormat.pgCurrent.edfDOB1" ⎕wi "text" (DLTB fDOB[1;])[46]  "fmSV.sPenFormat.pgCurrent.edfDOB2" ⎕wi "text" (DLTB fDOB[2;])[47]  "fmSV.sPenFormat.pgCurrent.eddfDOB" ⎕wi "text" (DLTB dfDOB)[48]  "fmSV.sPenFormat.pgPrevious.edpfDOB1" ⎕wi "text" (DLTB pfDOB[1;])[49]  "fmSV.sPenFormat.pgPrevious.edpfDOB2" ⎕wi "text" (DLTB pfDOB[2;])[50]  "fmSV.sPenFormat.pgPrevious.edpdfDOB" ⎕wi "text" (DLTB pdfDOB)[51]  "fmSV.sPenFormat.pgCurrent.edfMEMORSP1" ⎕wi "text" (DLTB fMEMORSP[1;])[52]  "fmSV.sPenFormat.pgCurrent.edfMEMORSP2" ⎕wi "text" (DLTB fMEMORSP[2;])[53]  "fmSV.sPenFormat.pgPrevious.edpfMEMORSP1" ⎕wi "text" (DLTB pfMEMORSP[1;])[54]  "fmSV.sPenFormat.pgPrevious.edpfMEMORSP2" ⎕wi "text" (DLTB pfMEMORSP[2;])[55]  "fmSV.sPenFormat.pgCurrent.edfLD1" ⎕wi "text" (DLTB fLD[1;])[56]  "fmSV.sPenFormat.pgCurrent.edfLD2" ⎕wi "text" (DLTB fLD[2;])[57]  "fmSV.sPenFormat.pgCurrent.eddfLD" ⎕wi "text" (DLTB dfLD)[58]  "fmSV.sPenFormat.pgPrevious.edpfLD1" ⎕wi "text" (DLTB pfLD[1;])[59]  "fmSV.sPenFormat.pgPrevious.edpfLD2" ⎕wi "text" (DLTB pfLD[2;])[60]  "fmSV.sPenFormat.pgPrevious.edpdfLD" ⎕wi "text" (DLTB pdfLD)[61]  "fmSV.sPenFormat.pgCurrent.edfCAT1" ⎕wi "text" (DLTB fCAT[1;])[62]  "fmSV.sPenFormat.pgCurrent.edfCAT2" ⎕wi "text" (DLTB fCAT[2;])[63]  "fmSV.sPenFormat.pgPrevious.edpfCAT1" ⎕wi "text" (DLTB pfCAT[1;])[64]  "fmSV.sPenFormat.pgPrevious.edpfCAT2" ⎕wi "text" (DLTB pfCAT[2;])[65]  "fmSV.sPenFormat.pgCurrent.edfDPC1" ⎕wi "text" (DLTB fDPC[1;])[66]  "fmSV.sPenFormat.pgCurrent.edfDPC2" ⎕wi "text" (DLTB fDPC[2;])[67]  "fmSV.sPenFormat.pgCurrent.eddfDPC" ⎕wi "text" (DLTB dfDPC)[68]  "fmSV.sPenFormat.pgPrevious.edpfDPC1" ⎕wi "text" (DLTB pfDPC[1;])[69]  "fmSV.sPenFormat.pgPrevious.edpfDPC2" ⎕wi "text" (DLTB pfDPC[2;])[70]  "fmSV.sPenFormat.pgPrevious.edpdfDPC" ⎕wi "text" (DLTB pdfDPC)[71]  "fmSV.sPenFormat.pgCurrent.edfTOP1" ⎕wi "text" (DLTB fTOP[1;])[72]  "fmSV.sPenFormat.pgCurrent.edfTOP2" ⎕wi "text" (DLTB fTOP[2;])[73]  "fmSV.sPenFormat.pgPrevious.edpfTOP1" ⎕wi "text" (DLTB pfTOP[1;])[74]  "fmSV.sPenFormat.pgPrevious.edpfTOP2" ⎕wi "text" (DLTB pfTOP[2;])[75]  "fmSV.sPenFormat.pgCurrent.edfSDOB1" ⎕wi "text" (DLTB fSDOB[1;])[76]  "fmSV.sPenFormat.pgCurrent.edfSDOB2" ⎕wi "text" (DLTB fSDOB[2;])[77]  "fmSV.sPenFormat.pgCurrent.eddfSDOB" ⎕wi "text" (DLTB dfSDOB)[78]  "fmSV.sPenFormat.pgPrevious.edpfSDOB1" ⎕wi "text" (DLTB pfSDOB[1;])[79]  "fmSV.sPenFormat.pgPrevious.edpfSDOB2" ⎕wi "text" (DLTB pfSDOB[2;])[80]  "fmSV.sPenFormat.pgPrevious.edpdfSDOB" ⎕wi "text" (DLTB pdfSDOB)[81]  "fmSV.sPenFormat.pgCurrent.edfMS1" ⎕wi "text" (DLTB fMS[1;])[82]  "fmSV.sPenFormat.pgCurrent.edfMS2" ⎕wi "text" (DLTB fMS[2;])[83]  "fmSV.sPenFormat.pgPrevious.edpfMS1" ⎕wi "text" (DLTB pfMS[1;])[84]  "fmSV.sPenFormat.pgPrevious.edpfMS2" ⎕wi "text" (DLTB pfMS[2;])[85]  "fmSV.sPenFormat.pgCurrent.edfGMP01" ⎕wi "text" (DLTB fGMP0[1;])[86]  "fmSV.sPenFormat.pgCurrent.edfGMP02" ⎕wi "text" (DLTB fGMP0[2;])[87]  "fmSV.sPenFormat.pgPrevious.edpfGMP01" ⎕wi "text" (DLTB pfGMP0[1;])[88]  "fmSV.sPenFormat.pgPrevious.edpfGMP02" ⎕wi "text" (DLTB pfGMP0[2;])[89]  "fmSV.sPenFormat.pgCurrent.edfGMPE01" ⎕wi "text" (DLTB fGMPE0[1;])[90]  "fmSV.sPenFormat.pgCurrent.edfGMPE02" ⎕wi "text" (DLTB fGMPE0[2;])[91]  "fmSV.sPenFormat.pgPrevious.edpfGMPE01" ⎕wi "text" (DLTB pfGMPE0[1;])[92]  "fmSV.sPenFormat.pgPrevious.edpfGMPE02" ⎕wi "text" (DLTB pfGMPE0[2;])[93]  "fmSV.sPenFormat.pgCurrent.edfDOT1" ⎕wi "text" (DLTB fDOT[1;])[94]  "fmSV.sPenFormat.pgCurrent.edfDOT2" ⎕wi "text" (DLTB fDOT[2;])[95]  "fmSV.sPenFormat.pgCurrent.eddfDOT" ⎕wi "text" (DLTB dfDOT)[96]  "fmSV.sPenFormat.pgPrevious.edpfDOT1" ⎕wi "text" (DLTB pfDOT[1;])[97]  "fmSV.sPenFormat.pgPrevious.edpfDOT2" ⎕wi "text" (DLTB pfDOT[2;])[98]  "fmSV.sPenFormat.pgPrevious.edpdfDOT" ⎕wi "text" (DLTB pdfDOT)[99]  "fmSV.sPenFormat.pgCurrent.edfMOT1" ⎕wi "text" (DLTB fMOT[1;])[100] "fmSV.sPenFormat.pgCurrent.edfMOT2" ⎕wi "text" (DLTB fMOT[2;])[101] "fmSV.sPenFormat.pgPrevious.edpfMOT1" ⎕wi "text" (DLTB pfMOT[1;])[102] "fmSV.sPenFormat.pgPrevious.edpfMOT2" ⎕wi "text" (DLTB pfMOT[2;])[103] "fmSV.sPenFormat.pgCurrent.edfBOT1" ⎕wi "text" (DLTB fBOT[1;])[104] "fmSV.sPenFormat.pgCurrent.edfBOT2" ⎕wi "text" (DLTB fBOT[2;])[105] "fmSV.sPenFormat.pgPrevious.edpfBOT1" ⎕wi "text" (DLTB pfBOT[1;])[106] "fmSV.sPenFormat.pgPrevious.edpfBOT2" ⎕wi "text" (DLTB pfBOT[2;])[107] "fmSV.sPenFormat.pgCurrent.edfTPP1" ⎕wi "text" (DLTB fTPP[1;])[108] "fmSV.sPenFormat.pgCurrent.edfTPP2" ⎕wi "text" (DLTB fTPP[2;])[109] "fmSV.sPenFormat.pgPrevious.edpfTPP1" ⎕wi "text" (DLTB pfTPP[1;])[110] "fmSV.sPenFormat.pgPrevious.edpfTPP2" ⎕wi "text" (DLTB pfTPP[2;])[111] :if (⊂"pgNon_Standard")∊"fmSV.sPenFormat" ⎕wi "pages"[112] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "XClearRange" 1 1 ("fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "MaxRow") ("fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "MaxCol") 3[113] MaxRow←MaxCol←1[114] value←(1 15⌈⍴value)↑value←MATRIX TotNumVars[115] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "MaxCol"[116] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[117] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,1) (m2n ⎕av[209 151] REPL value)[118] value←(1 4⌈⍴value)↑value←MATRIX TotNumFrom[119] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "MaxCol"[120] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[121] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,2) (m2n ⎕av[209 151] REPL value)[122] value←(1 4⌈⍴value)↑value←MATRIX TotNumTo[123] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "MaxCol"[124] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[125] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,3) (m2n ⎕av[209 151] REPL value)[126] value←(1 4⌈⍴value)↑value←MATRIX pTotNumFrom[127] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "MaxCol"[128] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[129] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,4) (m2n ⎕av[209 151] REPL value)[130] value←(1 4⌈⍴value)↑value←MATRIX pTotNumTo[131] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "MaxCol"[132] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[133] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,5) (m2n ⎕av[209 151] REPL value)[134] value←(1 15⌈⍴value)↑value←MATRIX TotNumDesc[135] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "MaxCol"[136] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[137] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,6) (m2n ⎕av[209 151] REPL value)[138] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "SetColWidthAuto" 1 1 MaxRow MaxCol 0[139] (MaxRow MaxCol)←"fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "xGetActiveCell" 0 0[140] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "xSetActiveCell" (MaxRow⌊"fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "xMaxRow") (MaxCol⌊"fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "xMaxCol")[141] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "xmodified" 0[142] "fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS" ⎕wi "onXModified" "('fmSV.sPenFormat' (Win∆Parent 'fmSV.sPenFormat')) MultiWI 'modified' ('fmSV.sPenFormat.pgNon_Standard.ssTotNumNonS' ⎕wi 'xmodified')"[143] "fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "XClearRange" 1 1 ("fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "MaxRow") ("fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "MaxCol") 3[144] MaxRow←MaxCol←1[145] value←(1 15⌈⍴value)↑value←MATRIX CharVars[146] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "MaxCol"[147] "fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[148] "fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,1) (m2n ⎕av[209 151] REPL value)[149] value←(1 4⌈⍴value)↑value←MATRIX CharFrom[150] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "MaxCol"[151] "fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[152] "fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,2) (m2n ⎕av[209 151] REPL value)[153] value←(1 4⌈⍴value)↑value←MATRIX CharTo[154] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "MaxCol"[155] "fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[156] "fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,3) (m2n ⎕av[209 151] REPL value)[157] value←(1 15⌈⍴value)↑value←MATRIX CharDesc[158] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "MaxCol"[159] "fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[160] "fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,4) (m2n ⎕av[209 151] REPL value)[161] "fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "SetColWidthAuto" 1 1 MaxRow MaxCol 0[162] (MaxRow MaxCol)←"fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "xGetActiveCell" 0 0[163] "fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "xSetActiveCell" (MaxRow⌊"fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "xMaxRow") (MaxCol⌊"fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "xMaxCol")[164] "fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "xmodified" 0[165] "fmSV.sPenFormat.pgNon_Standard.ssCharNonS" ⎕wi "onXModified" "('fmSV.sPenFormat' (Win∆Parent 'fmSV.sPenFormat')) MultiWI 'modified' ('fmSV.sPenFormat.pgNon_Standard.ssCharNonS' ⎕wi 'xmodified')"[166] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "XClearRange" 1 1 ("fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "MaxRow") ("fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "MaxCol") 3[167] MaxRow←MaxCol←1[168] value←(1 15⌈⍴value)↑value←MATRIX DateVars[169] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "MaxCol"[170] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[171] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,1) (m2n ⎕av[209 151] REPL value)[172] value←(1 4⌈⍴value)↑value←MATRIX DateFrom[173] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "MaxCol"[174] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[175] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,2) (m2n ⎕av[209 151] REPL value)[176] value←(1 4⌈⍴value)↑value←MATRIX DateTo[177] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "MaxCol"[178] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[179] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,3) (m2n ⎕av[209 151] REPL value)[180] value←(1 10⌈⍴value)↑value←MATRIX DateFmt[181] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "MaxCol"[182] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[183] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,4) (m2n ⎕av[209 151] REPL value)[184] value←(1 15⌈⍴value)↑value←MATRIX DateDesc[185] MaxCol←"fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "MaxCol"[186] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "MaxRow" (MaxRow←MaxRow⌈1↑⍴value)[187] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "TextRC[]" (⎕mix ,(⍳1↑⍴value)∘.,5) (m2n ⎕av[209 151] REPL value)[188] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "SetColWidthAuto" 1 1 MaxRow MaxCol 0[189] (MaxRow MaxCol)←"fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "xGetActiveCell" 0 0[190] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "xSetActiveCell" (MaxRow⌊"fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "xMaxRow") (MaxCol⌊"fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "xMaxCol")[191] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "xmodified" 0[192] "fmSV.sPenFormat.pgNon_Standard.ssDateNonS" ⎕wi "onXModified" "('fmSV.sPenFormat' (Win∆Parent 'fmSV.sPenFormat')) MultiWI 'modified' ('fmSV.sPenFormat.pgNon_Standard.ssDateNonS' ⎕wi 'xmodified')"[193] :endif[194] :if (⊂"pgValidation")∊"fmSV.sPenFormat" ⎕wi "pages"[195] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "XClearRange" 1 1 ("fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "MaxRow") ("fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "MaxCol") 3[196] MaxRow←MaxCol←1[197] value←(1 10⌈⍴value)↑value←MATRIX Category[198] MaxRow←"fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "MaxRow"[199] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "MaxCol" (MaxCol←MaxCol⌈1↑⍴value)[200] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "TextRC[]" (⎕mix 1∘.,⍳1↑⍴value) (m2n ⎕av[209 151] REPL value)[201] value←(1 10⌈⍴value)↑value←MATRIX MinAgeM[202] MaxRow←"fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "MaxRow"[203] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "MaxCol" (MaxCol←MaxCol⌈1↑⍴value)[204] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "TextRC[]" (⎕mix 2∘.,⍳1↑⍴value) (m2n ⎕av[209 151] REPL value)[205] value←(1 10⌈⍴value)↑value←MATRIX MaxAgeM[206] MaxRow←"fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "MaxRow"[207] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "MaxCol" (MaxCol←MaxCol⌈1↑⍴value)[208] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "TextRC[]" (⎕mix 3∘.,⍳1↑⍴value) (m2n ⎕av[209 151] REPL value)[209] value←(1 10⌈⍴value)↑value←MATRIX MinAgeF[210] MaxRow←"fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "MaxRow"[211] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "MaxCol" (MaxCol←MaxCol⌈1↑⍴value)[212] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "TextRC[]" (⎕mix 4∘.,⍳1↑⍴value) (m2n ⎕av[209 151] REPL value)[213] value←(1 10⌈⍴value)↑value←MATRIX MaxAgeF[214] MaxRow←"fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "MaxRow"[215] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "MaxCol" (MaxCol←MaxCol⌈1↑⍴value)[216] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "TextRC[]" (⎕mix 5∘.,⍳1↑⍴value) (m2n ⎕av[209 151] REPL value)[217] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "SetColWidthAuto" 1 1 MaxRow MaxCol 0[218] (MaxRow MaxCol)←"fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "xGetActiveCell" 0 0[219] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "xSetActiveCell" (MaxRow⌊"fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "xMaxRow") (MaxCol⌊"fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "xMaxCol")[220] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "xmodified" 0[221] "fmSV.sPenFormat.pgValidation.ssValidation" ⎕wi "onXModified" "('fmSV.sPenFormat' (Win∆Parent 'fmSV.sPenFormat')) MultiWI 'modified' ('fmSV.sPenFormat.pgValidation.ssValidation' ⎕wi 'xmodified')"[222] :endif[223] :if 1=ControlName ⎕wi "∆relrules" ⋄ :andif ×rowsIn Comment_PenFormat[224]     :for var :in spin Comment_PenFormat at "variable" "row" ⋄ (var row)←var[225]         "PenFormat" ParmColor ((FormFields for "variable" var) at "control"),var row 1[226]     :endfor[227] :endif[228] :if ~0∊⍴,warnings[229]     MDISPLAY DLTMB warnings,⎕tcnl[230]     Win∆AssignVars "fmSV.sPenFormat"[231] :endif[232] :if 0=modified←modified⌈~package≡pack ⍙VALUESdict ReadDictFile "PenFormat" "" "Names"[233]     "fmSV.sPenFormat" ⎕wi "modified" 0[234] :endif    ∇