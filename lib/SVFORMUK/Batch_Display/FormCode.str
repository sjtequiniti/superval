∇ Container←Form_Make;⎕wself;ControlName;childlist;list;Fieldlist;Fieldcontrol;FrameWidth;Caption;buttonsize;buttonwhere;where;size;alignment;Header;PickList;NameList;value;sortorder;SortList;MaxRow;MaxCol;Parent;level;node;no;nn;NN;x;fnsize;framelist;relTests[1] [2] Fieldlist←Fieldcontrol←list←0 0⍴""[3] "fmSV" ⎕wi "pointer" 13[4] buttonsize←25 65 ⋄ buttonwhere←¯5[5] FormName ⎕wi "caption" ((FormName ⎕wi "caption")," - Batching/Running of Valuation Runs")[6] "fmSV" ⎕wi "∆caption" (("fmSV" ⎕wi "∆caption"),⊂("fmSV" ⎕wi "caption"))[7] :if 300<fnsize←1↑⍴⎕cr "Form_Make"[8]     "Generating Form" Win∆ProgressBar "Open"[9]     ("Menu Items:" "Form Controls:") Win∆ProgressBar "SetLabels"[10]     (1 1 "Help About") Win∆ProgressBar "FileUpdate"[11] :endif[12] [13] Container←"∆Dialog"[14] [15] ⎕wself←"fmBatchDisplay" ⎕wi "New" "Form" "Hide"[16] ⎕wi "caption" ("fmSV" ⎕wi "caption")[17] ⎕wi "scale" 5[18] ⎕wi "font" ("fmSV" ⎕wi "font")[19] ⎕wi "border" 2 32 64[20] ⎕wi "where" (Win∆CentrePos 1.5 1.5 ×768 1024×1⌈CharSize÷13 6)[21] ⎕wi "limitwhere" (0.8×¯2↑⎕wi "where")[22] ⎕wi "tooltipwidth" 200[23] ⎕wi "onResize" "AutoResize"[24] ⎕wi "onClose" "ExitSystem ''"[25] ControlName←"fmBatchDisplay"[26] relTests←0[27] 0 Menu_Make "fmSV"[28] 1 Menu_Make "fmBatchDisplay"[29] "fmBatchDisplay" Win∆CutCopyPaste "Build"[30] "fmBatchDisplay" ⎕wi "∆helpid" 2257[31] list←list OVER "fmBatchDisplay.bnBatch_DisplayHelp"[32] ⎕wself←"fmBatchDisplay.bnBatch_DisplayHelp" ⎕wi "New" "Button"[33] ⎕wi "deferexit" 1[34] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[35] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][36] ⎕wi "∆where" ((x,2)⍴where)[37] ⎕wi "where" (("fmBatchDisplay" ⎕wi "size") Win∆Resize ⎕wi "∆where")[38] ⎕wi "tooltip" "SuperVal Help"[39] ⎕wi "onClick" ("fmSV.mBatch_DisplayHelp.mContext"⎕wi "onClick")[40] ⎕wi "caption" "Help"[41] :if buttonimage[42]     ⎕wi "imagelist" "fmSV.iStandard"[43]     ⎕wi "imageindex" 12[44] :endif[45] ⎕wi "visible" ¯1[46] ⎕wi "onMouseDown" "∆HelpField←'#' ⎕wi 'focus' "[47] list←list OVER "fmBatchDisplay.bnBatch_DisplayQuit"[48] ⎕wself←"fmBatchDisplay.bnBatch_DisplayQuit" ⎕wi "New" "Button"[49] ⎕wi "style" 2[50] ⎕wi "deferexit" 1[51] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[52] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][53] ⎕wi "∆where" ((x,2)⍴where)[54] ⎕wi "where" (("fmBatchDisplay" ⎕wi "size") Win∆Resize ⎕wi "∆where")[55] ⎕wi "tooltip" "Quit and Return"[56] ⎕wi "onClick" ("fmSV.mBatch_DisplayFile.mQuit"⎕wi "onClick")[57] ⎕wi "caption" "Quit"[58] ⎕wi "∆helpid" 5372[59] ⎕wi "order" .5[60] ⎕wi "visible" ¯1[61] ControlName ⎕wi "∆quitbutton" "fmBatchDisplay.bnBatch_DisplayQuit"[62] list←list OVER "fmBatchDisplay.bnBatch_DisplaySave"[63] ⎕wself←"fmBatchDisplay.bnBatch_DisplaySave" ⎕wi "New" "Button"[64] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[65] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][66] ⎕wi "∆where" ((x,2)⍴where)[67] ⎕wi "where" (("fmBatchDisplay" ⎕wi "size") Win∆Resize ⎕wi "∆where")[68] ⎕wi "tooltip" "Save Parameters"[69] ⎕wi "onClick" ("fmSV.mBatch_DisplayFile.mSave"⎕wi "onClick")[70] ⎕wi "caption" "Save"[71] :if buttonimage[72]     ⎕wi "imagelist" "fmSV.iStandard"[73]     ⎕wi "imageindex" 9[74] :endif[75] ⎕wi "∆helpid" 5373[76] ⎕wi "enabled" 0[77] ⎕wi "order" .5[78] ⎕wi "visible" ¯1[79] "fmBatchDisplay" ⎕wi "onModified" "('Batch_Display' 'fmBatchDisplay.bnBatch_DisplaySave') Win∆SaveEnabled (0≠⎕warg[1])"[80] list←list OVER "fmBatchDisplay.bnBatch_DisplaySaveAs"[81] ⎕wself←"fmBatchDisplay.bnBatch_DisplaySaveAs" ⎕wi "New" "Button"[82] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[83] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][84] ⎕wi "∆where" ((x,2)⍴where)[85] ⎕wi "where" (("fmBatchDisplay" ⎕wi "size") Win∆Resize ⎕wi "∆where")[86] ⎕wi "tooltip" "Save Parameters As ..."[87] ⎕wi "onClick" ("fmSV.mBatch_DisplayFile.mSaveAs"⎕wi "onClick")[88] ⎕wi "caption" "Save As"[89] ⎕wi "∆helpid" 5374[90] ⎕wi "order" .5[91] ⎕wi "visible" ¯1[92] list←list OVER "fmBatchDisplay.bnBatch_DisplayRun"[93] ⎕wself←"fmBatchDisplay.bnBatch_DisplayRun" ⎕wi "New" "Button"[94] ⎕wi "style" 1[95] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[96] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][97] ⎕wi "∆where" ((x,2)⍴where)[98] ⎕wi "where" (("fmBatchDisplay" ⎕wi "size") Win∆Resize ⎕wi "∆where")[99] ⎕wi "tooltip" "Save Parameters and Run Batching/Running of Valuation Runs"[100] ⎕wi "onClick" ("fmSV.mBatch_DisplayFile.mRun"⎕wi "onClick")[101] ⎕wi "caption" "Run"[102] :if buttonimage[103]     ⎕wi "imagelist" "fmSV.iStandard"[104]     ⎕wi "imageindex" 33[105] :endif[106] ⎕wi "∆helpid" 5375[107] ⎕wi "order" .5[108] ⎕wi "visible" ¯1[109] [110] :if 300<fnsize[111]     ((1↑⎕lc) fnsize "FrameV - Batched Valuation Runs") Win∆ProgressBar "MemberUpdate"[112] :endif[113] [114] ⎕wself←"fmBatchDisplay.fDisplay" ⎕wi "New" "Frame"[115] ⎕wi "scale" 5[116] ⎕wi "∆where" (4 2⍴0 0 0.005 0 0.85 0 0.99 0)[117] ⎕wi "where" (("fmBatchDisplay" ⎕wi "size") Win∆Resize (4 2⍴0 0 0.005 0 0.85 0 0.99 0))[118] ⎕wi "caption" "Batched Valuation Runs"[119] ⎕wi "style" 0[120] ⎕wi "onResize" "AutoResize"[121] [122] ⎕wself←"fmBatchDisplay.fDisplay.lvRuns" ⎕wi "New" "Listview"[123] Fieldlist←Fieldlist OVER "fmBatchDisplay.fDisplay.lvRuns"[124] Fieldcontrol←Fieldcontrol OVER "Listview"[125] ⎕wi "∆name" "Runs"[126] ⎕wi "∆type" "Spinner"[127] ⎕wi "∆helpid" 5376[128] ⎕wi "tooltip" "Select the Valuation Runs to be Edited/Deleted"[129] list←list OVER "fmBatchDisplay.fDisplay.lvRuns"[130] ⎕wi "scale" 5[131] ⎕wi "viewmode" "report"[132] ⎕wi "style" 1 4 0[133] ⎕wi "∆where" (4 2⍴0.05 0 0.03 0 0.75 0 0.94 0)[134] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.03 0 0.75 0 0.94 0))[135] ⎕wi "∆update" "BatchedRuns"[136] (PickList NameList sortorder SortList)←4↑BatchedRuns[137] ⎕wi "list" PickList[138] NameList[;1]←NameList[;1],¨⊂4↑" "[139] ⎕wi "columndisplay" NameList[140] ⎕wi "AutoFit" "header" "all"[141] ⎕wi "∆sortorder" sortorder[142] ⎕wi "∆sortlist" SortList[143] ⎕wi "onColClick" "('fmBatchDisplay.fDisplay.lvRuns' 'Batch_Display') Win∆SortListview ⎕warg"[144] :if 0=⎕nc "listviewDict"[145] listviewDict←MATRIX keysIn ListviewDict[146] :endif[147] :if ~mt sortorder←DLTB ↑((ListviewDict for "Control" "fmBatchDisplay.fDisplay.lvRuns") for "Parameters" "") at "Sort"[148] ("fmBatchDisplay.fDisplay.lvRuns" "Batch_Display") Win∆SortListview sortorder[149] :else[150] ("fmBatchDisplay.fDisplay.lvRuns" "Batch_Display") Win∆SortListview "Valn Method"[151] :endif[152] ⎕wi "onResize" "Win∆SizeListview ⎕wi 'self'"[153] ⎕wi "∆spinner" "fmBatchDisplay.fDisplay.spRuns"[154] ⎕wi "onPaint" "1 Sel∆LabelUpdate 'fmBatchDisplay.fDisplay.lvRuns' "[155] ⎕wi "onSelect" "1 Sel∆LabelUpdate 'fmBatchDisplay.fDisplay.lvRuns' ⋄ 0 0⍴(⊂⎕wi 'name') Batch_Display 'Change' "[156] ⎕wi "onExit" "⍎(0∊⍴,⎕wres←0 List∆CHECK 'fmBatchDisplay.fDisplay.lvRuns')/'0 0⍴(⊂⎕wi ''name'') Batch_Display ''Change'' ' "[157] ⎕wi "onExitError" "Win∆ExitError ⎕warg"[158] ⎕wi "∆rightlabel" "fmBatchDisplay.fDisplay.lrRuns"[159] [160] ⎕wself←"fmBatchDisplay.fDisplay.lrRuns" ⎕wi "New" "Label"[161] ⎕wi "scale" 5[162] ⎕wi "extent" (CharSize×¯2↑1,19)[163] ⎕wi "style" 32[164] ⎕wi "caption" " "[165] where←4↑,"fmBatchDisplay.fDisplay.lvRuns" ⎕wi "∆where"[166] x←0.5×⍴where←Win∆Calcwhere where+((5+1↑2↓"fmBatchDisplay.fDisplay.lvRuns" ⎕wi "where") CDIV 1↑"fmBatchDisplay.fDisplay" ⎕wi "size"),0 0 0[167] ⎕wi "∆where" ((x,2)⍴where)[168] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize ⎕wi "∆where")[169] [170] ⎕wself←"fmBatchDisplay.fDisplay.spRuns" ⎕wi "New" "Spinner"[171] ⎕wi "scale" 5[172] ⎕wi "range" 0 1[173] ⎕wi "wrap" 1[174] where←4↑,"fmBatchDisplay.fDisplay.lvRuns" ⎕wi "∆where"[175] x←0.5×⍴where←Win∆Calcwhere where+0 20 0 ¯30[176] ⎕wi "∆where" ((x,2)⍴where)[177] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize ⎕wi "∆where")[178] ⎕wi "extent" 50 25[179] ⎕wi "onSpin" "0 0⍴⎕wres Batch_Display 'Spin' "[180] ⎕wi "tooltip" "Selections will be processed in the order displayed.
Use Spinners to re-order a single or contiguous set of selections"[181] [182] ⎕wself←"fmBatchDisplay.fDisplay.ckorigValnRun" ⎕wi "New" "Check"[183] Fieldlist←Fieldlist OVER "fmBatchDisplay.fDisplay.ckorigValnRun"[184] Fieldcontrol←Fieldcontrol OVER "Check"[185] ⎕wi "∆name" "origValnRun"[186] ⎕wi "∆type" "Check"[187] ⎕wi "∆helpid" 5377[188] ⎕wi "tooltip" "Indicate if you want to run the Valuations only when Valuation Results are not found in the Valuation Database"[189] ⎕wi "style" 0[190] ⎕wi "caption" "Only run Valuations not previously run"[191] ⎕wi "∆where" (2 2⍴0.84 0 0.15 0)[192] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize (2 2⍴0.84 0 0.15 0))[193] ⎕wi "extent" ((0 5×CharSize)+Win∆TextSize ⎕wi "caption")[194] ⎕wi "onClick" "(0 0⍴(⊂⎕wi 'name') Batch_Display 'Change' )"[195] [196] ⎕wself←"fmBatchDisplay.fDisplay.ckexcelOutput" ⎕wi "New" "Check"[197] Fieldlist←Fieldlist OVER "fmBatchDisplay.fDisplay.ckexcelOutput"[198] Fieldcontrol←Fieldcontrol OVER "Check"[199] ⎕wi "∆name" "excelOutput"[200] ⎕wi "∆type" "Check"[201] ⎕wi "∆helpid" 5378[202] ⎕wi "tooltip" "Indicate if you want to create Excel Output from the Valuation runs"[203] ⎕wi "style" 0[204] ⎕wi "caption" "Create Excel Valuation Output (non-Test runs)"[205] ⎕wi "∆where" (2 2⍴0.84 0 0.4 0)[206] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize (2 2⍴0.84 0 0.4 0))[207] ⎕wi "extent" ((0 5×CharSize)+Win∆TextSize ⎕wi "caption")[208] ⎕wi "onClick" "(0 0⍴(⊂⎕wi 'name') Batch_Display 'Change' )"[209] [210] ⎕wself←"fmBatchDisplay.fDisplay.ckexcelDelay" ⎕wi "New" "Check"[211] Fieldlist←Fieldlist OVER "fmBatchDisplay.fDisplay.ckexcelDelay"[212] Fieldcontrol←Fieldcontrol OVER "Check"[213] ⎕wi "∆name" "excelDelay"[214] ⎕wi "∆type" "Check"[215] ⎕wi "∆helpid" 5379[216] ⎕wi "tooltip" "Indicate if you want to delay the creation of the Excel Output until the end of the Valuation Batch"[217] ⎕wi "style" 0[218] ⎕wi "caption" "Delay Excel Valuation Output to end of Batch"[219] ⎕wi "∆where" (2 2⍴0.84 0 0.65 0)[220] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize (2 2⍴0.84 0 0.65 0))[221] ⎕wi "extent" ((0 5×CharSize)+Win∆TextSize ⎕wi "caption")[222] ⎕wi "onClick" "(0 0⍴(⊂⎕wi 'name') Batch_Display 'Change' )"[223] [224] ⎕wself←"fmBatchDisplay.fDisplay.ckHPCenabled" ⎕wi "New" "Check"[225] Fieldlist←Fieldlist OVER "fmBatchDisplay.fDisplay.ckHPCenabled"[226] Fieldcontrol←Fieldcontrol OVER "Check"[227] ⎕wi "∆name" "HPCenabled"[228] ⎕wi "∆type" "Check"[229] ⎕wi "enabled" (0≠bHPC)[230] ⎕wi "∆helpid" 5380[231] ⎕wi "tooltip" "Enable the use of Load Sharing to speed up the running of valuations"[232] ⎕wi "style" 0[233] ⎕wi "caption" "Enable Load Sharing"[234] ⎕wi "∆where" (2 2⍴0.88 0 0.15 0)[235] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize (2 2⍴0.88 0 0.15 0))[236] ⎕wi "extent" ((0 5×CharSize)+Win∆TextSize ⎕wi "caption")[237] ⎕wi "onClick" "(0 0⍴(⊂⎕wi 'name') Batch_Display 'Change' )"[238] [239] ⎕wself←"fmBatchDisplay.fDisplay.cbHPCbroker" ⎕wi "New" "Combo"[240] Fieldlist←Fieldlist OVER "fmBatchDisplay.fDisplay.cbHPCbroker"[241] Fieldcontrol←Fieldcontrol OVER "Combo"[242] ⎕wi "∆name" "HPCbroker"[243] ⎕wi "∆type" "Char"[244] ⎕wi "enabled" (0≠bHPC)[245] ⎕wi "∆helpid" 5381[246] ⎕wi "tooltip" "Select the HTTP Request Broker to be used"[247] ⎕wi "style" 16 128 256 2[248] ⎕wi "∆where" (2 2⍴0.88 0 0.4 0)[249] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize (2 2⍴0.88 0 0.4 0))[250] PickList←GetHTTPBroker[251] ⎕wi "∆update" "GetHTTPBroker"[252] PickList←⊃m2n 1 0↓PickList[253] PickList←" " OVER PickList[254] ⎕wi "list" PickList[255] ⎕wi "extent" (150,(¯10+6×¯1↑CharSize)+¯1↑Win∆TextSize ((0,⎕wi "limit")⌈⍴PickList)↑PickList)[256] ⎕wi "onClick" "0 0⍴(⊂⎕wi 'name') Batch_Display 'Change' "[257] [258] ⎕wself←"fmBatchDisplay.fDisplay.llHPCbroker" ⎕wi "New" "Label"[259] ⎕wi "scale" 5[260] ⎕wi "style" 2[261] ⎕wi "enabled" (0≠bHPC)[262] ⎕wi "extent" (↑⎕wi "Draw" ("?text" (("⍺",⎕tcnl) char_replace "HTTP Request⍺Broker")))[263] ⎕wi "caption" (("⍺",⎕tcnl) char_replace "HTTP Request⍺Broker")[264] where←4↑,"fmBatchDisplay.fDisplay.cbHPCbroker" ⎕wi "∆where"[265] size←1↑"fmBatchDisplay.fDisplay.cbHPCbroker" ⎕wi "extent"[266] size←¯3⌈0.5×(1↑⎕wi "extent")-size[267] x←0.5×⍴where←Win∆Calcwhere where-0,size,0,10+¯1↑⎕wi "extent"[268] ⎕wi "∆where" ((x,2)⍴where)[269] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize ⎕wi "∆where")[270] [271] ⎕wself←"fmBatchDisplay.fDisplay.edfinCurrent" ⎕wi "New" "Edit"[272] Fieldlist←Fieldlist OVER "fmBatchDisplay.fDisplay.edfinCurrent"[273] Fieldcontrol←Fieldcontrol OVER "Edit"[274] ⎕wi "∆name" "finCurrent"[275] ⎕wi "∆type" "Char"[276] ⎕wi "enabled" (0)[277] ⎕wi "∆helpid" 5382[278] ⎕wi "tooltip" "Shows the description of the Currently Selected Financial Globals Parameter Set"[279] ⎕wi "∆where" (2 2⍴0.93 0 0.2 0)[280] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize (2 2⍴0.93 0 0.2 0))[281] ⎕wi "onExit" "⍎(0∊⍴,⎕wres←0 INPUT∆CHECK 'fmBatchDisplay.fDisplay.edfinCurrent')/'0 0⍴(⊂⎕wi ''name'') Batch_Display ''Change'' ' "[282] ⎕wi "onExitError" "Win∆ExitError ⎕warg"[283] ⎕wi "extent" (2+CharSize×1 51)[284] [285] ⎕wself←"fmBatchDisplay.fDisplay.llfinCurrent" ⎕wi "New" "Label"[286] ⎕wi "scale" 5[287] ⎕wi "style" 2[288] ⎕wi "enabled" (0)[289] ⎕wi "extent" (↑⎕wi "Draw" ("?text" (("⍺",⎕tcnl) char_replace "Currently Selected Financial⍺Globals Parameter Set")))[290] ⎕wi "caption" (("⍺",⎕tcnl) char_replace "Currently Selected Financial⍺Globals Parameter Set")[291] where←4↑,"fmBatchDisplay.fDisplay.edfinCurrent" ⎕wi "∆where"[292] size←1↑"fmBatchDisplay.fDisplay.edfinCurrent" ⎕wi "extent"[293] size←¯3⌈0.5×(1↑⎕wi "extent")-size[294] x←0.5×⍴where←Win∆Calcwhere where-0,size,0,10+¯1↑⎕wi "extent"[295] ⎕wi "∆where" ((x,2)⍴where)[296] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize ⎕wi "∆where")[297] list←list OVER "fmBatchDisplay.fDisplay.bnBatch_DisplayAdd"[298] ⎕wself←"fmBatchDisplay.fDisplay.bnBatch_DisplayAdd" ⎕wi "New" "Button"[299] ⎕wi "deferexit" 1[300] ⎕wi "extent" (size←1.4 1×buttonsize×1⌈CharSize÷13 6)[301] ⎕wi "∆where" (2 2⍴0.91 0 0.6 0)[302] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize (2 2⍴0.91 0 0.6 0))[303] ⎕wi "tooltip" "Add Valuation Runs"[304] ⎕wi "onClick" ("fmSV.mBatch_DisplayBatch.mAdd"⎕wi "onClick")[305] ⎕wi "∆helpid" 5383[306] ⎕wi "caption" (("⍺",⎕tcnl) char_replace "Add⍺Run(s)")[307] list←list OVER "fmBatchDisplay.fDisplay.bnBatch_DisplayEdit"[308] ⎕wself←"fmBatchDisplay.fDisplay.bnBatch_DisplayEdit" ⎕wi "New" "Button"[309] ⎕wi "extent" (size←1.4 1×buttonsize×1⌈CharSize÷13 6)[310] ⎕wi "∆where" (2 2⍴0.91 0 0.7 0)[311] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize (2 2⍴0.91 0 0.7 0))[312] ⎕wi "tooltip" "Edit a Valuation Run Parameter Set"[313] ⎕wi "onClick" ("fmSV.mBatch_DisplayBatch.mEdit"⎕wi "onClick")[314] ⎕wi "∆helpid" 5384[315] ⎕wi "caption" (("⍺",⎕tcnl) char_replace "Edit⍺Run")[316] list←list OVER "fmBatchDisplay.fDisplay.bnBatch_DisplayDelete"[317] ⎕wself←"fmBatchDisplay.fDisplay.bnBatch_DisplayDelete" ⎕wi "New" "Button"[318] ⎕wi "extent" (size←1.4 1×buttonsize×1⌈CharSize÷13 6)[319] ⎕wi "∆where" (2 2⍴0.91 0 0.8 0)[320] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize (2 2⍴0.91 0 0.8 0))[321] ⎕wi "tooltip" "Delete Valuation Run Parameter Set(s)"[322] ⎕wi "onClick" ("fmSV.mBatch_DisplayBatch.mDelete"⎕wi "onClick")[323] ⎕wi "∆helpid" 5385[324] ⎕wi "caption" (("⍺",⎕tcnl) char_replace "Delete⍺Run(s)")[325] :if buttonimage[326]     ⎕wi "imagelist" "fmSV.iStandard"[327]     ⎕wi "imageindex" 6[328] :endif[329] list←list OVER "fmBatchDisplay.fDisplay.bnBatch_DisplayOverrides"[330] ⎕wself←"fmBatchDisplay.fDisplay.bnBatch_DisplayOverrides" ⎕wi "New" "Button"[331] ⎕wi "extent" (size←1.4 1×buttonsize×1⌈CharSize÷13 6)[332] ⎕wi "∆where" (2 2⍴0.91 0 0.9 0)[333] ⎕wi "where" (("fmBatchDisplay.fDisplay" ⎕wi "size") Win∆Resize (2 2⍴0.91 0 0.9 0))[334] ⎕wi "tooltip" "Edit Valuation Run Parameter Sets by specifying overriding values for Batch Parameters"[335] ⎕wi "onClick" ("fmSV.mBatch_DisplayBatch.mOverride"⎕wi "onClick")[336] ⎕wi "∆helpid" 5386[337] ⎕wi "caption" (("⍺",⎕tcnl) char_replace "Edit⍺Parameters")[338] [339] :if 300<fnsize[340]     ((1↑⎕lc) fnsize "FrameV - Consolidation Parameters") Win∆ProgressBar "MemberUpdate"[341] :endif[342] [343] ⎕wself←"fmBatchDisplay.fConsolid" ⎕wi "New" "Frame"[344] ⎕wi "scale" 5[345] ⎕wi "∆where" (4 2⍴0.85 0 0.005 0 0.15 ¯45 0.99 0)[346] ⎕wi "where" (("fmBatchDisplay" ⎕wi "size") Win∆Resize (4 2⍴0.85 0 0.005 0 0.15 ¯45 0.99 0))[347] ⎕wi "caption" "Consolidation Parameters"[348] ⎕wi "style" 0[349] ⎕wi "onResize" "AutoResize"[350] [351] ⎕wself←"fmBatchDisplay.fConsolid.ckconsolidate" ⎕wi "New" "Check"[352] Fieldlist←Fieldlist OVER "fmBatchDisplay.fConsolid.ckconsolidate"[353] Fieldcontrol←Fieldcontrol OVER "Check"[354] ⎕wi "∆name" "consolidate"[355] ⎕wi "∆type" "Check"[356] ⎕wi "enabled" (XLCtl)[357] ⎕wi "∆helpid" 5387[358] ⎕wi "tooltip" "Indicate if you want to produce a Consolidation of the valuation runs after completing the Valuation Batch"[359] ⎕wi "style" 0[360] ⎕wi "caption" "Consolidate Runs after Valuation"[361] ⎕wi "∆where" (2 2⍴0.25 0 0.15 0)[362] ⎕wi "where" (("fmBatchDisplay.fConsolid" ⎕wi "size") Win∆Resize (2 2⍴0.25 0 0.15 0))[363] ⎕wi "extent" ((0 5×CharSize)+Win∆TextSize ⎕wi "caption")[364] ⎕wi "onClick" "(0 0⍴(⊂⎕wi 'name') Batch_Display 'Change' )"[365] [366] ⎕wself←"fmBatchDisplay.fConsolid.cbConsolidParms" ⎕wi "New" "Combo"[367] Fieldlist←Fieldlist OVER "fmBatchDisplay.fConsolid.cbConsolidParms"[368] Fieldcontrol←Fieldcontrol OVER "Combo"[369] ⎕wi "∆name" "ConsolidParms"[370] ⎕wi "∆type" "Char"[371] ⎕wi "∆mandatory" 1[372] ⎕wi "enabled" (0)[373] ⎕wi "∆helpid" 5388[374] ⎕wi "tooltip" "Select the Consolidation Parameter Set"[375] ⎕wi "style" 16 128 256 2[376] ⎕wi "∆where" (2 2⍴0.2 0 0.5 0)[377] ⎕wi "where" (("fmBatchDisplay.fConsolid" ⎕wi "size") Win∆Resize (2 2⍴0.2 0 0.5 0))[378] PickList←GetClientParms 'Consolidation' 0[379] ⎕wi "∆update" "GetClientParms 'Consolidation' 0"[380] PickList←⊃m2n 1 0↓PickList[381] ⎕wi "list" PickList[382] ⎕wi "extent" (150,(¯10+6×¯1↑CharSize)+¯1↑Win∆TextSize ((0,⎕wi "limit")⌈⍴PickList)↑PickList)[383] ⎕wi "onClick" "0 0⍴(⊂⎕wi 'name') Batch_Display 'Change' "[384] [385] ⎕wself←"fmBatchDisplay.fConsolid.llConsolidParms" ⎕wi "New" "Label"[386] ⎕wi "scale" 5[387] ⎕wi "style" 2[388] ⎕wi "enabled" (0)[389] ⎕wi "extent" (↑⎕wi "Draw" ("?text" (("⍺",⎕tcnl) char_replace "Consolidation⍺Parameters")))[390] ⎕wi "caption" (("⍺",⎕tcnl) char_replace "Consolidation⍺Parameters")[391] where←4↑,"fmBatchDisplay.fConsolid.cbConsolidParms" ⎕wi "∆where"[392] size←1↑"fmBatchDisplay.fConsolid.cbConsolidParms" ⎕wi "extent"[393] size←¯3⌈0.5×(1↑⎕wi "extent")-size[394] x←0.5×⍴where←Win∆Calcwhere where-0,size,0,10+¯1↑⎕wi "extent"[395] ⎕wi "∆where" ((x,2)⍴where)[396] ⎕wi "where" (("fmBatchDisplay.fConsolid" ⎕wi "size") Win∆Resize ⎕wi "∆where")[397] [398] ⎕wself←"fmBatchDisplay.fConsolid.edconsDBName" ⎕wi "New" "Edit"[399] Fieldlist←Fieldlist OVER "fmBatchDisplay.fConsolid.edconsDBName"[400] Fieldcontrol←Fieldcontrol OVER "Edit"[401] ⎕wi "∆name" "consDBName"[402] ⎕wi "∆type" "Char"[403] ⎕wi "enabled" (0)[404] ⎕wi "∆valid" ('File' 'mdb' 'xls')[405] ⎕wi "∆helpid" 5389[406] ⎕wi "tooltip" "Specify the Consolidation Output File Name"[407] ⎕wi "∆where" (2 2⍴0.6 0 0.35 0)[408] ⎕wi "where" (("fmBatchDisplay.fConsolid" ⎕wi "size") Win∆Resize (2 2⍴0.6 0 0.35 0))[409] ⎕wi "onExit" "⍎(0∊⍴,⎕wres←0 INPUT∆CHECK 'fmBatchDisplay.fConsolid.edconsDBName')/'0 0⍴(⊂⎕wi ''name'') Batch_Display ''Change'' ' "[410] ⎕wi "onExitError" "Win∆ExitError ⎕warg"[411] ⎕wi "extent" (2+CharSize×1 31)[412] [413] ⎕wself←"fmBatchDisplay.fConsolid.llconsDBName" ⎕wi "New" "Label"[414] ⎕wi "scale" 5[415] ⎕wi "style" 2[416] ⎕wi "enabled" (0)[417] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Consolidation Output Filename"))[418] ⎕wi "caption" "Consolidation Output Filename"[419] where←4↑,"fmBatchDisplay.fConsolid.edconsDBName" ⎕wi "∆where"[420] x←0.5×⍴where←Win∆Calcwhere where-0 ¯3 0,10+¯1↑⎕wi "extent"[421] ⎕wi "∆where" ((x,2)⍴where)[422] ⎕wi "where" (("fmBatchDisplay.fConsolid" ⎕wi "size") Win∆Resize ⎕wi "∆where")[423] [424] ⎕wself←"fmBatchDisplay.edBatchtrick" ⎕wi "New" "Edit"[425] Fieldlist←Fieldlist OVER "fmBatchDisplay.edBatchtrick"[426] Fieldcontrol←Fieldcontrol OVER "Edit"[427] ⎕wi "∆name" "Batchtrick"[428] ⎕wi "∆type" "Char"[429] ⎕wi "enabled" (0)[430] ⎕wi "limit" 1[431] ⎕wi "∆where" (2 2⍴1 0 1 0)[432] ⎕wi "where" (("fmBatchDisplay" ⎕wi "size") Win∆Resize (2 2⍴1 0 1 0))[433] ⎕wi "onExit" "⍎(0∊⍴,⎕wres←0 INPUT∆CHECK 'fmBatchDisplay.edBatchtrick')/'0 0⍴(⊂⎕wi ''name'') Batch_Display ''Change'' ' "[434] ⎕wi "onExitError" "Win∆ExitError ⎕warg"[435] ⎕wi "extent" (2+CharSize×1 1.5)[436] list←list OVER "fmBatchDisplay.bnBatch_DisplayUnattend"[437] ⎕wself←"fmBatchDisplay.bnBatch_DisplayUnattend" ⎕wi "New" "Button"[438] ⎕wi "extent" (size←1.4 1×buttonsize×1⌈CharSize÷13 6)[439] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][440] ⎕wi "∆where" ((x,2)⍴where)[441] ⎕wi "where" (("fmBatchDisplay" ⎕wi "size") Win∆Resize ⎕wi "∆where")[442] ⎕wi "tooltip" "Start Unattended Valuation Batch Run"[443] ⎕wi "onClick" ("fmSV.mBatch_DisplayFile.mUnattend"⎕wi "onClick")[444] ⎕wi "∆helpid" 5390[445] ⎕wi "caption" (("⍺",⎕tcnl) char_replace "Unattended⍺Run")[446] list←list OVER "fmBatchDisplay.bnBatch_DisplayMonitor"[447] ⎕wself←"fmBatchDisplay.bnBatch_DisplayMonitor" ⎕wi "New" "Button"[448] ⎕wi "extent" (size←1.4 1×buttonsize×1⌈CharSize÷13 6)[449] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][450] ⎕wi "∆where" ((x,2)⍴where)[451] ⎕wi "where" (("fmBatchDisplay" ⎕wi "size") Win∆Resize ⎕wi "∆where")[452] ⎕wi "tooltip" "Monitor the timings for creation of Excel Output"[453] ⎕wi "onClick" ("fmSV.mBatch_DisplayFile.mMonitor"⎕wi "onClick")[454] ⎕wi "caption" (("⍺",⎕tcnl) char_replace "Monitor⍺Excel Timings")[455] [456] ⎕wself←"fmBatchDisplay.lParmDesc" ⎕wi "New" "Label"[457] ⎕wi "scale" 5[458] ⎕wi "extent" (CharSize×¯2↑1,80)[459] ⎕wi "style" 32[460] ⎕wi "caption" " "[461] ⎕wi "∆where" (2 2⍴0.96 0 0.02 0)[462] ⎕wi "where" (("fmBatchDisplay" ⎕wi "size") Win∆Resize (2 2⍴0.96 0 0.02 0))[463] [464] "fmBatchDisplay" ⎕wi "∆multifile" ""[465] "fmBatchDisplay" ⎕wi "∆singlefile" ""[466] "fmBatchDisplay" ⎕wi "∆format" ""[467] "fmBatchDisplay" ⎕wi "∆financial" 0[468] "fmBatchDisplay" ⎕wi "∆relrules" 0[469] "fmBatchDisplay" ⎕wi "∆parm" 0[470] "fmBatchDisplay" ⎕wi "∆decr" 0[471] "fmBatchDisplay" ⎕wi "∆file" 0[472] "fmBatchDisplay" ⎕wi "∆codefile" CodeFile[473] "fmBatchDisplay" ⎕wi "∆inputstype" "ClientFile"[474] "fmBatchDisplay" ⎕wi "∆inputsentry" "Multi"[475] "fmBatchDisplay" ⎕wi "∆savecn" (⍳0)[476] "fmBatchDisplay" ⎕wi "∆savedesc" ""[477] list←list OVER "fmBatchDisplay"[478] "fmBatchDisplay" ⎕wi "∆fieldlist" Fieldlist[479] "fmBatchDisplay" ⎕wi "∆fieldcontrol" Fieldcontrol[480] childlist←"fmSV" ⎕wi "∆childlist"[481] list←(⊃¯1↑childlist) OVER list[482] childlist[⍴childlist]←⊂list[483] "fmSV" ⎕wi "∆childlist" childlist[484] list←,⎕split list[485] 0 0⍴((∨/¨(⊂".mBatch_Display")⍷¨list)/list) MultiWI "enabled" 1[486] :if 300<fnsize[487]     (fnsize fnsize ".") Win∆ProgressBar "MemberUpdate"[488]     Win∆ProgressBar "Hide"[489] :endif[490] "Init" OpenParameters "Batch_Display"[491] "fmBatchDisplay.bnBatch_DisplayHelp" ⎕wi "visible" 1[492] "fmBatchDisplay.bnBatch_DisplayQuit" ⎕wi "visible" 1[493] "fmBatchDisplay.bnBatch_DisplaySave" ⎕wi "visible" 1[494] "fmBatchDisplay.bnBatch_DisplaySaveAs" ⎕wi "visible" 1[495] "fmBatchDisplay.bnBatch_DisplayRun" ⎕wi "visible" 1[496] "#" ⎕wi "focus" "fmBatchDisplay.fDisplay.lvRuns"[497] :if ~0∊⍴,Error←Win∆Initialise "Batch_Display"[498]     "Quit" EndModule Module[499]     "fmSV" ⎕wi "pointer" 0[500]     0 0⍴"fmBatchDisplay" ⎕wi "Delete"[501]     :return[502] :endif[503] :if bar_open←commandbar^"Multi"≡"Multi"[504]     bar_open←0×"fmBatchDisplay.mBatch_DisplayFile.m" Win∆CommandBar "RunAsHelp"[505] :endif[506] "fmBatchDisplay" ⎕wi "Paint"[507] "fmSV" ⎕wi "pointer" 11[508] "fmBatchDisplay" ⎕wi "onWait" "0 0⍴Batch_Display 'Wait' ⋄ 'fmBatchDisplay' ⎕wi 'modified' 0"[509] 0 0⍴"fmBatchDisplay" ⎕wi "Wait"[510] 0 0⍴"fmBatchDisplay" ⎕wi "Delete"[511] "fmSV" ⎕wi "pointer" 0 ∇