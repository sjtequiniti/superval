∇ Container←Form_Make;⎕wself;ControlName;childlist;list;Fieldlist;Fieldcontrol;FrameWidth;Caption;buttonsize;buttonwhere;where;size;alignment;Header;PickList;NameList;value;sortorder;SortList;MaxRow;MaxCol;Parent;level;node;no;nn;NN;x;fnsize;framelist;relTests[1] [2] Fieldlist←Fieldcontrol←list←0 0⍴""[3] "fmSV" ⎕wi "pointer" 13[4] buttonsize←25 65 ⋄ buttonwhere←¯5[5] FormName ⎕wi "caption" ((FormName ⎕wi "caption")," - Set Display Font")[6] "fmSV" ⎕wi "∆caption" (("fmSV" ⎕wi "∆caption"),⊂("fmSV" ⎕wi "caption"))[7] :if 300<fnsize←1↑⍴⎕cr "Form_Make"[8]     "Generating Form" Win∆ProgressBar "Open"[9]     ("Menu Items:" "Form Controls:") Win∆ProgressBar "SetLabels"[10]     (1 1 "Help About") Win∆ProgressBar "FileUpdate"[11] :endif[12] [13] Container←"∆Dialog"[14] [15] ⎕wself←"fmSetFont" ⎕wi "New" "Form" "Hide"[16] ⎕wi "caption" ("fmSV" ⎕wi "caption")[17] ⎕wi "scale" 5[18] ⎕wi "font" ("fmSV" ⎕wi "font")[19] ⎕wi "border" 2 32 64[20] ⎕wi "where" (Win∆CentrePos .35 .30×768 1024×1⌈CharSize÷13 6)[21] ⎕wi "limitwhere" (0.8×¯2↑⎕wi "where")[22] ⎕wi "tooltipwidth" 200[23] ⎕wi "onResize" "AutoResize"[24] ⎕wi "onClose" "ExitSystem ''"[25] ControlName←"fmSetFont"[26] relTests←0[27] 0 Menu_Make "fmSV"[28] 0 Menu_Make "fmSetFont"[29] "fmSetFont" Win∆CutCopyPaste "Build"[30] "fmSetFont" ⎕wi "∆helpid" 2006[31] list←list OVER "fmSetFont.bnSet_FontHelp"[32] ⎕wself←"fmSetFont.bnSet_FontHelp" ⎕wi "New" "Button"[33] ⎕wi "deferexit" 1[34] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[35] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][36] ⎕wi "∆where" ((x,2)⍴where)[37] ⎕wi "where" (("fmSetFont" ⎕wi "size") Win∆Resize ⎕wi "∆where")[38] ⎕wi "tooltip" "SuperVal Help"[39] ⎕wi "onClick" ("fmSV.mSet_FontHelp.mContext"⎕wi "onClick")[40] ⎕wi "caption" "Help"[41] :if buttonimage[42]     ⎕wi "imagelist" "fmSV.iStandard"[43]     ⎕wi "imageindex" 12[44] :endif[45] ⎕wi "visible" ¯1[46] ⎕wi "onMouseDown" "∆HelpField←'#' ⎕wi 'focus' "[47] list←list OVER "fmSetFont.bnSet_FontQuit"[48] ⎕wself←"fmSetFont.bnSet_FontQuit" ⎕wi "New" "Button"[49] ⎕wi "style" 2[50] ⎕wi "deferexit" 1[51] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[52] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][53] ⎕wi "∆where" ((x,2)⍴where)[54] ⎕wi "where" (("fmSetFont" ⎕wi "size") Win∆Resize ⎕wi "∆where")[55] ⎕wi "tooltip" "Cancel and Return"[56] ⎕wi "onClick" ("fmSV.mSet_FontFile.mQuit"⎕wi "onClick")[57] ⎕wi "caption" "Cancel"[58] ⎕wi "∆helpid" 3036[59] ⎕wi "order" .5[60] ⎕wi "visible" ¯1[61] list←list OVER "fmSetFont.bnSet_FontSave"[62] ⎕wself←"fmSetFont.bnSet_FontSave" ⎕wi "New" "Button"[63] ⎕wi "style" 1[64] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[65] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][66] ⎕wi "∆where" ((x,2)⍴where)[67] ⎕wi "where" (("fmSetFont" ⎕wi "size") Win∆Resize ⎕wi "∆where")[68] ⎕wi "tooltip" "Save Parameters"[69] ⎕wi "onClick" ("fmSV.mSet_FontFile.mSave"⎕wi "onClick")[70] ⎕wi "caption" "OK"[71] ⎕wi "∆helpid" 3037[72] ⎕wi "order" .5[73] ⎕wi "visible" ¯1[74] "fmSetFont" ⎕wi "∆modified" 1[75] PickList←⍙POPUPSdict ReadDictFile "FontStyle"[76] :if 0∊⍴,Header←"" ⋄ Header←DLTB PickList[1;] ⋄ :endif[77] no←1↑⍴PickList←1 0↓PickList[78] [79] ⎕wself←"fmSetFont.fFontStyle" ⎕wi "New" "Frame"[80] ⎕wi "scale" 5[81] ⎕wi "∆where" (4 2⍴0.1 0 0.1 0 0.2 0 0.2 0)[82] ⎕wi "where" (("fmSetFont" ⎕wi "size") Win∆Resize (4 2⍴0.1 0 0.1 0 0.2 0 0.2 0))[83] ⎕wi "caption" "Font Style"[84] ⎕wi "style" 0[85] ⎕wi "onResize" "AutoResize"[86] ⎕wi "tooltip" "Select the Font Style"[87] [88] where←(0×1 0 1 0\0.1 0.1)+0 1 0 1\25,10×1[89] alignment←1 0 ⋄ FrameWidth←10+¯1↑Win∆TextSize Header[90] :for nn :in ⍳no[91]     ⎕wself←(Name←"fmSetFont.fFontStyle.opFontStyle_",⍕nn) ⎕wi "New" "Option"[92]     :if nn=1 ⋄ ⎕wi "∆lastoption" ("fmSetFont.fFontStyle.opFontStyle_",⍕no) ⋄ :endif[93]     size←0.5×⍴x←Win∆Calcwhere where[94]     x←(size,2)⍴x[95]     ⎕wi "∆where" x[96]     ⎕wi "where" (("fmSetFont.fFontStyle" ⎕wi "size") Win∆Resize x)[97]     ⎕wi "caption" (Caption←DLTB PickList[nn;])[98]     FrameWidth←FrameWidth⌈10+¯1↑size←0 25+Win∆TextSize Caption[99]     where←where+0 1 0 1\alignment×10 20+size[100]     ⎕wi "extent" size[101]     ⎕wi "tooltip" "Select the Font Style"[102]     ⎕wi "onClick" "(0 0⍴(⊂⎕wi 'name') Set_Font 'Change' )"[103]     ⎕wi "∆helpid" 3038[104] :endfor[105] ⎕wi "∆type" "Option"[106] ⎕wi "∆mandatory" 1[107] ⎕wi "∆name" "FontStyle"[108] ⎕wi "∆options" "⍺APL ⍺Roman ⍺Swiss ⍺Modern ⍺Script ⍺Decorative"[109] Fieldlist←Fieldlist OVER Name[110] Fieldcontrol←Fieldcontrol OVER "Option"[111] :if 1[112]     ⎕wself←"fmSetFont.fFontStyle"[113]     size←0.5×⍴x←Win∆Calcwhere 0.1 0 0.1 0,0 1 0 1×where+(2/⌽alignment)×0 25 0,FrameWidth[114]     x←(size,2)⍴x[115]     ⎕wi "∆where" x[116]     ⎕wi "where" (("fmSetFont" ⎕wi "size") Win∆Resize x)[117] :endif[118] PickList←⍙POPUPSdict ReadDictFile "FontSize"[119] :if 0∊⍴,Header←"" ⋄ Header←DLTB PickList[1;] ⋄ :endif[120] no←1↑⍴PickList←1 0↓PickList[121] [122] ⎕wself←"fmSetFont.fFontSize" ⎕wi "New" "Frame"[123] ⎕wi "scale" 5[124] ⎕wi "∆where" (4 2⍴0.1 0 0.6 0 0.2 0 0.2 0)[125] ⎕wi "where" (("fmSetFont" ⎕wi "size") Win∆Resize (4 2⍴0.1 0 0.6 0 0.2 0 0.2 0))[126] ⎕wi "caption" "Font Size"[127] ⎕wi "style" 0[128] ⎕wi "onResize" "AutoResize"[129] ⎕wi "tooltip" "Select the Font Size"[130] [131] where←(0×1 0 1 0\0.1 0.6)+0 1 0 1\25,10×1[132] alignment←1 0 ⋄ FrameWidth←10+¯1↑Win∆TextSize Header[133] :for nn :in ⍳no[134]     ⎕wself←(Name←"fmSetFont.fFontSize.opFontSize_",⍕nn) ⎕wi "New" "Option"[135]     :if nn=1 ⋄ ⎕wi "∆lastoption" ("fmSetFont.fFontSize.opFontSize_",⍕no) ⋄ :endif[136]     size←0.5×⍴x←Win∆Calcwhere where[137]     x←(size,2)⍴x[138]     ⎕wi "∆where" x[139]     ⎕wi "where" (("fmSetFont.fFontSize" ⎕wi "size") Win∆Resize x)[140]     ⎕wi "caption" (Caption←DLTB PickList[nn;])[141]     FrameWidth←FrameWidth⌈10+¯1↑size←0 25+Win∆TextSize Caption[142]     where←where+0 1 0 1\alignment×10 20+size[143]     ⎕wi "extent" size[144]     ⎕wi "tooltip" "Select the Font Size"[145]     ⎕wi "onClick" "(0 0⍴(⊂⎕wi 'name') Set_Font 'Change' )"[146]     ⎕wi "∆helpid" 3039[147] :endfor[148] ⎕wi "∆type" "Option"[149] ⎕wi "∆mandatory" 1[150] ⎕wi "∆name" "FontSize"[151] ⎕wi "∆options" "⍺Fine ⍺Small ⍺Normal ⍺Large ⍺Very Large"[152] Fieldlist←Fieldlist OVER Name[153] Fieldcontrol←Fieldcontrol OVER "Option"[154] :if 1[155]     ⎕wself←"fmSetFont.fFontSize"[156]     size←0.5×⍴x←Win∆Calcwhere 0.1 0 0.6 0,0 1 0 1×where+(2/⌽alignment)×0 25 0,FrameWidth[157]     x←(size,2)⍴x[158]     ⎕wi "∆where" x[159]     ⎕wi "where" (("fmSetFont" ⎕wi "size") Win∆Resize x)[160] :endif[161] [162] "fmSetFont" ⎕wi "∆multifile" ""[163] "fmSetFont" ⎕wi "∆singlefile" ""[164] "fmSetFont" ⎕wi "∆format" ""[165] "fmSetFont" ⎕wi "∆financial" 0[166] "fmSetFont" ⎕wi "∆relrules" 0[167] "fmSetFont" ⎕wi "∆parm" 0[168] "fmSetFont" ⎕wi "∆decr" 0[169] "fmSetFont" ⎕wi "∆file" 0[170] "fmSetFont" ⎕wi "∆codefile" CodeFile[171] "fmSetFont" ⎕wi "∆inputstype" ""[172] "fmSetFont" ⎕wi "∆inputsentry" ""[173] "fmSetFont" ⎕wi "∆savecn" (⍳0)[174] "fmSetFont" ⎕wi "∆savedesc" ""[175] list←list OVER "fmSetFont"[176] "fmSetFont" ⎕wi "∆fieldlist" Fieldlist[177] "fmSetFont" ⎕wi "∆fieldcontrol" Fieldcontrol[178] childlist←"fmSV" ⎕wi "∆childlist"[179] list←(⊃¯1↑childlist) OVER list[180] childlist[⍴childlist]←⊂list[181] "fmSV" ⎕wi "∆childlist" childlist[182] list←,⎕split list[183] 0 0⍴((∨/¨(⊂".mSet_Font")⍷¨list)/list) MultiWI "enabled" 1[184] :if 300<fnsize[185]     (fnsize fnsize ".") Win∆ProgressBar "MemberUpdate"[186]     Win∆ProgressBar "Hide"[187] :endif[188] "Init" OpenParameters "Set_Font"[189] "fmSetFont.bnSet_FontHelp" ⎕wi "visible" 1[190] "fmSetFont.bnSet_FontQuit" ⎕wi "visible" 1[191] "fmSetFont.bnSet_FontSave" ⎕wi "visible" 1[192] "#" ⎕wi "focus" "fmSetFont.fFontStyle.opFontStyle_1"[193] :if ~0∊⍴,Error←Win∆Initialise "Set_Font"[194]     "Quit" EndModule Module[195]     "fmSV" ⎕wi "pointer" 0[196]     0 0⍴"fmSetFont" ⎕wi "Delete"[197]     :return[198] :endif[199] :if bar_open←commandbar^"Multi"≡""[200]     bar_open←0×"fmSetFont.mSet_FontFile.m" Win∆CommandBar "OKHelp"[201] :endif[202] "fmSetFont" ⎕wi "Paint"[203] "fmSV" ⎕wi "pointer" 11[204] "fmSetFont" ⎕wi "onWait" "0 0⍴Set_Font 'Wait' ⋄ 'fmSetFont' ⎕wi 'modified' 0"[205] 0 0⍴"fmSetFont" ⎕wi "Wait"[206] 0 0⍴"fmSetFont" ⎕wi "Delete"[207] "fmSV" ⎕wi "pointer" 0 ∇