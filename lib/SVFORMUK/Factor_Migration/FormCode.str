∇ Container←Form_Make;⎕wself;ControlName;childlist;list;Fieldlist;Fieldcontrol;FrameWidth;Caption;buttonsize;buttonwhere;where;size;alignment;Header;PickList;NameList;value;sortorder;SortList;MaxRow;MaxCol;Parent;level;node;no;nn;NN;x;fnsize;framelist;relTests[1] [2] Fieldlist←Fieldcontrol←list←0 0⍴""[3] "fmSV" ⎕wi "pointer" 13[4] buttonsize←25 65 ⋄ buttonwhere←¯5[5] FormName ⎕wi "caption" ((FormName ⎕wi "caption")," - Migrating Superval/21 Factor Files")[6] "fmSV" ⎕wi "∆caption" (("fmSV" ⎕wi "∆caption"),⊂("fmSV" ⎕wi "caption"))[7] :if 300<fnsize←1↑⍴⎕cr "Form_Make"[8]     "Generating Form" Win∆ProgressBar "Open"[9]     ("Menu Items:" "Form Controls:") Win∆ProgressBar "SetLabels"[10]     (1 1 "Help About") Win∆ProgressBar "FileUpdate"[11] :endif[12] [13] Container←"∆Dialog"[14] [15] ⎕wself←"fmMigFactor" ⎕wi "New" "Form" "Hide"[16] ⎕wi "caption" ("fmSV" ⎕wi "caption")[17] ⎕wi "scale" 5[18] ⎕wi "font" ("fmSV" ⎕wi "font")[19] ⎕wi "border" 2 32 64[20] ⎕wi "where" (Win∆CentrePos .70 .98×768 1024×1⌈CharSize÷13 6)[21] ⎕wi "limitwhere" (0.8×¯2↑⎕wi "where")[22] ⎕wi "tooltipwidth" 200[23] ⎕wi "onResize" "AutoResize"[24] ⎕wi "onClose" "ExitSystem ''"[25] ControlName←"fmMigFactor"[26] relTests←0[27] 0 Menu_Make "fmSV"[28] 0 Menu_Make "fmMigFactor"[29] "fmMigFactor" Win∆CutCopyPaste "Build"[30] "fmMigFactor" ⎕wi "∆helpid" 2090[31] list←list OVER "fmMigFactor.bnFactor_MigrationHelp"[32] ⎕wself←"fmMigFactor.bnFactor_MigrationHelp" ⎕wi "New" "Button"[33] ⎕wi "deferexit" 1[34] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[35] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][36] ⎕wi "∆where" ((x,2)⍴where)[37] ⎕wi "where" (("fmMigFactor" ⎕wi "size") Win∆Resize ⎕wi "∆where")[38] ⎕wi "tooltip" "SuperVal Help"[39] ⎕wi "onClick" ("fmSV.mFactor_MigrationHelp.mContext"⎕wi "onClick")[40] ⎕wi "caption" "Help"[41] :if buttonimage[42]     ⎕wi "imagelist" "fmSV.iStandard"[43]     ⎕wi "imageindex" 12[44] :endif[45] ⎕wi "visible" ¯1[46] ⎕wi "onMouseDown" "∆HelpField←'#' ⎕wi 'focus' "[47] list←list OVER "fmMigFactor.bnFactor_MigrationQuit"[48] ⎕wself←"fmMigFactor.bnFactor_MigrationQuit" ⎕wi "New" "Button"[49] ⎕wi "style" 2[50] ⎕wi "deferexit" 1[51] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[52] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][53] ⎕wi "∆where" ((x,2)⍴where)[54] ⎕wi "where" (("fmMigFactor" ⎕wi "size") Win∆Resize ⎕wi "∆where")[55] ⎕wi "tooltip" "Cancel and Return"[56] ⎕wi "onClick" ("fmSV.mFactor_MigrationFile.mQuit"⎕wi "onClick")[57] ⎕wi "caption" "Cancel"[58] ⎕wi "∆helpid" 3878[59] ⎕wi "order" .5[60] ⎕wi "visible" ¯1[61] list←list OVER "fmMigFactor.bnFactor_MigrationSave"[62] ⎕wself←"fmMigFactor.bnFactor_MigrationSave" ⎕wi "New" "Button"[63] ⎕wi "style" 1[64] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[65] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][66] ⎕wi "∆where" ((x,2)⍴where)[67] ⎕wi "where" (("fmMigFactor" ⎕wi "size") Win∆Resize ⎕wi "∆where")[68] ⎕wi "tooltip" "Save Parameters"[69] ⎕wi "onClick" ("fmSV.mFactor_MigrationFile.mSave"⎕wi "onClick")[70] ⎕wi "caption" "OK"[71] ⎕wi "∆helpid" 3879[72] ⎕wi "order" .5[73] ⎕wi "visible" ¯1[74] "fmMigFactor" ⎕wi "∆modified" 1[75] [76] ⎕wself←"fmMigFactor.lvFactorSets" ⎕wi "New" "Listview"[77] Fieldlist←Fieldlist OVER "fmMigFactor.lvFactorSets"[78] Fieldcontrol←Fieldcontrol OVER "Listview"[79] ⎕wi "∆name" "FactorSets"[80] ⎕wi "∆type" "ListviewM"[81] ⎕wi "∆mandatory" 1[82] ⎕wi "∆helpid" 3880[83] ⎕wi "tooltip" "Select the Superval/21 Factor Files/Sets you wish to be migrated"[84] list←list OVER "fmMigFactor.lvFactorSets"[85] ⎕wi "scale" 5[86] ⎕wi "viewmode" "report"[87] ⎕wi "style" 1 4 0[88] ⎕wi "∆where" (4 2⍴0.05 0 0 0 0.95 ¯45 1 0)[89] ⎕wi "where" (("fmMigFactor" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0 0 0.95 ¯45 1 0))[90] ⎕wi "∆update" "GetFactorSets"[91] (PickList NameList sortorder SortList)←4↑GetFactorSets[92] ⎕wi "list" PickList[93] NameList[;1]←NameList[;1],¨⊂4↑" "[94] ⎕wi "columndisplay" NameList[95] ⎕wi "AutoFit" "header" "all"[96] ⎕wi "∆sortorder" sortorder[97] ⎕wi "∆sortlist" SortList[98] ⎕wi "onColClick" "('fmMigFactor.lvFactorSets' 'Factor_Migration') Win∆SortListview ⎕warg"[99] :if 0=⎕nc "listviewDict"[100] listviewDict←MATRIX keysIn ListviewDict[101] :endif[102] :if ~mt sortorder←DLTB ↑((ListviewDict for "Control" "fmMigFactor.lvFactorSets") for "Parameters" "") at "Sort"[103] ("fmMigFactor.lvFactorSets" "Factor_Migration") Win∆SortListview sortorder[104] :else[105] ("fmMigFactor.lvFactorSets" "Factor_Migration") Win∆SortListview "Factors Folder"[106] :endif[107] ⎕wi "onResize" "Win∆SizeListview ⎕wi 'self'"[108] ⎕wi "onPaint" "0 Sel∆LabelUpdate 'fmMigFactor.lvFactorSets' "[109] ⎕wi "onSelect" "0 Sel∆LabelUpdate 'fmMigFactor.lvFactorSets' ⋄ 0 0⍴(⊂⎕wi 'name') Factor_Migration 'Change' "[110] ⎕wi "onExit" "⍎(0∊⍴,⎕wres←0 List∆CHECK 'fmMigFactor.lvFactorSets')/'0 0⍴(⊂⎕wi ''name'') Factor_Migration ''Change'' ' "[111] ⎕wi "onExitError" "Win∆ExitError ⎕warg"[112] ⎕wi "∆rightlabel" "fmMigFactor.lrFactorSets"[113] [114] ⎕wself←"fmMigFactor.lrFactorSets" ⎕wi "New" "Label"[115] ⎕wi "scale" 5[116] ⎕wi "extent" (CharSize×¯2↑1,19)[117] ⎕wi "style" 32[118] ⎕wi "caption" " "[119] where←4↑,"fmMigFactor.lvFactorSets" ⎕wi "∆where"[120] x←0.5×⍴where←Win∆Calcwhere where+((5+1↑2↓"fmMigFactor.lvFactorSets" ⎕wi "where") CDIV 1↑"fmMigFactor" ⎕wi "size"),0 0 0[121] ⎕wi "∆where" ((x,2)⍴where)[122] ⎕wi "where" (("fmMigFactor" ⎕wi "size") Win∆Resize ⎕wi "∆where")[123] [124] ⎕wself←"fmMigFactor.llFactorSets" ⎕wi "New" "Label"[125] ⎕wi "scale" 5[126] ⎕wi "style" 2[127] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Select Factor Sets"))[128] ⎕wi "caption" "Select Factor Sets"[129] where←4↑,"fmMigFactor.lvFactorSets" ⎕wi "∆where"[130] x←0.5×⍴where←Win∆Calcwhere where-0,(5+1↑⎕wi "extent"),0 0[131] ⎕wi "∆where" ((x,2)⍴where)[132] ⎕wi "where" (("fmMigFactor" ⎕wi "size") Win∆Resize ⎕wi "∆where")[133] [134] "fmMigFactor" ⎕wi "∆multifile" ""[135] "fmMigFactor" ⎕wi "∆singlefile" ""[136] "fmMigFactor" ⎕wi "∆format" ""[137] "fmMigFactor" ⎕wi "∆financial" 0[138] "fmMigFactor" ⎕wi "∆relrules" 0[139] "fmMigFactor" ⎕wi "∆parm" 0[140] "fmMigFactor" ⎕wi "∆decr" 0[141] "fmMigFactor" ⎕wi "∆file" 0[142] "fmMigFactor" ⎕wi "∆codefile" CodeFile[143] "fmMigFactor" ⎕wi "∆inputstype" ""[144] "fmMigFactor" ⎕wi "∆inputsentry" ""[145] "fmMigFactor" ⎕wi "∆savecn" (⍳0)[146] "fmMigFactor" ⎕wi "∆savedesc" ""[147] list←list OVER "fmMigFactor"[148] "fmMigFactor" ⎕wi "∆fieldlist" Fieldlist[149] "fmMigFactor" ⎕wi "∆fieldcontrol" Fieldcontrol[150] childlist←"fmSV" ⎕wi "∆childlist"[151] list←(⊃¯1↑childlist) OVER list[152] childlist[⍴childlist]←⊂list[153] "fmSV" ⎕wi "∆childlist" childlist[154] list←,⎕split list[155] 0 0⍴((∨/¨(⊂".mFactor_Migration")⍷¨list)/list) MultiWI "enabled" 1[156] :if 300<fnsize[157]     (fnsize fnsize ".") Win∆ProgressBar "MemberUpdate"[158]     Win∆ProgressBar "Hide"[159] :endif[160] "Init" OpenParameters "Factor_Migration"[161] "fmMigFactor.bnFactor_MigrationHelp" ⎕wi "visible" 1[162] "fmMigFactor.bnFactor_MigrationQuit" ⎕wi "visible" 1[163] "fmMigFactor.bnFactor_MigrationSave" ⎕wi "visible" 1[164] "#" ⎕wi "focus" "fmMigFactor.lvFactorSets"[165] :if ~0∊⍴,Error←Win∆Initialise "Factor_Migration"[166]     "Quit" EndModule Module[167]     "fmSV" ⎕wi "pointer" 0[168]     0 0⍴"fmMigFactor" ⎕wi "Delete"[169]     :return[170] :endif[171] :if bar_open←commandbar^"Multi"≡""[172]     bar_open←0×"fmMigFactor.mFactor_MigrationFile.m" Win∆CommandBar "OKHelp"[173] :endif[174] "fmMigFactor" ⎕wi "Paint"[175] "fmSV" ⎕wi "pointer" 11[176] "fmMigFactor" ⎕wi "onWait" "0 0⍴Factor_Migration 'Wait' ⋄ 'fmMigFactor' ⎕wi 'modified' 0"[177] 0 0⍴"fmMigFactor" ⎕wi "Wait"[178] 0 0⍴"fmMigFactor" ⎕wi "Delete"[179] "fmSV" ⎕wi "pointer" 0 ∇