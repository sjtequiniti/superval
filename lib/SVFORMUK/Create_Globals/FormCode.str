∇ Container←Form_Make;⎕wself;ControlName;childlist;list;Fieldlist;Fieldcontrol;FrameWidth;Caption;buttonsize;buttonwhere;where;size;alignment;Header;PickList;NameList;value;sortorder;SortList;MaxRow;MaxCol;Parent;level;node;no;nn;NN;x;fnsize;framelist;relTests[1] [2] Fieldlist←Fieldcontrol←list←0 0⍴""[3] "fmSV" ⎕wi "pointer" 13[4] buttonsize←25 65 ⋄ buttonwhere←¯5[5] FormName ⎕wi "caption" ((FormName ⎕wi "caption")," - Creation of Global Parameter Sets")[6] "fmSV" ⎕wi "∆caption" (("fmSV" ⎕wi "∆caption"),⊂("fmSV" ⎕wi "caption"))[7] :if 300<fnsize←1↑⍴⎕cr "Form_Make"[8]     "Generating Form" Win∆ProgressBar "Open"[9]     ("Menu Items:" "Form Controls:") Win∆ProgressBar "SetLabels"[10]     (1 1 "Help About") Win∆ProgressBar "FileUpdate"[11] :endif[12] [13] Container←"∆Wizard"[14] [15] ⎕wself←"fmCreateGlob" ⎕wi "New" "Form" "Hide"[16] ⎕wi "caption" ("fmSV" ⎕wi "caption")[17] ⎕wi "scale" 5[18] ⎕wi "font" ("fmSV" ⎕wi "font")[19] ⎕wi "border" 2 32 64[20] ⎕wi "where" (Win∆CentrePos 1.25 1.25×768 1024×1⌈CharSize÷13 6)[21] ⎕wi "limitwhere" (0.8×¯2↑⎕wi "where")[22] ⎕wi "tooltipwidth" 200[23] ⎕wi "onResize" "AutoResize"[24] ⎕wi "onClose" "ExitSystem ''"[25] ControlName←"fmCreateGlob"[26] relTests←0[27] 0 Menu_Make "fmSV"[28] 0 Menu_Make "fmCreateGlob"[29] "fmCreateGlob" Win∆CutCopyPaste "Build"[30] list←list OVER "fmCreateGlob.bnCreate_GlobalsHelp"[31] ⎕wself←"fmCreateGlob.bnCreate_GlobalsHelp" ⎕wi "New" "Button"[32] ⎕wi "deferexit" 1[33] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[34] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][35] ⎕wi "∆where" ((x,2)⍴where)[36] ⎕wi "where" (("fmCreateGlob" ⎕wi "size") Win∆Resize ⎕wi "∆where")[37] ⎕wi "tooltip" "SuperVal Help"[38] ⎕wi "onClick" ("fmSV.mCreate_GlobalsHelp.mContext"⎕wi "onClick")[39] ⎕wi "caption" "Help"[40] :if buttonimage[41]     ⎕wi "imagelist" "fmSV.iStandard"[42]     ⎕wi "imageindex" 12[43] :endif[44] ⎕wi "visible" ¯1[45] ⎕wi "onMouseDown" "∆HelpField←'#' ⎕wi 'focus' "[46] list←list OVER "fmCreateGlob.bnCreate_GlobalsQuit"[47] ⎕wself←"fmCreateGlob.bnCreate_GlobalsQuit" ⎕wi "New" "Button"[48] ⎕wi "style" 2[49] ⎕wi "deferexit" 1[50] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[51] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][52] ⎕wi "∆where" ((x,2)⍴where)[53] ⎕wi "where" (("fmCreateGlob" ⎕wi "size") Win∆Resize ⎕wi "∆where")[54] ⎕wi "tooltip" "Cancel and Return"[55] ⎕wi "onClick" ("fmSV.mCreate_GlobalsFile.mQuit"⎕wi "onClick")[56] ⎕wi "caption" "Cancel"[57] ⎕wi "∆helpid" 4132[58] ⎕wi "order" .5[59] ⎕wi "visible" ¯1[60] list←list OVER "fmCreateGlob.bnCreate_GlobalsNext"[61] ⎕wself←"fmCreateGlob.bnCreate_GlobalsNext" ⎕wi "New" "Button"[62] ⎕wi "style" 1[63] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[64] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][65] ⎕wi "∆where" ((x,2)⍴where)[66] ⎕wi "where" (("fmCreateGlob" ⎕wi "size") Win∆Resize ⎕wi "∆where")[67] ⎕wi "tooltip" "Move on to Next Form"[68] ⎕wi "onClick" ("fmSV.mCreate_GlobalsFile.mNext"⎕wi "onClick")[69] ⎕wi "caption" "Next"[70] :if buttonimage[71]     ⎕wi "imagelist" "fmSV.iStandard"[72]     ⎕wi "imageindex" 29[73] :endif[74] ⎕wi "∆helpid" 4133[75] list←list OVER "fmCreateGlob.bnCreate_GlobalsBack"[76] ⎕wself←"fmCreateGlob.bnCreate_GlobalsBack" ⎕wi "New" "Button"[77] ⎕wi "enabled" (0)[78] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[79] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][80] ⎕wi "∆where" ((x,2)⍴where)[81] ⎕wi "where" (("fmCreateGlob" ⎕wi "size") Win∆Resize ⎕wi "∆where")[82] ⎕wi "tooltip" "Move back to Previous Form"[83] ⎕wi "onClick" ("fmSV.mCreate_GlobalsFile.mBack"⎕wi "onClick")[84] ⎕wi "caption" "Back"[85] :if buttonimage[86]     ⎕wi "imagelist" "fmSV.iStandard"[87]     ⎕wi "imageindex" 28[88] :endif[89] ⎕wi "∆helpid" 4134[90] framelist←0 0⍴""[91] [92] :if 300<fnsize[93]     ((1↑⎕lc) fnsize "FrameV - Parameters for Creating Global Parameter Sets") Win∆ProgressBar "MemberUpdate"[94] :endif[95] [96] ⎕wself←"fmCreateGlob.fParms" ⎕wi "New" "Frame"[97] ⎕wi "scale" 5[98] ⎕wi "∆where" (4 2⍴0 0 0 0 1 ¯45 1 0)[99] ⎕wi "where" (("fmCreateGlob" ⎕wi "size") Win∆Resize (4 2⍴0 0 0 0 1 ¯45 1 0))[100] ⎕wi "caption" "Parameters for Creating Global Parameter Sets"[101] ⎕wi "style" 0[102] ⎕wi "onResize" "AutoResize"[103] framelist←framelist OVER "fmCreateGlob.fParms"[104] [105] ⎕wself←"fmCreateGlob.fParms.lsGlobTypes" ⎕wi "New" "List"[106] Fieldlist←Fieldlist OVER "fmCreateGlob.fParms.lsGlobTypes"[107] Fieldcontrol←Fieldcontrol OVER "List"[108] ⎕wi "∆name" "GlobTypes"[109] ⎕wi "∆type" "ListM"[110] ⎕wi "∆mandatory" 1[111] ⎕wi "∆helpid" 4135[112] ⎕wi "tooltip" "Select the Global Parameter Types to be Created"[113] ⎕wi "style" 16 1[114] PickList←⍙POPUPSdict ReadDictFile "GlobTypes"[115] PickList←⊃m2n 1 0↓PickList[116] ⎕wi "list" PickList[117] size←0 1×Win∆TextSize "??? of ??? Selected"[118] size←size⌈(2↑0.2 )×"fmCreateGlob.fParms" ⎕wi "size"[119] size←1 0 1 0\(size⌈0,20+¯1↑Win∆TextSize PickList) CDIV "fmCreateGlob.fParms" ⎕wi "size"[120] size←0.5×⍴x←Win∆Calcwhere 0.07 0 0.05 0,size[121] x←(size,2)⍴x[122] ⎕wi "∆where" x[123] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize x)[124] ⎕wi "onPaint" "Sel∆LabelUpdate 'fmCreateGlob.fParms.lsGlobTypes'"[125] ⎕wi "onClick" "Sel∆LabelUpdate 'fmCreateGlob.fParms.lsGlobTypes' ⋄ 0 0⍴(⊂⎕wi 'name') Create_Globals 'Change' "[126] ⎕wi "onExit" "⍎(0∊⍴,⎕wres←0 List∆CHECK 'fmCreateGlob.fParms.lsGlobTypes')/'0 0⍴(⊂⎕wi ''name'') Create_Globals ''Change'' ' "[127] ⎕wi "onExitError" "Win∆ExitError ⎕warg"[128] ⎕wi "∆rightlabel" "fmCreateGlob.fParms.lrGlobTypes"[129] [130] ⎕wself←"fmCreateGlob.fParms.lrGlobTypes" ⎕wi "New" "Label"[131] ⎕wi "scale" 5[132] ⎕wi "extent" (CharSize×¯2↑1,19)[133] ⎕wi "style" 32[134] ⎕wi "caption" " "[135] where←4↑,"fmCreateGlob.fParms.lsGlobTypes" ⎕wi "∆where"[136] x←0.5×⍴where←Win∆Calcwhere where+((5+1↑2↓"fmCreateGlob.fParms.lsGlobTypes" ⎕wi "where") CDIV 1↑"fmCreateGlob.fParms" ⎕wi "size"),0 0 0[137] ⎕wi "∆where" ((x,2)⍴where)[138] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize ⎕wi "∆where")[139] [140] ⎕wself←"fmCreateGlob.fParms.llGlobTypes" ⎕wi "New" "Label"[141] ⎕wi "scale" 5[142] ⎕wi "style" 2[143] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Global Parameter Types"))[144] ⎕wi "caption" "Global Parameter Types"[145] where←4↑,"fmCreateGlob.fParms.lsGlobTypes" ⎕wi "∆where"[146] x←0.5×⍴where←Win∆Calcwhere where-0,(5+1↑⎕wi "extent"),0 0[147] ⎕wi "∆where" ((x,2)⍴where)[148] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize ⎕wi "∆where")[149] [150] ⎕wself←"fmCreateGlob.fParms.lHeading1" ⎕wi "New" "Label"[151] ⎕wi "scale" 5[152] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Differentiate unnamed/unmatched Global Parameter Sets by the following:"))[153] ⎕wi "caption" "Differentiate unnamed/unmatched Global Parameter Sets by the following:"[154] ⎕wi "∆where" (2 2⍴0.1 0 0.3 0)[155] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize (2 2⍴0.1 0 0.3 0))[156] [157] ⎕wself←"fmCreateGlob.fParms.ckglobParm1" ⎕wi "New" "Check"[158] Fieldlist←Fieldlist OVER "fmCreateGlob.fParms.ckglobParm1"[159] Fieldcontrol←Fieldcontrol OVER "Check"[160] ⎕wi "∆name" "globParm[1;]"[161] ⎕wi "∆type" "Check"[162] ⎕wi "∆helpid" 4136[163] ⎕wi "tooltip" "Check this to differentiate Global Parameters by Membership Groups (ie Actives, Deferreds and Pensioners kept separate)"[164] ⎕wi "style" 0[165] ⎕wi "caption" "Membership Groups (ie Actives, Deferreds and Pensioners kept separate)"[166] ⎕wi "∆where" (2 2⍴0.13 0 0.3 0)[167] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize (2 2⍴0.13 0 0.3 0))[168] ⎕wi "extent" ((0 5×CharSize)+Win∆TextSize ⎕wi "caption")[169] ⎕wi "onClick" "(0 0⍴(⊂⎕wi 'name') Create_Globals 'Change' )"[170] [171] ⎕wself←"fmCreateGlob.fParms.ckglobParm2" ⎕wi "New" "Check"[172] Fieldlist←Fieldlist OVER "fmCreateGlob.fParms.ckglobParm2"[173] Fieldcontrol←Fieldcontrol OVER "Check"[174] ⎕wi "∆name" "globParm[2;]"[175] ⎕wi "∆type" "Check"[176] ⎕wi "∆helpid" 4136[177] ⎕wi "tooltip" "Check this to differentiate Global Parameters by the Decrement Types (eg Retirement and Ill-Health Global Parameters kept separate)"[178] ⎕wi "style" 0[179] ⎕wi "caption" "Decrement Types (eg Retirement and Ill-Health Global Parameters kept separate)"[180] ⎕wi "∆where" (2 2⍴0.18 0 0.3 0)[181] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize (2 2⍴0.18 0 0.3 0))[182] ⎕wi "extent" ((0 5×CharSize)+Win∆TextSize ⎕wi "caption")[183] ⎕wi "onClick" "(0 0⍴(⊂⎕wi 'name') Create_Globals 'Change' )"[184] [185] ⎕wself←"fmCreateGlob.fParms.ckglobParm3" ⎕wi "New" "Check"[186] Fieldlist←Fieldlist OVER "fmCreateGlob.fParms.ckglobParm3"[187] Fieldcontrol←Fieldcontrol OVER "Check"[188] ⎕wi "∆name" "globParm[3;]"[189] ⎕wi "∆type" "Check"[190] ⎕wi "∆helpid" 4136[191] ⎕wi "tooltip" "Check this to differentiate Global Parameters by the Field Types (eg Cash /Cash on Top and Early/Late Retirement Global Parameters kept separate)"[192] ⎕wi "style" 0[193] ⎕wi "caption" "Field Types (eg Cash and Cash on Top Global Parameters kept separate)"[194] ⎕wi "∆where" (2 2⍴0.23 0 0.3 0)[195] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize (2 2⍴0.23 0 0.3 0))[196] ⎕wi "extent" ((0 5×CharSize)+Win∆TextSize ⎕wi "caption")[197] ⎕wi "onClick" "(0 0⍴(⊂⎕wi 'name') Create_Globals 'Change' )"[198] [199] ⎕wself←"fmCreateGlob.fParms.ckglobParm4" ⎕wi "New" "Check"[200] Fieldlist←Fieldlist OVER "fmCreateGlob.fParms.ckglobParm4"[201] Fieldcontrol←Fieldcontrol OVER "Check"[202] ⎕wi "∆name" "globParm[4;]"[203] ⎕wi "∆type" "Check"[204] ⎕wi "∆helpid" 4136[205] ⎕wi "tooltip" "Check this to differentiate Global Parameters by the Sex (ie Male and Female Global Parameters kept separate)"[206] ⎕wi "style" 0[207] ⎕wi "caption" "Sex (ie Male and Female Global Parameters kept separate)"[208] ⎕wi "∆where" (2 2⍴0.28 0 0.3 0)[209] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize (2 2⍴0.28 0 0.3 0))[210] ⎕wi "extent" ((0 5×CharSize)+Win∆TextSize ⎕wi "caption")[211] ⎕wi "onClick" "(0 0⍴(⊂⎕wi 'name') Create_Globals 'Change' )"[212] [213] ⎕wself←"fmCreateGlob.fParms.lHeading2" ⎕wi "New" "Label"[214] ⎕wi "scale" 5[215] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Use Existing Global Parameter Sets if matching Migrated Parameter Sets"))[216] ⎕wi "caption" "Use Existing Global Parameter Sets if matching Migrated Parameter Sets"[217] ⎕wi "∆where" (2 2⍴0.1 0 0.65 0)[218] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize (2 2⍴0.1 0 0.65 0))[219] [220] ⎕wself←"fmCreateGlob.fParms.ckmigGpMatch1" ⎕wi "New" "Check"[221] Fieldlist←Fieldlist OVER "fmCreateGlob.fParms.ckmigGpMatch1"[222] Fieldcontrol←Fieldcontrol OVER "Check"[223] ⎕wi "∆name" "migGpMatch[1;]"[224] ⎕wi "∆type" "Check"[225] ⎕wi "∆helpid" 4137[226] ⎕wi "tooltip" "Check this if you wish use Existing Global Parameter Sets for Actives Bases where they match migrated Parameter Sets"[227] ⎕wi "style" 0[228] ⎕wi "caption" "Actives"[229] ⎕wi "∆where" (2 2⍴0.13 0 0.65 0)[230] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize (2 2⍴0.13 0 0.65 0))[231] ⎕wi "extent" ((0 5×CharSize)+Win∆TextSize ⎕wi "caption")[232] ⎕wi "onClick" "(0 0⍴(⊂⎕wi 'name') Create_Globals 'Change' )"[233] [234] ⎕wself←"fmCreateGlob.fParms.ckmigGpMatch2" ⎕wi "New" "Check"[235] Fieldlist←Fieldlist OVER "fmCreateGlob.fParms.ckmigGpMatch2"[236] Fieldcontrol←Fieldcontrol OVER "Check"[237] ⎕wi "∆name" "migGpMatch[2;]"[238] ⎕wi "∆type" "Check"[239] ⎕wi "∆helpid" 4137[240] ⎕wi "tooltip" "Check this if you wish use Existing Global Parameter Sets for Deferreds Bases where they match migrated Parameter Sets"[241] ⎕wi "style" 0[242] ⎕wi "caption" "Deferreds"[243] ⎕wi "∆where" (2 2⍴0.18 0 0.65 0)[244] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize (2 2⍴0.18 0 0.65 0))[245] ⎕wi "extent" ((0 5×CharSize)+Win∆TextSize ⎕wi "caption")[246] ⎕wi "onClick" "(0 0⍴(⊂⎕wi 'name') Create_Globals 'Change' )"[247] [248] ⎕wself←"fmCreateGlob.fParms.ckmigGpMatch3" ⎕wi "New" "Check"[249] Fieldlist←Fieldlist OVER "fmCreateGlob.fParms.ckmigGpMatch3"[250] Fieldcontrol←Fieldcontrol OVER "Check"[251] ⎕wi "∆name" "migGpMatch[3;]"[252] ⎕wi "∆type" "Check"[253] ⎕wi "∆helpid" 4137[254] ⎕wi "tooltip" "Check this if you wish use Existing Global Parameter Sets for Pensioners Bases where they match migrated Parameter Sets"[255] ⎕wi "style" 0[256] ⎕wi "caption" "Pensioners"[257] ⎕wi "∆where" (2 2⍴0.23 0 0.65 0)[258] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize (2 2⍴0.23 0 0.65 0))[259] ⎕wi "extent" ((0 5×CharSize)+Win∆TextSize ⎕wi "caption")[260] ⎕wi "onClick" "(0 0⍴(⊂⎕wi 'name') Create_Globals 'Change' )"[261] [262] ⎕wself←"fmCreateGlob.fParms.lvSavedParms" ⎕wi "New" "Listview"[263] Fieldlist←Fieldlist OVER "fmCreateGlob.fParms.lvSavedParms"[264] Fieldcontrol←Fieldcontrol OVER "Listview"[265] ⎕wi "∆name" "SavedParms"[266] ⎕wi "∆type" "ListviewM"[267] ⎕wi "∆mandatory" 1[268] ⎕wi "∆helpid" 4138[269] ⎕wi "tooltip" "Select the Basis Parameter Set(s) from which to create Globals"[270] list←list OVER "fmCreateGlob.fParms.lvSavedParms"[271] ⎕wi "scale" 5[272] ⎕wi "viewmode" "report"[273] ⎕wi "style" 1 4 0[274] ⎕wi "∆where" (4 2⍴0.35 0 0.05 0 0.65 ¯45 0.9 0)[275] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize (4 2⍴0.35 0 0.05 0 0.65 ¯45 0.9 0))[276] ⎕wi "∆update" "('Actives_Basis' 'Deferreds_Basis' 'Pensioners_Basis') GetParmDesc 'BasisFile'"[277] (PickList NameList sortorder SortList)←4↑('Actives_Basis' 'Deferreds_Basis' 'Pensioners_Basis') GetParmDesc 'BasisFile'[278] ⎕wi "list" PickList[279] NameList[;1]←NameList[;1],¨⊂4↑" "[280] ⎕wi "columndisplay" NameList[281] ⎕wi "AutoFit" "header" "all"[282] ⎕wi "∆sortorder" sortorder[283] ⎕wi "∆sortlist" SortList[284] ⎕wi "onColClick" "('fmCreateGlob.fParms.lvSavedParms' 'Create_Globals') Win∆SortListview ⎕warg"[285] :if 0=⎕nc "listviewDict"[286] listviewDict←MATRIX keysIn ListviewDict[287] :endif[288] :if ~mt sortorder←DLTB ↑((ListviewDict for "Control" "fmCreateGlob.fParms.lvSavedParms") for "Parameters" "") at "Sort"[289] ("fmCreateGlob.fParms.lvSavedParms" "Create_Globals") Win∆SortListview sortorder[290] :else[291] ("fmCreateGlob.fParms.lvSavedParms" "Create_Globals") Win∆SortListview "Date/Time Saved"[292] :endif[293] ⎕wi "onResize" "Win∆SizeListview ⎕wi 'self'"[294] ⎕wi "onPaint" "0 Sel∆LabelUpdate 'fmCreateGlob.fParms.lvSavedParms' "[295] ⎕wi "onSelect" "0 Sel∆LabelUpdate 'fmCreateGlob.fParms.lvSavedParms' ⋄ 0 0⍴(⊂⎕wi 'name') Create_Globals 'Change' "[296] ⎕wi "onExit" "⍎(0∊⍴,⎕wres←0 List∆CHECK 'fmCreateGlob.fParms.lvSavedParms')/'0 0⍴(⊂⎕wi ''name'') Create_Globals ''Change'' ' "[297] ⎕wi "onExitError" "Win∆ExitError ⎕warg"[298] ⎕wi "∆rightlabel" "fmCreateGlob.fParms.lrSavedParms"[299] [300] ⎕wself←"fmCreateGlob.fParms.lrSavedParms" ⎕wi "New" "Label"[301] ⎕wi "scale" 5[302] ⎕wi "extent" (CharSize×¯2↑1,19)[303] ⎕wi "style" 32[304] ⎕wi "caption" " "[305] where←4↑,"fmCreateGlob.fParms.lvSavedParms" ⎕wi "∆where"[306] x←0.5×⍴where←Win∆Calcwhere where+((5+1↑2↓"fmCreateGlob.fParms.lvSavedParms" ⎕wi "where") CDIV 1↑"fmCreateGlob.fParms" ⎕wi "size"),0 0 0[307] ⎕wi "∆where" ((x,2)⍴where)[308] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize ⎕wi "∆where")[309] [310] ⎕wself←"fmCreateGlob.fParms.llSavedParms" ⎕wi "New" "Label"[311] ⎕wi "scale" 5[312] ⎕wi "style" 2[313] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Saved Parameter Sets"))[314] ⎕wi "caption" "Saved Parameter Sets"[315] where←4↑,"fmCreateGlob.fParms.lvSavedParms" ⎕wi "∆where"[316] x←0.5×⍴where←Win∆Calcwhere where-0,(5+1↑⎕wi "extent"),0 0[317] ⎕wi "∆where" ((x,2)⍴where)[318] ⎕wi "where" (("fmCreateGlob.fParms" ⎕wi "size") Win∆Resize ⎕wi "∆where")[319] [320] :if 300<fnsize[321]     ((1↑⎕lc) fnsize "FrameV - Decrement Rate Assumptions") Win∆ProgressBar "MemberUpdate"[322] :endif[323] [324] ⎕wself←"fmCreateGlob.fDecRates" ⎕wi "New" "Frame"[325] ⎕wi "scale" 5[326] ⎕wi "∆where" (4 2⍴0 0 0 0 1 ¯45 1 0)[327] ⎕wi "where" (("fmCreateGlob" ⎕wi "size") Win∆Resize (4 2⍴0 0 0 0 1 ¯45 1 0))[328] ⎕wi "caption" "Decrement Rate Assumptions"[329] ⎕wi "style" 0[330] ⎕wi "onResize" "AutoResize"[331] framelist←framelist OVER "fmCreateGlob.fDecRates"[332] [333] ⎕wself←"fmCreateGlob.fDecRates.trDecRates" ⎕wi "New" "Tree"[334] Fieldlist←Fieldlist OVER "fmCreateGlob.fDecRates.trDecRates"[335] Fieldcontrol←Fieldcontrol OVER "Tree"[336] ⎕wi "∆name" "DecRates"[337] ⎕wi "∆type" "Tree"[338] ⎕wi "∆helpid" 4139[339] ⎕wi "tooltip" "Primary Nodes (when selected) can be:
. Renamed (by typing new description)
. Cloned (via Right Click Menu)
. Deleted (via Right Click Menu)
Secondary Nodes can be dragged and dropped to associate with a different Primary Node (with the same value)"[340] ⎕wi "style" 0 8[341] ⎕wi "∆where" (4 2⍴0.05 0 0.01 0 0.92 0 0.48 0)[342] ⎕wi "where" (("fmCreateGlob.fDecRates" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.01 0 0.92 0 0.48 0))[343] PickList←DummyTree[344] Win∆PopulateTree PickList "Decrement Rate Assumptions"[345] ⎕wi "onChange" "0 0⍴(⊂⎕wi 'name') Create_Globals 'Change'"[346] ⎕wgive 0[347] [348] ⎕wself←"fmCreateGlob.fDecRates.edResults" ⎕wi "New" "Edit"[349] Fieldlist←Fieldlist OVER "fmCreateGlob.fDecRates.edResults"[350] Fieldcontrol←Fieldcontrol OVER "Edit"[351] ⎕wi "∆name" "Results"[352] ⎕wi "∆type" "Multi"[353] ⎕wi "style" 4096[354] ⎕wi "tooltip" "The Parameter settings of the currently selected node."[355] ⎕wi "∆name" "Results"[356] ⎕wi "scale" 5[357] ⎕wi "style" ((⎕wi "style"),4 16 2048 8192 64 )[358] ⎕wi "∆where" (4 2⍴0.05 0 0.51 0 0.92 0 0.48 0)[359] ⎕wi "where" (("fmCreateGlob.fDecRates" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.51 0 0.92 0 0.48 0))[360] [361] ⎕wself←"fmCreateGlob.fDecRates.llResults" ⎕wi "New" "Label"[362] ⎕wi "scale" 5[363] ⎕wi "style" 2[364] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Parameter Setting"))[365] ⎕wi "caption" "Parameter Setting"[366] where←4↑,"fmCreateGlob.fDecRates.edResults" ⎕wi "∆where"[367] x←0.5×⍴where←Win∆Calcwhere where-0,(5+1↑⎕wi "extent"),0 0[368] ⎕wi "∆where" ((x,2)⍴where)[369] ⎕wi "where" (("fmCreateGlob.fDecRates" ⎕wi "size") Win∆Resize ⎕wi "∆where")[370] [371] :if 300<fnsize[372]     ((1↑⎕lc) fnsize "FrameV - Spouse Assumptions") Win∆ProgressBar "MemberUpdate"[373] :endif[374] [375] ⎕wself←"fmCreateGlob.fSpouse" ⎕wi "New" "Frame"[376] ⎕wi "scale" 5[377] ⎕wi "∆where" (4 2⍴0 0 0 0 1 ¯45 1 0)[378] ⎕wi "where" (("fmCreateGlob" ⎕wi "size") Win∆Resize (4 2⍴0 0 0 0 1 ¯45 1 0))[379] ⎕wi "caption" "Spouse Assumptions"[380] ⎕wi "style" 0[381] ⎕wi "onResize" "AutoResize"[382] framelist←framelist OVER "fmCreateGlob.fSpouse"[383] [384] ⎕wself←"fmCreateGlob.fSpouse.trSpouse" ⎕wi "New" "Tree"[385] Fieldlist←Fieldlist OVER "fmCreateGlob.fSpouse.trSpouse"[386] Fieldcontrol←Fieldcontrol OVER "Tree"[387] ⎕wi "∆name" "Spouse"[388] ⎕wi "∆type" "Tree"[389] ⎕wi "∆helpid" 4139[390] ⎕wi "tooltip" "Primary Nodes (when selected) can be:
. Renamed (by typing new description)
. Cloned (via Right Click Menu)
. Deleted (via Right Click Menu)
Secondary Nodes can be dragged and dropped to associate with a different Primary Node (with the same value)"[391] ⎕wi "style" 0 8[392] ⎕wi "∆where" (4 2⍴0.05 0 0.01 0 0.92 0 0.48 0)[393] ⎕wi "where" (("fmCreateGlob.fSpouse" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.01 0 0.92 0 0.48 0))[394] PickList←DummyTree[395] Win∆PopulateTree PickList "Spouse Assumptions"[396] ⎕wi "onChange" "0 0⍴(⊂⎕wi 'name') Create_Globals 'Change'"[397] ⎕wgive 0[398] [399] ⎕wself←"fmCreateGlob.fSpouse.edResults" ⎕wi "New" "Edit"[400] Fieldlist←Fieldlist OVER "fmCreateGlob.fSpouse.edResults"[401] Fieldcontrol←Fieldcontrol OVER "Edit"[402] ⎕wi "∆name" "Results"[403] ⎕wi "∆type" "Multi"[404] ⎕wi "style" 4096[405] ⎕wi "tooltip" "The Parameter settings of the currently selected node."[406] ⎕wi "∆name" "Results"[407] ⎕wi "scale" 5[408] ⎕wi "style" ((⎕wi "style"),4 16 2048 8192 64 )[409] ⎕wi "∆where" (4 2⍴0.05 0 0.51 0 0.92 0 0.48 0)[410] ⎕wi "where" (("fmCreateGlob.fSpouse" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.51 0 0.92 0 0.48 0))[411] [412] ⎕wself←"fmCreateGlob.fSpouse.llResults" ⎕wi "New" "Label"[413] ⎕wi "scale" 5[414] ⎕wi "style" 2[415] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Parameter Setting"))[416] ⎕wi "caption" "Parameter Setting"[417] where←4↑,"fmCreateGlob.fSpouse.edResults" ⎕wi "∆where"[418] x←0.5×⍴where←Win∆Calcwhere where-0,(5+1↑⎕wi "extent"),0 0[419] ⎕wi "∆where" ((x,2)⍴where)[420] ⎕wi "where" (("fmCreateGlob.fSpouse" ⎕wi "size") Win∆Resize ⎕wi "∆where")[421] [422] :if 300<fnsize[423]     ((1↑⎕lc) fnsize "FrameV - Retirement Age Assumptions") Win∆ProgressBar "MemberUpdate"[424] :endif[425] [426] ⎕wself←"fmCreateGlob.fRetAge" ⎕wi "New" "Frame"[427] ⎕wi "scale" 5[428] ⎕wi "∆where" (4 2⍴0 0 0 0 1 ¯45 1 0)[429] ⎕wi "where" (("fmCreateGlob" ⎕wi "size") Win∆Resize (4 2⍴0 0 0 0 1 ¯45 1 0))[430] ⎕wi "caption" "Retirement Age Assumptions"[431] ⎕wi "style" 0[432] ⎕wi "onResize" "AutoResize"[433] framelist←framelist OVER "fmCreateGlob.fRetAge"[434] [435] ⎕wself←"fmCreateGlob.fRetAge.trRetAge" ⎕wi "New" "Tree"[436] Fieldlist←Fieldlist OVER "fmCreateGlob.fRetAge.trRetAge"[437] Fieldcontrol←Fieldcontrol OVER "Tree"[438] ⎕wi "∆name" "RetAge"[439] ⎕wi "∆type" "Tree"[440] ⎕wi "∆helpid" 4139[441] ⎕wi "tooltip" "Primary Nodes (when selected) can be:
. Renamed (by typing new description)
. Cloned (via Right Click Menu)
. Deleted (via Right Click Menu)
Secondary Nodes can be dragged and dropped to associate with a different Primary Node (with the same value)"[442] ⎕wi "style" 0 8[443] ⎕wi "∆where" (4 2⍴0.05 0 0.01 0 0.92 0 0.48 0)[444] ⎕wi "where" (("fmCreateGlob.fRetAge" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.01 0 0.92 0 0.48 0))[445] PickList←DummyTree[446] Win∆PopulateTree PickList "Retirement Age Assumptions"[447] ⎕wi "onChange" "0 0⍴(⊂⎕wi 'name') Create_Globals 'Change'"[448] ⎕wgive 0[449] [450] ⎕wself←"fmCreateGlob.fRetAge.edResults" ⎕wi "New" "Edit"[451] Fieldlist←Fieldlist OVER "fmCreateGlob.fRetAge.edResults"[452] Fieldcontrol←Fieldcontrol OVER "Edit"[453] ⎕wi "∆name" "Results"[454] ⎕wi "∆type" "Multi"[455] ⎕wi "style" 4096[456] ⎕wi "tooltip" "The Parameter settings of the currently selected node."[457] ⎕wi "∆name" "Results"[458] ⎕wi "scale" 5[459] ⎕wi "style" ((⎕wi "style"),4 16 2048 8192 64 )[460] ⎕wi "∆where" (4 2⍴0.05 0 0.51 0 0.92 0 0.48 0)[461] ⎕wi "where" (("fmCreateGlob.fRetAge" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.51 0 0.92 0 0.48 0))[462] [463] ⎕wself←"fmCreateGlob.fRetAge.llResults" ⎕wi "New" "Label"[464] ⎕wi "scale" 5[465] ⎕wi "style" 2[466] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Parameter Setting"))[467] ⎕wi "caption" "Parameter Setting"[468] where←4↑,"fmCreateGlob.fRetAge.edResults" ⎕wi "∆where"[469] x←0.5×⍴where←Win∆Calcwhere where-0,(5+1↑⎕wi "extent"),0 0[470] ⎕wi "∆where" ((x,2)⍴where)[471] ⎕wi "where" (("fmCreateGlob.fRetAge" ⎕wi "size") Win∆Resize ⎕wi "∆where")[472] [473] :if 300<fnsize[474]     ((1↑⎕lc) fnsize "FrameV - Retirement Factor Assumptions") Win∆ProgressBar "MemberUpdate"[475] :endif[476] [477] ⎕wself←"fmCreateGlob.fRetFact" ⎕wi "New" "Frame"[478] ⎕wi "scale" 5[479] ⎕wi "∆where" (4 2⍴0 0 0 0 1 ¯45 1 0)[480] ⎕wi "where" (("fmCreateGlob" ⎕wi "size") Win∆Resize (4 2⍴0 0 0 0 1 ¯45 1 0))[481] ⎕wi "caption" "Retirement Factor Assumptions"[482] ⎕wi "style" 0[483] ⎕wi "onResize" "AutoResize"[484] framelist←framelist OVER "fmCreateGlob.fRetFact"[485] [486] ⎕wself←"fmCreateGlob.fRetFact.trRetFact" ⎕wi "New" "Tree"[487] Fieldlist←Fieldlist OVER "fmCreateGlob.fRetFact.trRetFact"[488] Fieldcontrol←Fieldcontrol OVER "Tree"[489] ⎕wi "∆name" "RetFact"[490] ⎕wi "∆type" "Tree"[491] ⎕wi "∆helpid" 4139[492] ⎕wi "tooltip" "Primary Nodes (when selected) can be:
. Renamed (by typing new description)
. Cloned (via Right Click Menu)
. Deleted (via Right Click Menu)
Secondary Nodes can be dragged and dropped to associate with a different Primary Node (with the same value)"[493] ⎕wi "style" 0 8[494] ⎕wi "∆where" (4 2⍴0.05 0 0.01 0 0.92 0 0.48 0)[495] ⎕wi "where" (("fmCreateGlob.fRetFact" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.01 0 0.92 0 0.48 0))[496] PickList←DummyTree[497] Win∆PopulateTree PickList "Retirement Factor Assumptions"[498] ⎕wi "onChange" "0 0⍴(⊂⎕wi 'name') Create_Globals 'Change'"[499] ⎕wgive 0[500] [501] ⎕wself←"fmCreateGlob.fRetFact.edResults" ⎕wi "New" "Edit"[502] Fieldlist←Fieldlist OVER "fmCreateGlob.fRetFact.edResults"[503] Fieldcontrol←Fieldcontrol OVER "Edit"[504] ⎕wi "∆name" "Results"[505] ⎕wi "∆type" "Multi"[506] ⎕wi "style" 4096[507] ⎕wi "tooltip" "The Parameter settings of the currently selected node."[508] ⎕wi "∆name" "Results"[509] ⎕wi "scale" 5[510] ⎕wi "style" ((⎕wi "style"),4 16 2048 8192 64 )[511] ⎕wi "∆where" (4 2⍴0.05 0 0.51 0 0.92 0 0.48 0)[512] ⎕wi "where" (("fmCreateGlob.fRetFact" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.51 0 0.92 0 0.48 0))[513] [514] ⎕wself←"fmCreateGlob.fRetFact.llResults" ⎕wi "New" "Label"[515] ⎕wi "scale" 5[516] ⎕wi "style" 2[517] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Parameter Setting"))[518] ⎕wi "caption" "Parameter Setting"[519] where←4↑,"fmCreateGlob.fRetFact.edResults" ⎕wi "∆where"[520] x←0.5×⍴where←Win∆Calcwhere where-0,(5+1↑⎕wi "extent"),0 0[521] ⎕wi "∆where" ((x,2)⍴where)[522] ⎕wi "where" (("fmCreateGlob.fRetFact" ⎕wi "size") Win∆Resize ⎕wi "∆where")[523] [524] :if 300<fnsize[525]     ((1↑⎕lc) fnsize "FrameV - Retirement Cash Assumptions") Win∆ProgressBar "MemberUpdate"[526] :endif[527] [528] ⎕wself←"fmCreateGlob.fRetCash" ⎕wi "New" "Frame"[529] ⎕wi "scale" 5[530] ⎕wi "∆where" (4 2⍴0 0 0 0 1 ¯45 1 0)[531] ⎕wi "where" (("fmCreateGlob" ⎕wi "size") Win∆Resize (4 2⍴0 0 0 0 1 ¯45 1 0))[532] ⎕wi "caption" "Retirement Cash Assumptions"[533] ⎕wi "style" 0[534] ⎕wi "onResize" "AutoResize"[535] framelist←framelist OVER "fmCreateGlob.fRetCash"[536] [537] ⎕wself←"fmCreateGlob.fRetCash.trRetCash" ⎕wi "New" "Tree"[538] Fieldlist←Fieldlist OVER "fmCreateGlob.fRetCash.trRetCash"[539] Fieldcontrol←Fieldcontrol OVER "Tree"[540] ⎕wi "∆name" "RetCash"[541] ⎕wi "∆type" "Tree"[542] ⎕wi "∆helpid" 4139[543] ⎕wi "tooltip" "Primary Nodes (when selected) can be:
. Renamed (by typing new description)
. Cloned (via Right Click Menu)
. Deleted (via Right Click Menu)
Secondary Nodes can be dragged and dropped to associate with a different Primary Node (with the same value)"[544] ⎕wi "style" 0 8[545] ⎕wi "∆where" (4 2⍴0.05 0 0.01 0 0.92 0 0.48 0)[546] ⎕wi "where" (("fmCreateGlob.fRetCash" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.01 0 0.92 0 0.48 0))[547] PickList←DummyTree[548] Win∆PopulateTree PickList "Retirement Cash Assumptions"[549] ⎕wi "onChange" "0 0⍴(⊂⎕wi 'name') Create_Globals 'Change'"[550] ⎕wgive 0[551] [552] ⎕wself←"fmCreateGlob.fRetCash.edResults" ⎕wi "New" "Edit"[553] Fieldlist←Fieldlist OVER "fmCreateGlob.fRetCash.edResults"[554] Fieldcontrol←Fieldcontrol OVER "Edit"[555] ⎕wi "∆name" "Results"[556] ⎕wi "∆type" "Multi"[557] ⎕wi "style" 4096[558] ⎕wi "tooltip" "The Parameter settings of the currently selected node."[559] ⎕wi "∆name" "Results"[560] ⎕wi "scale" 5[561] ⎕wi "style" ((⎕wi "style"),4 16 2048 8192 64 )[562] ⎕wi "∆where" (4 2⍴0.05 0 0.51 0 0.92 0 0.48 0)[563] ⎕wi "where" (("fmCreateGlob.fRetCash" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.51 0 0.92 0 0.48 0))[564] [565] ⎕wself←"fmCreateGlob.fRetCash.llResults" ⎕wi "New" "Label"[566] ⎕wi "scale" 5[567] ⎕wi "style" 2[568] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Parameter Settings"))[569] ⎕wi "caption" "Parameter Settings"[570] where←4↑,"fmCreateGlob.fRetCash.edResults" ⎕wi "∆where"[571] x←0.5×⍴where←Win∆Calcwhere where-0,(5+1↑⎕wi "extent"),0 0[572] ⎕wi "∆where" ((x,2)⍴where)[573] ⎕wi "where" (("fmCreateGlob.fRetCash" ⎕wi "size") Win∆Resize ⎕wi "∆where")[574] [575] :if 300<fnsize[576]     ((1↑⎕lc) fnsize "FrameV - Commutation Tables Assumptions") Win∆ProgressBar "MemberUpdate"[577] :endif[578] [579] ⎕wself←"fmCreateGlob.fCommTab" ⎕wi "New" "Frame"[580] ⎕wi "scale" 5[581] ⎕wi "∆where" (4 2⍴0 0 0 0 1 ¯45 1 0)[582] ⎕wi "where" (("fmCreateGlob" ⎕wi "size") Win∆Resize (4 2⍴0 0 0 0 1 ¯45 1 0))[583] ⎕wi "caption" "Commutation Tables Assumptions"[584] ⎕wi "style" 0[585] ⎕wi "onResize" "AutoResize"[586] framelist←framelist OVER "fmCreateGlob.fCommTab"[587] [588] ⎕wself←"fmCreateGlob.fCommTab.trCommTab" ⎕wi "New" "Tree"[589] Fieldlist←Fieldlist OVER "fmCreateGlob.fCommTab.trCommTab"[590] Fieldcontrol←Fieldcontrol OVER "Tree"[591] ⎕wi "∆name" "CommTab"[592] ⎕wi "∆type" "Tree"[593] ⎕wi "∆helpid" 4139[594] ⎕wi "tooltip" "Primary Nodes (when selected) can be:
. Renamed (by typing new description)
. Cloned (via Right Click Menu)
. Deleted (via Right Click Menu)
Secondary Nodes can be dragged and dropped to associate with a different Primary Node (with the same value)"[595] ⎕wi "style" 0 8[596] ⎕wi "∆where" (4 2⍴0.05 0 0.01 0 0.92 0 0.48 0)[597] ⎕wi "where" (("fmCreateGlob.fCommTab" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.01 0 0.92 0 0.48 0))[598] PickList←DummyTree[599] Win∆PopulateTree PickList "Commutation Tables Assumptions"[600] ⎕wi "onChange" "0 0⍴(⊂⎕wi 'name') Create_Globals 'Change'"[601] ⎕wgive 0[602] [603] ⎕wself←"fmCreateGlob.fCommTab.edResults" ⎕wi "New" "Edit"[604] Fieldlist←Fieldlist OVER "fmCreateGlob.fCommTab.edResults"[605] Fieldcontrol←Fieldcontrol OVER "Edit"[606] ⎕wi "∆name" "Results"[607] ⎕wi "∆type" "Multi"[608] ⎕wi "style" 4096[609] ⎕wi "tooltip" "The Parameter settings of the currently selected node."[610] ⎕wi "∆name" "Results"[611] ⎕wi "scale" 5[612] ⎕wi "style" ((⎕wi "style"),4 16 2048 8192 64 )[613] ⎕wi "∆where" (4 2⍴0.05 0 0.51 0 0.92 0 0.48 0)[614] ⎕wi "where" (("fmCreateGlob.fCommTab" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.51 0 0.92 0 0.48 0))[615] [616] ⎕wself←"fmCreateGlob.fCommTab.llResults" ⎕wi "New" "Label"[617] ⎕wi "scale" 5[618] ⎕wi "style" 2[619] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Parameter Settings"))[620] ⎕wi "caption" "Parameter Settings"[621] where←4↑,"fmCreateGlob.fCommTab.edResults" ⎕wi "∆where"[622] x←0.5×⍴where←Win∆Calcwhere where-0,(5+1↑⎕wi "extent"),0 0[623] ⎕wi "∆where" ((x,2)⍴where)[624] ⎕wi "where" (("fmCreateGlob.fCommTab" ⎕wi "size") Win∆Resize ⎕wi "∆where")[625] [626] :if 300<fnsize[627]     ((1↑⎕lc) fnsize "FrameV - Spreading Date Assumptions") Win∆ProgressBar "MemberUpdate"[628] :endif[629] [630] ⎕wself←"fmCreateGlob.fSpreadDate" ⎕wi "New" "Frame"[631] ⎕wi "scale" 5[632] ⎕wi "∆where" (4 2⍴0 0 0 0 1 ¯45 1 0)[633] ⎕wi "where" (("fmCreateGlob" ⎕wi "size") Win∆Resize (4 2⍴0 0 0 0 1 ¯45 1 0))[634] ⎕wi "caption" "Spreading Date Assumptions"[635] ⎕wi "style" 0[636] ⎕wi "onResize" "AutoResize"[637] framelist←framelist OVER "fmCreateGlob.fSpreadDate"[638] [639] ⎕wself←"fmCreateGlob.fSpreadDate.trSpreadDate" ⎕wi "New" "Tree"[640] Fieldlist←Fieldlist OVER "fmCreateGlob.fSpreadDate.trSpreadDate"[641] Fieldcontrol←Fieldcontrol OVER "Tree"[642] ⎕wi "∆name" "SpreadDate"[643] ⎕wi "∆type" "Tree"[644] ⎕wi "∆helpid" 4139[645] ⎕wi "tooltip" "Primary Nodes (when selected) can be:
. Renamed (by typing new description)
. Cloned (via Right Click Menu)
. Deleted (via Right Click Menu)
Secondary Nodes can be dragged and dropped to associate with a different Primary Node (with the same value)"[646] ⎕wi "style" 0 8[647] ⎕wi "∆where" (4 2⍴0.05 0 0.01 0 0.92 0 0.48 0)[648] ⎕wi "where" (("fmCreateGlob.fSpreadDate" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.01 0 0.92 0 0.48 0))[649] PickList←DummyTree[650] Win∆PopulateTree PickList "Spreading Date Assumptions"[651] ⎕wi "onChange" "0 0⍴(⊂⎕wi 'name') Create_Globals 'Change'"[652] ⎕wgive 0[653] [654] ⎕wself←"fmCreateGlob.fSpreadDate.edResults" ⎕wi "New" "Edit"[655] Fieldlist←Fieldlist OVER "fmCreateGlob.fSpreadDate.edResults"[656] Fieldcontrol←Fieldcontrol OVER "Edit"[657] ⎕wi "∆name" "Results"[658] ⎕wi "∆type" "Multi"[659] ⎕wi "style" 4096[660] ⎕wi "tooltip" "The Parameter settings of the currently selected node."[661] ⎕wi "∆name" "Results"[662] ⎕wi "scale" 5[663] ⎕wi "style" ((⎕wi "style"),4 16 2048 8192 64 )[664] ⎕wi "∆where" (4 2⍴0.05 0 0.51 0 0.92 0 0.48 0)[665] ⎕wi "where" (("fmCreateGlob.fSpreadDate" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.51 0 0.92 0 0.48 0))[666] [667] ⎕wself←"fmCreateGlob.fSpreadDate.llResults" ⎕wi "New" "Label"[668] ⎕wi "scale" 5[669] ⎕wi "style" 2[670] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Parameter Settings"))[671] ⎕wi "caption" "Parameter Settings"[672] where←4↑,"fmCreateGlob.fSpreadDate.edResults" ⎕wi "∆where"[673] x←0.5×⍴where←Win∆Calcwhere where-0,(5+1↑⎕wi "extent"),0 0[674] ⎕wi "∆where" ((x,2)⍴where)[675] ⎕wi "where" (("fmCreateGlob.fSpreadDate" ⎕wi "size") Win∆Resize ⎕wi "∆where")[676] [677] :if 300<fnsize[678]     ((1↑⎕lc) fnsize "FrameV - Scheme/Basis Global Parameters - Summary") Win∆ProgressBar "MemberUpdate"[679] :endif[680] [681] ⎕wself←"fmCreateGlob.fSummary" ⎕wi "New" "Frame"[682] ⎕wi "scale" 5[683] ⎕wi "∆where" (4 2⍴0 0 0 0 1 ¯45 1 0)[684] ⎕wi "where" (("fmCreateGlob" ⎕wi "size") Win∆Resize (4 2⍴0 0 0 0 1 ¯45 1 0))[685] ⎕wi "caption" "Scheme/Basis Global Parameters - Summary"[686] ⎕wi "style" 0[687] ⎕wi "onResize" "AutoResize"[688] framelist←framelist OVER "fmCreateGlob.fSummary"[689] [690] ⎕wself←"fmCreateGlob.fSummary.webSummary" ⎕wi "New" "Microsoft Web Browser"[691] Fieldlist←Fieldlist OVER "fmCreateGlob.fSummary.webSummary"[692] Fieldcontrol←Fieldcontrol OVER "Microsoft Web Browser"[693] ⎕wi "∆name" "Summary"[694] ⎕wi "∆type" "Web"[695] ⎕wi "∆helpid" 4140[696] ⎕wi "∆where" (4 2⍴0.05 0 0.01 0 0.9 0 0.98 0)[697] ⎕wi "where" (("fmCreateGlob.fSummary" ⎕wi "size") Win∆Resize (4 2⍴0.05 0 0.01 0 0.9 0 0.98 0))[698] [699] ⎕wself←"fmCreateGlob.fSummary.llSummary" ⎕wi "New" "Label"[700] ⎕wi "scale" 5[701] ⎕wi "style" 2[702] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Summary Report"))[703] ⎕wi "caption" "Summary Report"[704] where←4↑,"fmCreateGlob.fSummary.webSummary" ⎕wi "∆where"[705] x←0.5×⍴where←Win∆Calcwhere where-0,(5+1↑⎕wi "extent"),0 0[706] ⎕wi "∆where" ((x,2)⍴where)[707] ⎕wi "where" (("fmCreateGlob.fSummary" ⎕wi "size") Win∆Resize ⎕wi "∆where")[708] [709] "fmCreateGlob" ⎕wi "∆multifile" ""[710] "fmCreateGlob" ⎕wi "∆singlefile" ""[711] "fmCreateGlob" ⎕wi "∆format" ""[712] "fmCreateGlob" ⎕wi "∆financial" 0[713] "fmCreateGlob" ⎕wi "∆relrules" 0[714] "fmCreateGlob" ⎕wi "∆parm" 0[715] "fmCreateGlob" ⎕wi "∆decr" 0[716] "fmCreateGlob" ⎕wi "∆file" 0[717] "fmCreateGlob" ⎕wi "∆codefile" CodeFile[718] "fmCreateGlob" ⎕wi "∆inputstype" "ClientFile"[719] "fmCreateGlob" ⎕wi "∆inputsentry" "Single"[720] "fmCreateGlob" ⎕wi "∆savecn" (⍳0)[721] "fmCreateGlob" ⎕wi "∆savedesc" ""[722] list←list OVER "fmCreateGlob"[723] "fmCreateGlob" ⎕wi "∆fieldlist" Fieldlist[724] "fmCreateGlob" ⎕wi "∆fieldcontrol" Fieldcontrol[725] childlist←"fmSV" ⎕wi "∆childlist"[726] list←(⊃¯1↑childlist) OVER list[727] childlist[⍴childlist]←⊂list[728] "fmSV" ⎕wi "∆childlist" childlist[729] list←,⎕split list[730] 0 0⍴((∨/¨(⊂".mCreate_Globals")⍷¨list)/list) MultiWI "enabled" 1[731] :if 300<fnsize[732]     (fnsize fnsize ".") Win∆ProgressBar "MemberUpdate"[733]     Win∆ProgressBar "Hide"[734] :endif[735] "Init" OpenParameters "Create_Globals"[736] "fmCreateGlob.bnCreate_GlobalsHelp" ⎕wi "visible" 1[737] "fmCreateGlob.bnCreate_GlobalsQuit" ⎕wi "visible" 1[738] "#" ⎕wi "focus" "fmCreateGlob.fParms.lsGlobTypes"[739] "fmCreateGlob" ⎕wi "∆framelist" framelist[740] (⎕split 1 0↓framelist) MultiWI "visible" ¯1[741] :if ~0∊⍴,Error←Win∆Initialise "Create_Globals"[742]     "Quit" EndModule Module[743]     "fmSV" ⎕wi "pointer" 0[744]     0 0⍴"fmCreateGlob" ⎕wi "Delete"[745]     :return[746] :endif[747] :if bar_open←commandbar^"Multi"≡"Single"[748]     bar_open←0×"fmCreateGlob.mCreate_GlobalsFile.m" Win∆CommandBar "CancelHelp"[749] :endif[750] "fmCreateGlob" ⎕wi "Paint"[751] "fmSV" ⎕wi "pointer" 11[752] "fmCreateGlob" ⎕wi "onWait" "0 0⍴Create_Globals 'Wait' ⋄ 'fmCreateGlob' ⎕wi 'modified' 0"[753] 0 0⍴"fmCreateGlob" ⎕wi "Wait"[754] 0 0⍴"fmCreateGlob" ⎕wi "Delete"[755] "fmSV" ⎕wi "pointer" 0 ∇