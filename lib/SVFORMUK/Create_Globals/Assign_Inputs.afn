    ∇ Assign_Inputs modified;PickList;list;n;NameList;value;MaxRow;MaxCol;selection;nn;no;package;warnings;var;control;row
[1]   warnings←0 0⍴""
[2]   package←pack ⍙VALUESdict ReadDictFile "Create_Globals" "" "Names"
[3]   
[4]   :if 1=ControlName ⎕wi "∆relrules"
[5]       :for control :in nub FormFields at "control"
[6]           "Create_Globals" ParmColor control "" ⍬ 0
[7]       :endfor
[8]   :endif
[9]   PickList←"fmCreateGlob.fParms.lsGlobTypes" ⎕wi "list"
[10]  :if 0∊⍴selection←PickList ExactTLU SStoMAT GlobTypes
[11]      "fmCreateGlob.fParms.lsGlobTypes" ⎕wi "value" ((×1↑⍴PickList)⍴1)
[12]      modified←⌈/modified,"fmCreateGlob.fParms.lsGlobTypes" ⎕wi "value"
[13]  :else
[14]      "fmCreateGlob.fParms.lsGlobTypes" ⎕wi "visible" ¯1
[15]      "fmCreateGlob.fParms.lsGlobTypes" ⎕wi "value" selection
[16]      "fmCreateGlob.fParms.lsGlobTypes" ⎕wi "visible" 1
[17]  :endif
[18]  "fmCreateGlob.fParms.ckglobParm1" ⎕wi "value" (zwb globParm[1;])
[19]  "fmCreateGlob.fParms.ckglobParm2" ⎕wi "value" (zwb globParm[2;])
[20]  "fmCreateGlob.fParms.ckglobParm3" ⎕wi "value" (zwb globParm[3;])
[21]  "fmCreateGlob.fParms.ckglobParm4" ⎕wi "value" (zwb globParm[4;])
[22]  "fmCreateGlob.fParms.ckmigGpMatch1" ⎕wi "value" (zwb migGpMatch[1;])
[23]  "fmCreateGlob.fParms.ckmigGpMatch2" ⎕wi "value" (zwb migGpMatch[2;])
[24]  "fmCreateGlob.fParms.ckmigGpMatch3" ⎕wi "value" (zwb migGpMatch[3;])
[25]  PickList←"fmCreateGlob.fParms.lvSavedParms" ⎕wi "list"
[26]  :if 0∊⍴PickList
[27]      value←⍬
[28]  :else
[29]      list←(1 0×⍴PickList)⍴""
[30]      :for n :in 2+⍳1⌈+/"⍺"=((MATRIX SavedParms) OVER " ")[1;]
[31]          list←list,"⍺",(⊃PickList[;n])," "
[32]      :endfor
[33]      list←m2n list
[34]      NameList←m2n MATRIX SavedParms
[35]      value←(list∊NameList)/PickList[;1]
[36]  :endif
[37]  :if 0∊⍴value ⋄ :andif ~0∊⍴PickList ⋄ :andif 1
[38]      value←PickList[1;1] ⋄ modified←1
[39]  :endif
[40]  "fmCreateGlob.fParms.lvSavedParms" ⎕wi "value" value
[41]  0 0⍴"fmCreateGlob.fParms.lvSavedParms" ⎕wi "EnsureVisible" ((1↑value),1)
[42]  :if 0≠value←"fmCreateGlob.fDecRates.trDecRates" ⎕wi "value"
[43]      "fmCreateGlob.fDecRates.trDecRates" ⎕wi "value" 1
[44]      "fmCreateGlob.fDecRates.trDecRates" ⎕wi "value" value
[45]  :endif
[46]  "fmCreateGlob.fDecRates.edResults" ⎕wi "text" (1↓,⎕tcnl,Results)
[47]  :if 0≠value←"fmCreateGlob.fSpouse.trSpouse" ⎕wi "value"
[48]      "fmCreateGlob.fSpouse.trSpouse" ⎕wi "value" 1
[49]      "fmCreateGlob.fSpouse.trSpouse" ⎕wi "value" value
[50]  :endif
[51]  "fmCreateGlob.fSpouse.edResults" ⎕wi "text" (1↓,⎕tcnl,Results)
[52]  :if 0≠value←"fmCreateGlob.fRetAge.trRetAge" ⎕wi "value"
[53]      "fmCreateGlob.fRetAge.trRetAge" ⎕wi "value" 1
[54]      "fmCreateGlob.fRetAge.trRetAge" ⎕wi "value" value
[55]  :endif
[56]  "fmCreateGlob.fRetAge.edResults" ⎕wi "text" (1↓,⎕tcnl,Results)
[57]  :if 0≠value←"fmCreateGlob.fRetFact.trRetFact" ⎕wi "value"
[58]      "fmCreateGlob.fRetFact.trRetFact" ⎕wi "value" 1
[59]      "fmCreateGlob.fRetFact.trRetFact" ⎕wi "value" value
[60]  :endif
[61]  "fmCreateGlob.fRetFact.edResults" ⎕wi "text" (1↓,⎕tcnl,Results)
[62]  :if 0≠value←"fmCreateGlob.fRetCash.trRetCash" ⎕wi "value"
[63]      "fmCreateGlob.fRetCash.trRetCash" ⎕wi "value" 1
[64]      "fmCreateGlob.fRetCash.trRetCash" ⎕wi "value" value
[65]  :endif
[66]  "fmCreateGlob.fRetCash.edResults" ⎕wi "text" (1↓,⎕tcnl,Results)
[67]  :if 0≠value←"fmCreateGlob.fCommTab.trCommTab" ⎕wi "value"
[68]      "fmCreateGlob.fCommTab.trCommTab" ⎕wi "value" 1
[69]      "fmCreateGlob.fCommTab.trCommTab" ⎕wi "value" value
[70]  :endif
[71]  "fmCreateGlob.fCommTab.edResults" ⎕wi "text" (1↓,⎕tcnl,Results)
[72]  :if 0≠value←"fmCreateGlob.fSpreadDate.trSpreadDate" ⎕wi "value"
[73]      "fmCreateGlob.fSpreadDate.trSpreadDate" ⎕wi "value" 1
[74]      "fmCreateGlob.fSpreadDate.trSpreadDate" ⎕wi "value" value
[75]  :endif
[76]  "fmCreateGlob.fSpreadDate.edResults" ⎕wi "text" (1↓,⎕tcnl,Results)
[77]  :if 1=ControlName ⎕wi "∆relrules" ⋄ :andif ×rowsIn Comment_Create_Globals
[78]      :for var :in spin Comment_Create_Globals at "variable" "row" ⋄ (var row)←var
[79]          "Create_Globals" ParmColor ((FormFields for "variable" var) at "control"),var row 1
[80]      :endfor
[81]  :endif
[82]  :if ~0∊⍴,warnings
[83]      MDISPLAY DLTMB warnings,⎕tcnl
[84]      Win∆AssignVars "fmCreateGlob"
[85]  :endif
[86]  :if 0=modified←modified⌈~package≡pack ⍙VALUESdict ReadDictFile "Create_Globals" "" "Names"
[87]      "fmCreateGlob" ⎕wi "modified" 0
[88]  :endif
    ∇
