∇ Container←Form_Make;⎕wself;ControlName;childlist;list;Fieldlist;Fieldcontrol;FrameWidth;Caption;buttonsize;buttonwhere;where;size;alignment;Header;PickList;NameList;value;sortorder;SortList;MaxRow;MaxCol;Parent;level;node;no;nn;NN;x;fnsize;framelist;relTests[1] [2] Fieldlist←Fieldcontrol←list←0 0⍴""[3] "fmSV" ⎕wi "pointer" 13[4] buttonsize←25 65 ⋄ buttonwhere←¯5[5] FormName ⎕wi "caption" ((FormName ⎕wi "caption")," - Import Parameter Sets")[6] "fmSV" ⎕wi "∆caption" (("fmSV" ⎕wi "∆caption"),⊂("fmSV" ⎕wi "caption"))[7] :if 300<fnsize←1↑⍴⎕cr "Form_Make"[8]     "Generating Form" Win∆ProgressBar "Open"[9]     ("Menu Items:" "Form Controls:") Win∆ProgressBar "SetLabels"[10]     (1 1 "Help About") Win∆ProgressBar "FileUpdate"[11] :endif[12] [13] Container←"∆Dialog"[14] [15] ⎕wself←"fmImportParm" ⎕wi "New" "Form" "Hide"[16] ⎕wi "caption" ("fmSV" ⎕wi "caption")[17] ⎕wi "scale" 5[18] ⎕wi "font" ("fmSV" ⎕wi "font")[19] ⎕wi "border" 2 32 64[20] ⎕wi "where" (Win∆CentrePos .6 .8 ×768 1024×1⌈CharSize÷13 6)[21] ⎕wi "limitwhere" (0.8×¯2↑⎕wi "where")[22] ⎕wi "tooltipwidth" 200[23] ⎕wi "onResize" "AutoResize"[24] ⎕wi "onClose" "ExitSystem ''"[25] ControlName←"fmImportParm"[26] relTests←0[27] 0 Menu_Make "fmSV"[28] 0 Menu_Make "fmImportParm"[29] "fmImportParm" Win∆CutCopyPaste "Build"[30] "fmImportParm" ⎕wi "∆helpid" 2157[31] list←list OVER "fmImportParm.bnImport_ParametersHelp"[32] ⎕wself←"fmImportParm.bnImport_ParametersHelp" ⎕wi "New" "Button"[33] ⎕wi "deferexit" 1[34] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[35] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][36] ⎕wi "∆where" ((x,2)⍴where)[37] ⎕wi "where" (("fmImportParm" ⎕wi "size") Win∆Resize ⎕wi "∆where")[38] ⎕wi "tooltip" "SuperVal Help"[39] ⎕wi "onClick" ("fmSV.mImport_ParametersHelp.mContext"⎕wi "onClick")[40] ⎕wi "caption" "Help"[41] :if buttonimage[42]     ⎕wi "imagelist" "fmSV.iStandard"[43]     ⎕wi "imageindex" 12[44] :endif[45] ⎕wi "visible" ¯1[46] ⎕wi "onMouseDown" "∆HelpField←'#' ⎕wi 'focus' "[47] list←list OVER "fmImportParm.bnImport_ParametersQuit"[48] ⎕wself←"fmImportParm.bnImport_ParametersQuit" ⎕wi "New" "Button"[49] ⎕wi "style" 2[50] ⎕wi "deferexit" 1[51] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[52] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][53] ⎕wi "∆where" ((x,2)⍴where)[54] ⎕wi "where" (("fmImportParm" ⎕wi "size") Win∆Resize ⎕wi "∆where")[55] ⎕wi "tooltip" "Cancel and Return"[56] ⎕wi "onClick" ("fmSV.mImport_ParametersFile.mQuit"⎕wi "onClick")[57] ⎕wi "caption" "Cancel"[58] ⎕wi "∆helpid" 4204[59] ⎕wi "order" .5[60] ⎕wi "visible" ¯1[61] list←list OVER "fmImportParm.bnImport_ParametersSave"[62] ⎕wself←"fmImportParm.bnImport_ParametersSave" ⎕wi "New" "Button"[63] ⎕wi "style" 1[64] ⎕wi "extent" (size←1×buttonsize×1⌈CharSize÷13 6)[65] x←0.5×⍴where←Win∆Calcwhere 1,(¯10-size[1]),1,buttonwhere←buttonwhere-5+size[2][66] ⎕wi "∆where" ((x,2)⍴where)[67] ⎕wi "where" (("fmImportParm" ⎕wi "size") Win∆Resize ⎕wi "∆where")[68] ⎕wi "tooltip" "Save Parameters"[69] ⎕wi "onClick" ("fmSV.mImport_ParametersFile.mSave"⎕wi "onClick")[70] ⎕wi "caption" "OK"[71] ⎕wi "∆helpid" 4205[72] ⎕wi "order" .5[73] ⎕wi "visible" ¯1[74] [75] ⎕wself←"fmImportParm.lvParmSets" ⎕wi "New" "Listview"[76] Fieldlist←Fieldlist OVER "fmImportParm.lvParmSets"[77] Fieldcontrol←Fieldcontrol OVER "Listview"[78] ⎕wi "∆name" "ParmSets"[79] ⎕wi "∆type" "Listview"[80] ⎕wi "∆mandatory" 1[81] ⎕wi "∆helpid" 4206[82] ⎕wi "tooltip" "Select the Parameter Set to be Imported"[83] list←list OVER "fmImportParm.lvParmSets"[84] ⎕wi "scale" 5[85] ⎕wi "viewmode" "report"[86] ⎕wi "style" 1 4 8[87] ⎕wi "∆where" (4 2⍴0.3 0 0.05 0 0.7 ¯45 0.9 0)[88] ⎕wi "where" (("fmImportParm" ⎕wi "size") Win∆Resize (4 2⍴0.3 0 0.05 0 0.7 ¯45 0.9 0))[89] ⎕wi "∆update" "GetParmSets ''"[90] (PickList NameList sortorder SortList)←4↑GetParmSets ''[91] ⎕wi "list" PickList[92] NameList[;1]←NameList[;1],¨⊂4↑" "[93] ⎕wi "columndisplay" NameList[94] ⎕wi "AutoFit" "header" "all"[95] ⎕wi "∆sortorder" sortorder[96] ⎕wi "∆sortlist" SortList[97] ⎕wi "onColClick" "('fmImportParm.lvParmSets' 'Import_Parameters') Win∆SortListview ⎕warg"[98] :if 0=⎕nc "listviewDict"[99] listviewDict←MATRIX keysIn ListviewDict[100] :endif[101] :if ~mt sortorder←DLTB ↑((ListviewDict for "Control" "fmImportParm.lvParmSets") for "Parameters" "") at "Sort"[102] ("fmImportParm.lvParmSets" "Import_Parameters") Win∆SortListview sortorder[103] :else[104] ("fmImportParm.lvParmSets" "Import_Parameters") Win∆SortListview "Date/Time Saved"[105] :endif[106] ⎕wi "onResize" "Win∆SizeListview ⎕wi 'self'"[107] ⎕wi "onSelect" "0 0⍴(⊂⎕wi 'name') Import_Parameters 'Change' "[108] ⎕wi "onExit" "⎕wres←0 List∆CHECK 'fmImportParm.lvParmSets'"[109] ⎕wi "onExitError" "Win∆ExitError ⎕warg"[110] [111] ⎕wself←"fmImportParm.edImportDir" ⎕wi "New" "Edit"[112] Fieldlist←Fieldlist OVER "fmImportParm.edImportDir"[113] Fieldcontrol←Fieldcontrol OVER "Edit"[114] ⎕wi "∆name" "ImportDir"[115] ⎕wi "∆type" "Char"[116] ⎕wi "∆mandatory" 1[117] ⎕wi "∆helpid" 4207[118] ⎕wi "tooltip" "Specify the Import Folder"[119] ⎕wi "∆where" (2 2⍴0.15 0 0.2 0)[120] ⎕wi "where" (("fmImportParm" ⎕wi "size") Win∆Resize (2 2⍴0.15 0 0.2 0))[121] ⎕wi "onExit" "⍎(0∊⍴,⎕wres←0 INPUT∆CHECK 'fmImportParm.edImportDir')/'0 0⍴(⊂⎕wi ''name'') Import_Parameters ''Change'' ' "[122] ⎕wi "onExitError" "Win∆ExitError ⎕warg"[123] ⎕wi "extent" (2+CharSize×1 81)[124] ⎕wi "targetformats" "FileName"[125] ⎕wi "onDrop" "'fmImportParm.edImportDir' Win∆DropTarget 1 ' '"[126] ⎕wi "pointer" ">cur 1001 shell32.dll"[127] ⎕wi "onMouseDouble" "⎕wi 'text' ('Select Import Folder' GetFolder ⎕wi 'text')"[128] ⎕wi "onChange" "0 0⍴(⊂⎕wi 'name') Import_Parameters 'Change' "[129] [130] ⎕wself←"fmImportParm.llImportDir" ⎕wi "New" "Label"[131] ⎕wi "scale" 5[132] ⎕wi "style" 2[133] ⎕wi "extent" (↑⎕wi "Draw" ("?text" "Import Folder"))[134] ⎕wi "caption" "Import Folder"[135] where←4↑,"fmImportParm.edImportDir" ⎕wi "∆where"[136] x←0.5×⍴where←Win∆Calcwhere where-0 ¯3 0,10+¯1↑⎕wi "extent"[137] ⎕wi "∆where" ((x,2)⍴where)[138] ⎕wi "where" (("fmImportParm" ⎕wi "size") Win∆Resize ⎕wi "∆where")[139] [140] "fmImportParm" ⎕wi "∆multifile" ""[141] "fmImportParm" ⎕wi "∆singlefile" ""[142] "fmImportParm" ⎕wi "∆format" ""[143] "fmImportParm" ⎕wi "∆financial" 0[144] "fmImportParm" ⎕wi "∆relrules" 0[145] "fmImportParm" ⎕wi "∆parm" 0[146] "fmImportParm" ⎕wi "∆decr" 0[147] "fmImportParm" ⎕wi "∆file" 0[148] "fmImportParm" ⎕wi "∆codefile" CodeFile[149] "fmImportParm" ⎕wi "∆inputstype" "ClientFile"[150] "fmImportParm" ⎕wi "∆inputsentry" "Single"[151] "fmImportParm" ⎕wi "∆savecn" (⍳0)[152] "fmImportParm" ⎕wi "∆savedesc" ""[153] list←list OVER "fmImportParm"[154] "fmImportParm" ⎕wi "∆fieldlist" Fieldlist[155] "fmImportParm" ⎕wi "∆fieldcontrol" Fieldcontrol[156] childlist←"fmSV" ⎕wi "∆childlist"[157] list←(⊃¯1↑childlist) OVER list[158] childlist[⍴childlist]←⊂list[159] "fmSV" ⎕wi "∆childlist" childlist[160] list←,⎕split list[161] 0 0⍴((∨/¨(⊂".mImport_Parameters")⍷¨list)/list) MultiWI "enabled" 1[162] :if 300<fnsize[163]     (fnsize fnsize ".") Win∆ProgressBar "MemberUpdate"[164]     Win∆ProgressBar "Hide"[165] :endif[166] "Init" OpenParameters "Import_Parameters"[167] "fmImportParm.bnImport_ParametersHelp" ⎕wi "visible" 1[168] "fmImportParm.bnImport_ParametersQuit" ⎕wi "visible" 1[169] "fmImportParm.bnImport_ParametersSave" ⎕wi "visible" 1[170] "#" ⎕wi "focus" "fmImportParm.lvParmSets"[171] :if ~0∊⍴,Error←Win∆Initialise "Import_Parameters"[172]     "Quit" EndModule Module[173]     "fmSV" ⎕wi "pointer" 0[174]     0 0⍴"fmImportParm" ⎕wi "Delete"[175]     :return[176] :endif[177] :if bar_open←commandbar^"Multi"≡"Single"[178]     bar_open←0×"fmImportParm.mImport_ParametersFile.m" Win∆CommandBar "OKHelp"[179] :endif[180] "fmImportParm" ⎕wi "Paint"[181] "fmSV" ⎕wi "pointer" 11[182] "fmImportParm" ⎕wi "onWait" "0 0⍴Import_Parameters 'Wait' ⋄ 'fmImportParm' ⎕wi 'modified' 0"[183] 0 0⍴"fmImportParm" ⎕wi "Wait"[184] 0 0⍴"fmImportParm" ⎕wi "Delete"[185] "fmSV" ⎕wi "pointer" 0 ∇