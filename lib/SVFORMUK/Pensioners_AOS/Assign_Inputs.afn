    ∇ Assign_Inputs modified;PickList;list;n;NameList;value;MaxRow;MaxCol;selection;nn;no;package;warnings;var;control;row
[1]   warnings←0 0⍴""
[2]   package←pack ⍙VALUESdict ReadDictFile "Pensioners_AOS" "" "Names"
[3]   
[4]   :if 1=ControlName ⎕wi "∆relrules"
[5]       :for control :in nub FormFields at "control"
[6]           "Pensioners_AOS" ParmColor control "" ⍬ 0
[7]       :endfor
[8]   :endif
[9]   "fmSV.fPenAOS.fData.ckFileSelections" ⎕wi "value" (zwb FileSelections)
[10]  "FILES" Win∆Inherits "Pensfile"
[11]  GetAbsFileList "Fund"
[12]  warnings←warnings OVER "Pensioner Data File" Win∆FileRelative "FILES" "lrFILES"
[13]  "fmSV.fPenAOS.fData.edFILES" ⎕wi "text" (DLTB FILES)
[14]  GetAbsFileList "Fund"
[15]  warnings←warnings OVER "Pensioner Data File" Win∆FileRelative "fILENAME" "lrfILENAME"
[16]  "fmSV.fPenAOS.fData.edfILENAME" ⎕wi "text" (DLTB fILENAME)
[17]  "Format" Win∆Inherits "FormatP"
[18]  PickList←"fmSV.fPenAOS.fData.cbFormat" ⎕wi "list"
[19]  warnings←warnings OVER "Data Format" Win∆FormatRelative "Format" "lrFormat"
[20]  selection←(StripText PickList) ExactTLU DLTB StripText Format
[21]  :if mt selection
[22]      modified←⌈/modified,1
[23]  :endif
[24]  "fmSV.fPenAOS.fData.cbFormat" ⎕wi "value" (¯1↑1,selection)
[25]  "fmSV.fPenAOS.fData.ckUseSex" ⎕wi "value" (zwb UseSex)
[26]  "fmSV.fPenAOS.fData.ckUseCat" ⎕wi "value" (zwb UseCat)
[27]  PickList←"fmSV.fPenAOS.fData.lsCatSels" ⎕wi "list"
[28]  :if 0∊⍴selection←PickList ExactTLU SStoMAT CatSels
[29]      "fmSV.fPenAOS.fData.lsCatSels" ⎕wi "value" ((×1↑⍴PickList)⍴1)
[30]      modified←⌈/modified,"fmSV.fPenAOS.fData.lsCatSels" ⎕wi "value"
[31]  :else
[32]      "fmSV.fPenAOS.fData.lsCatSels" ⎕wi "visible" ¯1
[33]      "fmSV.fPenAOS.fData.lsCatSels" ⎕wi "value" selection
[34]      "fmSV.fPenAOS.fData.lsCatSels" ⎕wi "visible" (¯1+2×0)
[35]  :endif
[36]  "fmSV.fPenAOS.fData.ckUseSubs" ⎕wi "value" (zwb UseSubs)
[37]  "fmSV.fPenAOS.fData.ckDeleteSubs" ⎕wi "value" (zwb DeleteSubs)
[38]  PickList←"fmSV.fPenAOS.fTypes.lsRetType" ⎕wi "list"
[39]  :if 0∊⍴selection←PickList ExactTLU SStoMAT RetType
[40]      "fmSV.fPenAOS.fTypes.lsRetType" ⎕wi "value" ((×1↑⍴PickList)⍴0)
[41]      modified←⌈/modified,"fmSV.fPenAOS.fTypes.lsRetType" ⎕wi "value"
[42]  :else
[43]      "fmSV.fPenAOS.fTypes.lsRetType" ⎕wi "visible" ¯1
[44]      "fmSV.fPenAOS.fTypes.lsRetType" ⎕wi "value" selection
[45]      "fmSV.fPenAOS.fTypes.lsRetType" ⎕wi "visible" 1
[46]  :endif
[47]  PickList←"fmSV.fPenAOS.fTypes.lsDISType" ⎕wi "list"
[48]  :if 0∊⍴selection←PickList ExactTLU SStoMAT DISType
[49]      "fmSV.fPenAOS.fTypes.lsDISType" ⎕wi "value" ((×1↑⍴PickList)⍴0)
[50]      modified←⌈/modified,"fmSV.fPenAOS.fTypes.lsDISType" ⎕wi "value"
[51]  :else
[52]      "fmSV.fPenAOS.fTypes.lsDISType" ⎕wi "visible" ¯1
[53]      "fmSV.fPenAOS.fTypes.lsDISType" ⎕wi "value" selection
[54]      "fmSV.fPenAOS.fTypes.lsDISType" ⎕wi "visible" 1
[55]  :endif
[56]  PickList←"fmSV.fPenAOS.fTypes.lsIllType" ⎕wi "list"
[57]  :if 0∊⍴selection←PickList ExactTLU SStoMAT IllType
[58]      "fmSV.fPenAOS.fTypes.lsIllType" ⎕wi "value" ((×1↑⍴PickList)⍴0)
[59]      modified←⌈/modified,"fmSV.fPenAOS.fTypes.lsIllType" ⎕wi "value"
[60]  :else
[61]      "fmSV.fPenAOS.fTypes.lsIllType" ⎕wi "visible" ¯1
[62]      "fmSV.fPenAOS.fTypes.lsIllType" ⎕wi "value" selection
[63]      "fmSV.fPenAOS.fTypes.lsIllType" ⎕wi "visible" 1
[64]  :endif
[65]  PickList←"fmSV.fPenAOS.fTypes.lsWthType" ⎕wi "list"
[66]  :if 0∊⍴selection←PickList ExactTLU SStoMAT WthType
[67]      "fmSV.fPenAOS.fTypes.lsWthType" ⎕wi "value" ((×1↑⍴PickList)⍴0)
[68]      modified←⌈/modified,"fmSV.fPenAOS.fTypes.lsWthType" ⎕wi "value"
[69]  :else
[70]      "fmSV.fPenAOS.fTypes.lsWthType" ⎕wi "visible" ¯1
[71]      "fmSV.fPenAOS.fTypes.lsWthType" ⎕wi "value" selection
[72]      "fmSV.fPenAOS.fTypes.lsWthType" ⎕wi "visible" 1
[73]  :endif
[74]  PickList←"fmSV.fPenAOS.fExit.lsRetCode" ⎕wi "list"
[75]  :if 0∊⍴selection←PickList ExactTLU SStoMAT RetCode
[76]      "fmSV.fPenAOS.fExit.lsRetCode" ⎕wi "value" ((×1↑⍴PickList)⍴0)
[77]      modified←⌈/modified,"fmSV.fPenAOS.fExit.lsRetCode" ⎕wi "value"
[78]  :else
[79]      "fmSV.fPenAOS.fExit.lsRetCode" ⎕wi "visible" ¯1
[80]      "fmSV.fPenAOS.fExit.lsRetCode" ⎕wi "value" selection
[81]      "fmSV.fPenAOS.fExit.lsRetCode" ⎕wi "visible" (¯1+2×0)
[82]  :endif
[83]  PickList←"fmSV.fPenAOS.fExit.lsDISCode" ⎕wi "list"
[84]  :if 0∊⍴selection←PickList ExactTLU SStoMAT DISCode
[85]      "fmSV.fPenAOS.fExit.lsDISCode" ⎕wi "value" ((×1↑⍴PickList)⍴0)
[86]      modified←⌈/modified,"fmSV.fPenAOS.fExit.lsDISCode" ⎕wi "value"
[87]  :else
[88]      "fmSV.fPenAOS.fExit.lsDISCode" ⎕wi "visible" ¯1
[89]      "fmSV.fPenAOS.fExit.lsDISCode" ⎕wi "value" selection
[90]      "fmSV.fPenAOS.fExit.lsDISCode" ⎕wi "visible" 1
[91]  :endif
[92]  :if 1=ControlName ⎕wi "∆relrules" ⋄ :andif ×rowsIn Comment_Pensioners_AOS
[93]      :for var :in spin Comment_Pensioners_AOS at "variable" "row" ⋄ (var row)←var
[94]          "Pensioners_AOS" ParmColor ((FormFields for "variable" var) at "control"),var row 1
[95]      :endfor
[96]  :endif
[97]  :if ~0∊⍴,warnings
[98]      MDISPLAY DLTMB warnings,⎕tcnl
[99]      Win∆AssignVars "fmSV.fPenAOS"
[100] :endif
[101] :if 0=modified←modified⌈~package≡pack ⍙VALUESdict ReadDictFile "Pensioners_AOS" "" "Names"
[102]     "fmSV.fPenAOS" ⎕wi "modified" 0
[103] :endif
    ∇
