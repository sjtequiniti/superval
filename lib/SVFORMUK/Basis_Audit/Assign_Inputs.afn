    ∇ Assign_Inputs modified;PickList;list;n;NameList;value;MaxRow;MaxCol;selection;nn;no;package;warnings;var;control;row[1]   warnings←0 0⍴""[2]   package←pack ⍙VALUESdict ReadDictFile "Basis_Audit" "" "Names"[3]   [4]   :if 1=ControlName ⎕wi "∆relrules"[5]       :for control :in nub FormFields at "control"[6]           "Basis_Audit" ParmColor control "" ⍬ 0[7]       :endfor[8]   :endif[9]   PickList←"fmBasisAudit.lvSavedParms" ⎕wi "list"[10]  :if 0∊⍴PickList[11]      value←⍬[12]  :else[13]      list←(1 0×⍴PickList)⍴""[14]      :for n :in 2+⍳1⌈+/"⍺"=((MATRIX SavedParms) OVER " ")[1;][15]          list←list,"⍺",(⊃PickList[;n])," "[16]      :endfor[17]      list←m2n list[18]      NameList←m2n MATRIX SavedParms[19]      value←(list∊NameList)/PickList[;1][20]  :endif[21]  :if 0∊⍴value ⋄ :andif ~0∊⍴PickList ⋄ :andif 1[22]      value←PickList[1;1] ⋄ modified←1[23]  :endif[24]  "fmBasisAudit.lvSavedParms" ⎕wi "value" value[25]  0 0⍴"fmBasisAudit.lvSavedParms" ⎕wi "EnsureVisible" ((1↑value),1)[26]  no←1↑⍴PickList←SStoMAT ("fmBasisAudit.fAuditAction.opAuditAction_1" ⎕wi "∆lastoption") ⎕wi "∆options"[27]  value←¯1↑1,selection←PickList ExactTLU AuditAction[28]  :if 0∊⍴selection[29]      modified←⌈/modified,×value[30]  :endif[31]  :for nn :in ⍳no[32]      ("fmBasisAudit.fAuditAction.opAuditAction_",⍕nn) ⎕wi "value" (value=nn)[33]  :endfor[34]  "fmBasisAudit.ckNextCheck" ⎕wi "value" (zwb NextCheck)[35]  :if 1=ControlName ⎕wi "∆relrules" ⋄ :andif ×rowsIn Comment_Basis_Audit[36]      :for var :in spin Comment_Basis_Audit at "variable" "row" ⋄ (var row)←var[37]          "Basis_Audit" ParmColor ((FormFields for "variable" var) at "control"),var row 1[38]      :endfor[39]  :endif[40]  :if ~0∊⍴,warnings[41]      MDISPLAY DLTMB warnings,⎕tcnl[42]      Win∆AssignVars "fmBasisAudit"[43]  :endif[44]  :if 0=modified←modified⌈~package≡pack ⍙VALUESdict ReadDictFile "Basis_Audit" "" "Names"[45]      "fmBasisAudit" ⎕wi "modified" 0[46]  :endif    ∇