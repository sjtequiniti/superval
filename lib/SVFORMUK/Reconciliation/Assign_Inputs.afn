    ∇ Assign_Inputs modified;PickList;list;n;NameList;value;MaxRow;MaxCol;selection;nn;no;package;warnings;var;control;row
[1]   warnings←0 0⍴""
[2]   package←pack ⍙VALUESdict ReadDictFile "Reconciliation" "" "Names"
[3]   
[4]   :if 1=ControlName ⎕wi "∆relrules"
[5]       :for control :in nub FormFields at "control"
[6]           "Reconciliation" ParmColor control "" ⍬ 0
[7]       :endfor
[8]   :endif
[9]   "FileSelections" Win∆Inherits "fILESelections"
[10]  "fmSV.fReconciliation.fData.ckFileSelections" ⎕wi "value" (zwb FileSelections)
[11]  "FILES" Win∆Inherits "Actsfile"
[12]  "fmSV.fReconciliation.fData.edFILES" ⎕wi "text" (DLTB FILES)
[13]  "fILENAME" Win∆Inherits "Actsfile"
[14]  GetAbsFileList "Fund"
[15]  warnings←warnings OVER "Reconciliation Data File" Win∆FileRelative "fILENAME" "lrfILENAME"
[16]  "fmSV.fReconciliation.fData.edfILENAME" ⎕wi "text" (DLTB fILENAME)
[17]  "Format" Win∆Inherits "FormatA"
[18]  PickList←"fmSV.fReconciliation.fData.cbFormat" ⎕wi "list"
[19]  warnings←warnings OVER "Data Format" Win∆FormatRelative "Format" "lrFormat"
[20]  selection←(StripText PickList) ExactTLU DLTB StripText Format
[21]  :if mt selection
[22]      modified←⌈/modified,1
[23]  :endif
[24]  "fmSV.fReconciliation.fData.cbFormat" ⎕wi "value" (¯1↑1,selection)
[25]  "fmSV.fReconciliation.fData.ckUseSex" ⎕wi "value" (zwb UseSex)
[26]  "fmSV.fReconciliation.fData.ckUseCat" ⎕wi "value" (zwb UseCat)
[27]  PickList←"fmSV.fReconciliation.fData.lsCatSels" ⎕wi "list"
[28]  :if 0∊⍴selection←PickList ExactTLU SStoMAT CatSels
[29]      "fmSV.fReconciliation.fData.lsCatSels" ⎕wi "value" ((×1↑⍴PickList)⍴1)
[30]      modified←⌈/modified,"fmSV.fReconciliation.fData.lsCatSels" ⎕wi "value"
[31]  :else
[32]      "fmSV.fReconciliation.fData.lsCatSels" ⎕wi "visible" ¯1
[33]      "fmSV.fReconciliation.fData.lsCatSels" ⎕wi "value" selection
[34]      "fmSV.fReconciliation.fData.lsCatSels" ⎕wi "visible" 1
[35]  :endif
[36]  "fmSV.fReconciliation.fData.ckUseSubs" ⎕wi "value" (zwb UseSubs)
[37]  "fmSV.fReconciliation.fData.ckDeleteSubs" ⎕wi "value" (zwb DeleteSubs)
[38]  PickList←"fmSV.fReconciliation.fParms.cbBDATE" ⎕wi "list"
[39]  warnings←warnings OVER "Start Date" Win∆DateRelative "BDATE" "lrBDATE"
[40]  selection←(StripText PickList) ExactTLU DLTB StripText BDATE
[41]  :if mt selection
[42]          "fmSV.fReconciliation.fParms.cbBDATE" ⎕wi "text" (DLTB BDATE)
[43]  :else
[44]      "fmSV.fReconciliation.fParms.cbBDATE" ⎕wi "value" selection
[45]  :endif
[46]  PickList←"fmSV.fReconciliation.fParms.cbEDATE" ⎕wi "list"
[47]  warnings←warnings OVER "End Date" Win∆DateRelative "EDATE" "lrEDATE"
[48]  selection←(StripText PickList) ExactTLU DLTB StripText EDATE
[49]  :if mt selection
[50]          "fmSV.fReconciliation.fParms.cbEDATE" ⎕wi "text" (DLTB EDATE)
[51]  :else
[52]      "fmSV.fReconciliation.fParms.cbEDATE" ⎕wi "value" selection
[53]  :endif
[54]  no←1↑⍴PickList←SStoMAT ("fmSV.fReconciliation.fParms.fservind.opservind_1" ⎕wi "∆lastoption") ⎕wi "∆options"
[55]  value←¯1↑1,selection←PickList ExactTLU servind
[56]  :if 0∊⍴selection
[57]      modified←⌈/modified,×value
[58]  :endif
[59]  :for nn :in ⍳no
[60]      ("fmSV.fReconciliation.fParms.fservind.opservind_",⍕nn) ⎕wi "value" (value=nn)
[61]  :endfor
[62]  :if 1=ControlName ⎕wi "∆relrules" ⋄ :andif ×rowsIn Comment_Reconciliation
[63]      :for var :in spin Comment_Reconciliation at "variable" "row" ⋄ (var row)←var
[64]          "Reconciliation" ParmColor ((FormFields for "variable" var) at "control"),var row 1
[65]      :endfor
[66]  :endif
[67]  :if ~0∊⍴,warnings
[68]      MDISPLAY DLTMB warnings,⎕tcnl
[69]      Win∆AssignVars "fmSV.fReconciliation"
[70]  :endif
[71]  :if 0=modified←modified⌈~package≡pack ⍙VALUESdict ReadDictFile "Reconciliation" "" "Names"
[72]      "fmSV.fReconciliation" ⎕wi "modified" 0
[73]  :endif
    ∇
