    ∇ res←Format Format_Create flag;z;size;lCOL;all;field;n;overlap;partial;MESS
[1]   ⍝ DATAWIN.sf#2
[2]   ⍝ Get Data Format Details and Create Variables
[3]   
[4]   aosenabled CREATEDATADESC Format ⋄ lCOL←,RECL-3 ⍝ Create the Format
[5]   
[6]   z←(⊃⍙⍙FieldTypes[;3]) ExactTLU 'Format' ⍝ Find Data Fields
[7]   z←z~WHERE ∨/'[2;]'⍷⊃⍙⍙FieldTypes[;1] ⍝ Not "second rows"
[8]   z←z~(~aosenabled)/WHERE 'p'=(⊃⍙⍙FieldTypes[;1])[;1] ⍝ Exclude "previous fields" (if not required)
[9]   z←z~('[' StripText ⊃⍙⍙FieldTypes[;1]) ExactTLU 'p',SStoMAT FixNumStandVars
[10]  z←z~('[' StripText ⊃⍙⍙FieldTypes[;1]) ExactTLU 'p',SStoMAT DateStandVars
[11]  z←z~('[' StripText ⊃⍙⍙FieldTypes[;1]) ExactTLU 'p','d',SStoMAT DateStandVars
[12]  z←z~('[' StripText ⊃⍙⍙FieldTypes[;1]) ExactTLU 'p',SStoMAT CharStandVars
[13]  
[14]  fmt←(⊃⍙⍙FieldTypes[;4]) ExactTLU 'Upper' ⍝ Find Date Formats
[15]  fmt←fmt~('[' StripText ⊃⍙⍙FieldTypes[;1]) ExactTLU 'p','d',SStoMAT DateStandVars
[16]  fmt←(fmt∊z)/fmt ⋄ size←1+⍴z←z~fmt ⍝ and exclude them
[17]  
[18]  NAMES←(⊃⍙⍙FieldTypes[z;2]) OVER 'Last Column' ⍝ Matrix of Field Names
[19]  fmt←((⍳size)∊+⌿z∘.≤fmt)⍀⊃⍎¨⍙⍙FieldTypes[fmt;1] ⍝ Date Formats
[20]  fieldtype←(-size)↑2 ⍝ Field Type  0 Num, 1 Date, 2 Char
[21]  fieldtype[('[' StripText ⊃⍙⍙FieldTypes[z;1]) ExactTLU SStoMAT DateStandVars]←1
[22]  fieldtype[('[' StripText ⊃⍙⍙FieldTypes[z;1]) ExactTLU SStoMAT CharStandVars]←2
[23]  ⍝ Start col and number of cols (previously A[;1 3])
[24]  colnos←⍎¨⎕split ('[' StripText ⊃⍙⍙FieldTypes[z;1]) OVER 'lCOL'
[25]  size←+/z←~^/0=colnos←(⊃↑¨colnos),⊃⍴¨colnos
[26]  NAMES←z⌿NAMES ⋄ fmt←z⌿fmt ⋄ fieldtype←z/fieldtype ⋄ colnos←z⌿colnos
[27]  
[28]  ⍝ Numeric Non-Standard Fields
[29]  :for n :in ⍳↑⍴TotNumVars
[30]      NAMES←NAMES OVER TotNumVars[n;]
[31]      fmt←fmt OVER ' ' ⋄ fieldtype←fieldtype,0
[32]      colnos←colnos⍪(↑z),⍴z←⍎'f',TotNumVars[n;]
[33]      :if aosenabled
[34]          NAMES←NAMES OVER 'Previous ',TotNumVars[n;]
[35]          fmt←fmt OVER ' ' ⋄ fieldtype←fieldtype,0
[36]          colnos←colnos⍪(↑z),⍴z←⍎'pf',TotNumVars[n;]
[37]      :endif
[38]  :endfor
[39]  
[40]  size←⍴fieldtype
[41]  ⍝ Date and Char Non-Standard Fields
[42]  :if 0≠+/z←,⊃↑¨⍴¨DateVars CharVars
[43]      NAMES←NAMES OVER DateVars OVER CharVars
[44]      fmt←fmt OVER DateFmt OVER 0 1000↓CharVars
[45]      fieldtype←fieldtype,z/1 2
[46]      colnos←colnos⍪(⊃↑¨z),⊃⍴¨z←⍎¨⎕split 'f',(size,0)↓NAMES
[47]  :endif
[48]  
[49]  :if res←flag ⍝ This bit only required for Data Editor
[50]      all←colnos[;1]∘.+¨⍳¨colnos[;2] ⍝ Check for overlaps!
[51]      overlap←partial←0 2⍴0
[52]      :for n :in ⍳⍴fieldtype
[53]          overlap←overlap⍪n,[1.5],z←n+WHERE (n↓all)∊all[n]
[54]          partial←partial⍪n,[1.5],(n+WHERE ∨/(⊃n↓all)∊⊃all[n])~z
[55]      :endfor
[56]  
[57]      :if res←~mt partial
[58]          MESS←'Invalid Data Format - contains partially overlapping Data Fields'
[59]          :for n :in ⍳↑⍴partial
[60]              MESS←MESS OVER NAMES[partial[n;1];],' partially overlaps with ',NAMES[partial[n;2];]
[61]          :endfor
[62]          MDISPLAY ¯1↓,MESS,⎕tcnl ⋄ :return
[63]      :endif
[64]  
[65]      DataNotes←0 0⍴'' ⍝ Notes on overlapping current and previous data fields
[66]      :if ~mt overlap
[67]          DataNotes←'The following data fields are located in the same position in the data record:' OVER ' '
[68]          :for n :in ⍳↑⍴overlap
[69]              DataNotes←DataNotes OVER '-',⎕tcht,NAMES[overlap[n;1];],' and ',NAMES[overlap[n;2];]
[70]          :endfor
[71]          DataNotes←(DataNotes⍪' ') OVER 'Only one of these overlapping fields will be displayed.'
[72]          DataNotes←(DataNotes⍪' ') OVER 'Click "Data Notes" Button to view this message again.'
[73]          ⍝ Remove overlapped fields
[74]          z←~(⍳⍴fieldtype)∊overlap[;2]
[75]          NAMES←z⌿NAMES ⋄ fmt←z⌿fmt ⋄ fieldtype←z/fieldtype ⋄ colnos←z⌿colnos
[76]          Data_Notes
[77]      :endif
[78]      lastchar←↑(('Act' 'Pen' 'Def')∊⊂Format[1+⍳3])/'MPD'
[79]  :endif
[80]  
[81]  ⍝ Sort into order in data file
[82]  z←⍋colnos[;1] ⋄ colnos←colnos[z;] ⋄ NAMES←NAMES[z;] ⋄ fieldtype←fieldtype[z] ⋄ fmt←fmt[z;]
[83]  datafields←colnos[;1]∘.+¨⍳¨colnos[;2] ⍝ Nested column nos for each field
    ∇
