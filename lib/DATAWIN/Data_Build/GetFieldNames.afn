    ∇ res←arg GetFieldNames type;cn;i;PickList;NameList;list;sortorder;msk;flds;∆;fldname;row;idx[1]   ⍝ DATAWIN.sf#21[2]   ⍝ Get the list of Fields in a Data File[3]   ⍝ Relies on Globals: nams, fmts, snms, sdsc, styp (unles type is not either 'Standard', 'UserDefined' or 'Excluded')[4]   [5]   :select type[6]   :case 'Standard'    ⋄ msk←1 1 1 1[7]   :case 'UserDefined' ⋄ msk←1 0 0 1[8]   :case 'Excluded'    ⋄ msk←0 1 1 1[9]   :endselect[10]  flds←+/msk[11]  [12]  :if 0≠⎕nc 'arg' ⋄ list←(0,flds)⍴'' ⍝ Default for Initialisation[13]  :else[14]      idx←snms⍳mappings mapp nams[15]      list←nams,((snms,⊂'')[idx]),((sdsc,⊂'User-Defined')[idx]),[1.5]('' 'Total ' 'Average ')[1+('N'=↑¨fmts)+average],¨('Character' 'Numeric ' 'Unknown' 'Date')['CNU'⍳↑¨fmts],¨('' 'Averaged')[1+byNOM][16]      ∆←(∨/¨(⊂'Date')⍷¨list[;4])^∊×¯1+⍴¨,¨fmts[17]      list[;4]←list[;4],¨' ',¨(⊂'{}') embrace¨DLTB¨∆\(⊂¨∆)/fmts[18]      :select type[19]      :case 'Standard'    ⋄ list←  included      ⌿list[20]      :case 'UserDefined' ⋄ list←           udef ⌿list[21]      :case 'Excluded'    ⋄ list←(~included∨udef)⌿list[22]      :endselect[23]  :endif[24]  [25]  :if mt cn←⍳↑⍴list ⋄ PickList←(0,2+flds)⍴''[26]  :else             ⋄ PickList←cn,(⊂1 0 ¯2),DLTB¨msk/list[27]  :endif[28]  [29]  NameList←0 0⍴''[30]  :for ∆ :in spin (msk/'Data Field Name' 'SuperVal Field Name' 'Field Description' 'Field Type') (⍳flds) ⋄ (fldname row)←∆[31]      NameList←NameList OVER fldname (¯1↑Win∆TextSize ⊃PickList[;2+row]) 'left' row row 0 1[32]  :endfor[33]  [34]  sortorder←∊'⍺',¨msk/'Alpha' 'RowID' 'Alpha' 'Alpha'[35]  [36]  res←PickList NameList sortorder cn    ∇