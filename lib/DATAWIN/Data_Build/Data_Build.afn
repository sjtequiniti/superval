    ∇ res←field Data_Build parm;SaveCN;z;∆;MESS;list
[1]   ⍝ DATAWIN.sf#21
[2]   ⍝ Function to allow user control on Data Build Wizard
[3]   
[4]   res←0⍴'' ⍝ Default response
[5]   
[6]   :select parm
[7]   :case 'Prepare'
[8]       parent←'fmDataBuild.'
[9]   
[10]  :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)
[11]      DBW_set_constants
[12]      ⍝ Settings when called from Roll Forward
[13]      :if 0≠⎕nc 'RF_FILE' ⋄ FILE←RF_FILE ⋄ membtype←RF_membtype ⋄ RF_DataBuilt←0 ⋄ :endif
[14]      :if mt mappings ⋄ mappings←⊂¨,¨' ' ' ' ⋄ :endif
[15]  
[16]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)
[17]      0 0⍴((⊂parent,'fData.'  ),¨'picError' 'picWarn') MultiWI 'visible' ¯1
[18]      0 0⍴((⊂parent,'fFields.'),¨'picError' 'picWarn') MultiWI 'visible' ¯1
[19]      0 0⍴((⊂parent,'fReport.'),¨'picError' 'picWarn') MultiWI 'visible' ¯1
[20]  
[21]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)
[22]  
[23]      :repeat
[24]          :select ↑field
[25]          :case 'cbExpFormat'
[26]              CSVimp←'CSV'≡3↑ExpFormat←(parent,'fData.cbExpFormat') ⎕wi 'text'
[27]              ((⊂parent,'fData.'),¨'llFILE' 'cbFILE' 'lsize'                           ) MultiWI 'visible' (¯1+2×CSVimp)
[28]              ((⊂parent,'fData.'),¨'llxlFILE' 'cbxlFILE',CSVimp/'llxlSHEET' 'cbxlSHEET') MultiWI 'visible' ( 1-2×CSVimp)
[29]              :if ~CSVimp ⋄ xlFILE←'' ⋄ 0 0⍴(⊂'cbxlFILE') Data_Build 'Change' ⋄ :endif
[30]          :case 'cbFILE'
[31]              (parent,'fData.lsize') ⎕wi 'caption' (DBW_fsize FILE←(parent,'fData.cbFILE') ⎕wi 'text')
[32]              0 0⍴((⊂parent,'fData.'),¨'picError' 'picWarn') MultiWI 'visible' ¯1
[33]              (parent,'fData.picStandard') ⎕wi 'visible' 1
[34]              (parent,'fData.bnData_BuildEdit') ⎕wi 'enabled' (0≠⍴FILE)
[35]          :case 'cbxlFILE'
[36]              :if ~(∆←DLTB UPPERCASE (parent,'fData.cbxlFILE') ⎕wi 'text')≡xlFILE
[37]              :andif ~mt ∆
[38]              :andif FileExist InputDir,∆
[39]                  xlFILE←∆
[40]                  DBW_open_excel
[41]                  :if ~mt MESS←ExcelRunButton XL_Open (InputDir,xlFILE) 0 1
[42]                      MDISPLAY MESS ⋄ :return
[43]                  :endif
[44]                  0 UpdateVarLists ⊂'GetSheetNames'
[45]                  ((⊂parent,'fData.'),¨'llxlSHEET' 'cbxlSHEET') MultiWI 'visible' 1
[46]                  list←(parent,'fData.cbxlSHEET') ⎕wi "list"
[47]                  (parent,'fData.cbxlSHEET') ⎕wi "value" (¯1↑1,list ExactTLU xlSHEET)
[48]                  (parent,'fData.bnData_BuildEdit') ⎕wi 'enabled' 1
[49]              :else
[50]                  (parent,'fData.bnData_BuildEdit') ⎕wi 'enabled' 0
[51]              :endif
[52]          :case 'lvStandard'
[53]              :if z←~mt ∆←(parent,'fFields.lvStandard') ⎕wi 'value'           ⍝ If one selected
[54]                  z←~≡/(,((parent,'fFields.lvStandard') ⎕wi 'list')[∆;])[3 4] ⍝ and if not a Standard Name
[55]              :endif
[56]              (parent,'fFields.bnData_BuildRemove') ⎕wi 'enabled' z
[57]              (parent,'fFields.bnData_BuildChange') ⎕wi 'enabled' (1=+/mt¨((⊂parent,'fFields.'),¨'lvUserDefined' 'lvStandard') MultiWI 'value')
[58]          :caselist 'lvUserDefined' 'lvExcluded'
[59]              (parent,'fFields.bnData_BuildAdd') ⎕wi 'enabled' (^/~mt¨((⊂parent,'fFields.'),¨'lvUserDefined' 'lvExcluded') MultiWI 'value')
[60]              (parent,'fFields.bnData_BuildChange') ⎕wi 'enabled' (1=+/mt¨((⊂parent,'fFields.'),¨'lvUserDefined' 'lvStandard') MultiWI 'value')
[61]          :endselect
[62]      :until mt field←1↓field
[63]  
[64]  :case 'Valid' ⍝ Routine specific validation
[65]  
[66]      :if ~CSVimp ⋄ :andif ~mt 'XL' ⎕wi 'self'
[67]          :if 0=('XL' ⎕wi 'xWorkbooks') ⎕wi 'xCount'
[68]          :andif ~mt res←ExcelRunButton XL_Open (InputDir,xlFILE) 0 1
[69]              Win∆SetFocus parent,'fData.cbxlFILE' ⋄ :return
[70]          :endif
[71]          :if ~xlSHEET≡'XL' ⎕wi 'xActiveSheet'
[72]              (('XL' ⎕wi 'xWorksheets') ⎕wi 'XItem' xlSHEET) ⎕wi 'XActivate'
[73]          :endif
[74]      :endif
[75]  
[76]      :select DLTMB Win∆Child ↑field
[77]      :case 'fData'
[78]          Win∆AssignVars ControlName
[79]          datatype←3↑membtype
[80]          :if ~mt res←DBW_scan_hdr
[81]              (parent,'fData.picStandard') ⎕wi 'visible' ¯1
[82]              (parent,'fData.picWarn')     ⎕wi 'visible' ¯1
[83]              (parent,'fData.picError')    ⎕wi 'visible' 1
[84]              Win∆SetFocus parent,'fData.cbFILE' ⋄ :return
[85]          :endif
[86]  
[87]      :case 'fFields'
[88]          :if ~mt res←DBW_check_hdr
[89]              (parent,'fFields.picStandard') ⎕wi 'visible' ¯1
[90]              (parent,'fFields.picWarn')     ⎕wi 'visible' ¯1
[91]              (parent,'fFields.picError')    ⎕wi 'visible' 1
[92]              (parent,'bnData_BuildBack')    ⎕wi 'Click'
[93]              Win∆SetFocus parent,'fData.bnData_BuildEdit' ⋄ :return
[94]          :endif
[95]  
[96]      :case 'fReport'
[97]  
[98]      :case 'fCheckSum'
[99]  
[100]     :endselect
[101] 
[102] :case 'Back'
[103] 
[104]     :select DLTMB Win∆Child ↑field
[105]     :case 'fFields'
[106]         (parent,'fData.picWarn')     ⎕wi 'visible' ((parent,'fFields.picWarn')     ⎕wi 'visible')
[107]         (parent,'fData.picStandard') ⎕wi 'visible' ((parent,'fFields.picStandard') ⎕wi 'visible')
[108] 
[109]     :case 'fReport'
[110]         (parent,'bnData_BuildNext') ⎕wi 'enabled' 1
[111]         res←'Back' ⍝ skip back to Data
[112] 
[113]     :case 'fCheckSum'
[114]         res←'Back' ⍝ skip back to Fields
[115] 
[116]     :endselect
[117] 
[118] :case 'Next'
[119] 
[120]     :select DLTMB Win∆Child ↑field
[121]     :case 'fData'
[122]         :select ↑membtype
[123]         :case 'A' ⋄ (parent,'fFields.ffreq') ⎕wi 'caption' 'Payment Frequency of Salaries'
[124]         :case 'D' ⋄ (parent,'fFields.ffreq') ⎕wi 'caption' 'Payment Frequency of PUPs'
[125]         :case 'P' ⋄ (parent,'fFields.ffreq') ⎕wi 'caption' 'Payment Frequency of Pensions'
[126]         :endselect
[127]     :case 'fFields'
[128]         DBW_scan_bdy
[129] 
[130]     :case 'fReport'
[131]         :if 1=(parent,'fReport.picError') ⎕wi 'visible'
[132]             res←'Fix errors and rebuild file before proceeding'
[133]         :else
[134]             res←DBW_build_tmp
[135]         :endif
[136] 
[137]     :case 'fCheckSum'
[138]         (res datafile format)←3↑DBW_save_dat
[139]         :if ~CSVimp ⋄ :andif ~mt 'XL' ⎕wi 'self' ⋄ :andif 0≠('XL' ⎕wi 'xWorkbooks') ⎕wi 'xCount'
[140]             XL_Quit
[141]         :endif
[142] 
[143]     :endselect
[144] 
[145] :case 'Run'
[146] 
[147]     :if 0≠⎕nc 'RF_FILE' ⋄ RF_DataBuilt←1
[148]     :else
[149]         datafile←'\' Win∆Child datafile
[150]         format←'<',datatype,'> ',format
[151]         Call_Validation datafile format
[152]         :if 'Y'≡'YN' ASK 'Update Scheme Details with Data Build Data File?'
[153]             :select datatype  ⍝ Replace Data File
[154]             :case 'Act' ⋄ Actsfile←datafile ⋄ FormatA←format ⋄ list←'Actsfile FormatA'
[155]             :case 'Def' ⋄ Defsfile←datafile ⋄ FormatD←format ⋄ list←'Defsfile FormatD'
[156]             :case 'Pen' ⋄ Pensfile←datafile ⋄ FormatP←format ⋄ list←'Pensfile FormatP'
[157]             :endselect
[158]             0 0⍴ClientFile SaveToFile 'Client' '' (pack list) 1
[159]         :endif
[160]     :endif
[161]     Results←'' ⍝ No need to store DBW report
[162]     res←'Quit'
[163] 
[164] :case 'Quit' ⍝ Deleting "other" variables
[165]     :if ~mt 'XL' ⎕wi 'self' ⋄ XL_Quit ⋄ 0 0⍴ExcelRunButton ⎕wi 'Delete' ⋄ :endif ⍝ Close down Excel object
[166]     0 0⍴DeleteVars¨'Act' 'Def' 'Pen',¨⊂'Format'
[167]     0 0⍴⎕ex 'DLMT datatype RQDNAMS IGNORENUMERICS INTERCOLSPACE SGLCHARFLDS LASTCOLPN CHUNK_SZ parent ExcelRunButton CSVimp XLrows XLcols'
[168]     0 0⍴⎕ex 'nams fmts prev NAMS included cats wids chksums udef average byNOM datafile format snms sdsc styp orignam nofmtrow'
[169] 
[170] :endselect
    ∇
