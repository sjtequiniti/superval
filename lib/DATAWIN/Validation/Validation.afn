    ∇ res←field Validation parm;parent;SaveCN;bdate;edate;SSName;text
[1]   ⍝ DATAWIN.sf#10
[2]   ⍝ Function to allow user control on Data Validation
[3]   
[4]   parent←'fmValidation.sValidation.' ⋄ res←0⍴'' ⍝ Default response
[5]   
[6]   :select parm
[7]   
[8]   :case 'Vars' ⍝ Adjustments to screen variables (particularly dynamic Dictionaries)
[9]       :if 0≠⎕nc 'globalsPkg' ⋄ :andif ~mt pnames globalsPkg ⍝ Default values from Data Build
[10]          pdef globalsPkg
[11]      :endif
[12]  
[13]      TotNumVars←CharVars←DateVars←0 0⍴''
[14]      :if 0≠⎕nc 'Format' ⋄ :andif mt ValidFormat ⋄ ValidFormat←Format ⋄ :endif
[15]      ValidFormat←HyphenSwap ValidFormat
[16]      (BDATE lrBDATE)←'Date' SwapRelFields BDATE lrBDATE
[17]      (EDATE lrEDATE)←'Date' SwapRelFields EDATE lrEDATE
[18]      0 0⍴Validation 'Lock' ⍝ Lock Spreadsheet Cells
[19]  
[20]  :case 'Init'  ⍝ Initialising Routines (eg dynamic labels, country specific enabling/disabling etc)
[21]      ControlName ⎕wi '∆formatcreated' 0 ⍝ Indicate new format
[22]  
[23]  :case 'Lock'
[24]      :for SSName :in (⊂parent,'pgRanges.'),¨'.' join¨(⊂'f' 'ss'),¨¨⊂¨'ActValidation' 'DefValidation' 'PenValidation'
[25]          :if ~mt SSName ⎕wi 'self'
[26]              SSName Win∆F1SSProtectCells (⊂1 1 1 1)
[27]          :endif
[28]      :endfor
[29]  
[30]  :case 'Unlock'
[31]      :for SSName :in (⊂parent,'pgRanges.'),¨'.' join¨(⊂'f' 'ss'),¨¨⊂¨'ActValidation' 'DefValidation' 'PenValidation'
[32]          :if ~mt SSName ⎕wi 'self'
[33]              SSName Win∆F1SSProtectCells 'Unlock'
[34]          :endif
[35]      :endfor
[36]  
[37]  :case 'Change' ⍝ The onChange events (disabling fields according to value of others)
[38]  
[39]      :repeat
[40]          :select ↑field
[41]          :case 'cbValidFormat'
[42]              :if ~mt text←DLTB (parent,'pgParameters.fFiles.cbValidFormat') ⎕wi 'text'
[43]                  :if 0=×ControlName ⎕wi '∆formatcreated' ⋄ :orif ~ValidFormat≡HyphenSwap text
[44]                      ControlName ⎕wi '∆formatcreated' 0
[45]                      CREATEDATADESC ValidFormat←text
[46]                      ranges_pkg←pack Range_Vars FormatType
[47]                      ControlName ⎕wi '∆formatcreated' 1 ⍝ Indicate format created
[48]                  :endif
[49]              :endif
[50]          :endselect
[51]      :until mt field←1↓field
[52]  
[53]  :case 'PageChange'
[54]  
[55]      :repeat
[56]          Valid_PageChange DLTMB ↑field
[57]      :until mt field←1↓field
[58]  
[59]  :case 'Valid' ⍝ Routine specific validation
[60]  
[61]     ⍝ Check dates are in right order
[62]     bdate←'DD/MM/YYYY' DATEEXP ↑⌽'Date' SwapRelFields lrBDATE BDATE
[63]     edate←'DD/MM/YYYY' DATEEXP ↑⌽'Date' SwapRelFields lrEDATE EDATE
[64]     :if 0≥'MN' DURN bdate,edate
[65]         Win∆SetFocus parent,'pgParameters.fDates.cbBDATE'
[66]         res←'DateOrder' ⋄ :return
[67]     :endif
[68]  
[69]  :case 'Run'
[70]  
[71]      :if ~(ranges_pkg←pack Range_Vars FormatType)≡ranges_pkg ⍝ Update Data Format with Validation Ranges (if they have changed)
[72]          0 0⍴ClientFile SaveToFile (FormatType,'Format') (6↓ValidFormat) ranges_pkg 1
[73]      :endif
[74]      SaveCN←parent ⎕wi '∆savecn'
[75]      'DATA∆VALID' Win∆ProgressBar 'Start'
[76]      res←'Quit'
[77]  
[78]  :case 'Quit' ⍝ Deleting "other" variables
[79]  
[80]      :if 0≠⎕nc 'DateVars'
[81]          0 0⍴⎕ex 'f',TotNumVars OVER CharVars OVER DateVars
[82]          0 0⍴⎕ex 'd','f',DateVars
[83]      :endif
[84]      0 0⍴DeleteVars¨'ActFormat' 'PenFormat' 'DefFormat'
[85]      0 0⍴⎕ex 'FormatType ranges_pkg'
[86]  
[87]  :endselect
    ∇
