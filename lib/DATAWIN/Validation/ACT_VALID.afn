    ∇ ACT∆VALID;⎕IO;ALLREC;REC;recn;size;I;recs;N;pos;DOB;dob;DJS;DJF;SUMMREC;RECN;TOTS;GTOTS;NOM;CODE;row;rows;A;CAT;SEX;col;ERR;Z;NN;H4;NUMRECS;exit;∆[1]   ⍝ DATAWIN.sf#10[2]   ⍝ Function to validate Active/Exit Data Records[3]   ⍝[4]   ⍝[5]   ⍝[6]   ⍝ V2.50u RE 1/11/93 Standardised[7]   GTOTS←(0,2+1↑⍴NUMS)⍴TOTS←3⍴⎕IO←recn←1↑NUMRECS←0 0[8]   rows← 0 12 ⍴ALLREC←'' ⋄ size←⎕NSIZE tieno ⋄ RECN←pAGE[9]   [10]  ⍝ Read only chunks at a time to avoid LIMIT ERROR[11]  N←⍴recs←,((⌊size÷FileChunk)⍴FileChunk),FileChunk∣size ⋄ I←¯1[12]  [13]  LOOP:→(N≤I←I+1)/F0 ⋄ ALLREC←ALLREC,⎕NREAD tieno,82,recs[I][14]  NUMRECS←(1↑NUMRECS++/ALLREC=⎕tclf),0[15]  NUMRECS[1]←(¯1+size÷+/recs[⍳1+I])×NUMRECS[0] ⋄ →TOP[16]  [17]  ⍝ Exit if no Remnants at End of File[18]  F0:→((0=⍴ALLREC)∨(,ALLREC)≡,⎕AV[26])/END ⋄ ALLREC←ALLREC,⎕TCLF[19]  TOP:→((⍴ALLREC)<pos←1+ALLREC⍳⎕TCLF)/LOOP ⍝ Locate a Line Feed[20]  REC←pos↑ALLREC ⋄ ALLREC←pos↓ALLREC[21]  [22]  :if (recn←recn+1)≤+/NUMRECS ⍝ Display record number being processed[23]      (recn (⌊+/NUMRECS)) Win∆ProgressBar 'MemberUpdate'[24]  :endif[25]  [26]  0 0 ⍴⎕EX 'DOB DJS DJF'[27]  →(RECL=⍴REC)/F5 ⍝ Throw out records with wrong length[28]  MESS[0;] APP∆ERRS (,'LI5' ⎕FMT recn),((RECL-2)↑¯2↓REC)[fNAME] ⋄ →TOP[29]  [30]  F5:→(0≠⍴,row←(∨/(CODE←(¯2↑A←1↑REC[fSEX]),¯10↑CAT←REC[fCAT])⍷rows)/⍳1↑⍴rows)/L5[31]  row←¯1+1↑⍴rows←rows⍪CODE ⋄ GTOTS←GTOTS⍪0[32]  [33]  ⍝ Check Validity of Category and Sex[34]  L5:col←↑¯1+Category TLU CAT ⋄ SEX←A='F'[35]  ERR←(10<⍴CAT)/'⍺ERROR Category Field exceeds 10 Characters'[36]  ERR←ERR,(∨/Z)/'⍺ERROR - Category Field contains illegal characters - ',(Z←∆∊CAT)/∆←illegals,'[]'[37]  ⍝⍝⍝ ERR←ERR,(∨/Z)/'⍺ERROR - Category Field contains illegal characters - ',(Z←'\/:*?<>∣|[]`'∊CAT)/'\/:*?<>∣|[]`'[38]  :if uk=1 ⋄ ERR←ERR,(^/' '=CAT)/'⍺ERROR - Category Field is blank' ⋄ :endif[39]  ERR←ERR,,((~A∊'MF')^0≠⍴fSEX)/MESS[10;],A[40]  [41]  ⍝ Check Date of Birth and Relative to Valuation Date[42]  →(DATECHECK dob←DOB←(dfDOB (VDATE-0 0 100)) DATEEXP A←REC[fDOB])/L1[43]  ERR←ERR,MESS[1;],A ⋄ 0 0 ⍴⎕EX 'DOB' ⋄ dob←VDATE-0 0 80 ⋄ →F2[44]  L1:ERR←ERR,,MESS[(=/EDATE≥,params[0 1+2×SEX;col]+DOB←JUL DOB)/11;][45]  [46]  ⍝ Check Date Joined Service and Relative to DOB and Valuation Date[47]  F2:→(0=⍴fDJS)/F3 ⋄ →(DATECHECK DJS←(dfDJS dob) DATEEXP A←REC[fDJS])/L2[48]  ERR←ERR,MESS[2;],A ⋄ 0 0 ⍴⎕EX 'DJS' ⋄ →F3[49]  L2:ERR←ERR,,MESS[(EDATE<DJS←JUL DJS)/12;][50]  →(0=⎕NC 'DOB')/F3 ⋄ ERR←ERR,,MESS[(=/DJS≥,params[0 1+2×SEX;col]+DOB)/13;][51]  [52]  ⍝ Check Date Joined Fund and Relative to DOB, DJS and Valuation Date[53]  F3:→(0=⍴fDJF)/F4 ⋄ →(DATECHECK DJF←(dfDJF dob) DATEEXP A←REC[fDJF])/L3[54]  ERR←ERR,MESS[3;],A ⋄ 0 0 ⍴⎕EX 'DJF' ⋄ →F4[55]  L3:ERR←ERR,,MESS[(EDATE<DJF←JUL DJF)/14;][56]  →(0=⎕NC 'DOB')/L4 ⋄ ERR←ERR,,MESS[(=/DJF≥,params[0 1+2×SEX;col]+DOB)/15;][57]  L4:→(0=⎕NC 'DJS')/F4 ⋄ ERR←ERR,,MESS[(DJS>DJF)/16;][58]  [59]  ⍝ Check the Number of Members Field is numeric, scalar and an interger[60]  F4:NOM←1 ⋄ →(0∊⍴A←REC[fNOM])/F1[61]  ⍎(~(,1)≡⎕VI A)/'ERR←ERR,MESS[4;],A ⋄ →F1'[62]  Z←⎕FI A ⋄ ⍎((Z<1)∨0≠1∣Z)/'ERR←ERR,MESS[4;],A ⋄ →F1' ⋄ NOM←Z[63]  [64]  ⍝ Determine whether record is an Active or an Exit - best guess anyway[65]  F1:GTOTS[row;0]←GTOTS[row;0]+NOM ⋄ exit←0[66]  →(^/' '=REC[fMOE,fDOE])/LAB[67]  →((~aosenabled)^exit←EX∆VALID)/F10[68]  [69]  LAB:NonS∆VALID ⋄ TOTS[2]←TOTS[2]+'*'=REC[RECL-3][70]  [71]  F10:→(PROPT^0∊⍴ERR)/TOP ⍝ Make up the record to print[72]  ERR APP∆ERRS (,'LI5' ⎕FMT recn),(12↑REC[fNAME]),(¯2↑REC[fSEX]),(¯10↑REC[fDOB]),(¯10↑REC[fDJS]),(¯10↑REC[fDJF]),(¯8↑(~exit)/REC[fSAL]),¯8↑(~exit)/REC[fACW][73]  →TOP[74]  [75]  ⍝ Print Total Number of Records Processed[76]  END:SUMMREC←fILENAME,,'<: >,CI10,< Records Processed.>,CI10,< Records marked for Individual Listing with a "*".>' ⎕FMT MATRIX recn,TOTS[2][77]  SUMMREC←SUMMREC OVER 'CI22,< Errors Found and>,CI10,< Warnings Found.>' ⎕FMT MATRIX TOTS[0 1][78]  (SPAGE RECN)←H1 OUTPUT tpr1,SPAGE,RECN[79]  [80]  ⍝ Remove those not totalled[81]  I←(⍳¯1↑⍴GTOTS)~2+(NUMS ExactTLU 3 4⍴'fDCRfPCRfBM ')-~⎕io[82]  I←¯1↑⍴GTOTS←GTOTS[;I][83]  [84]  N←⎕AV⍋rows ⋄ rows←rows[N;]OVER 'Totals' ⋄ GTOTS←GTOTS[N;]⍪+⌿GTOTS[85]  N←1↑⍴rows ⋄ SUMMREC←((2×N),¯1↑⍴H3)⍴' '[86]  SUMMREC[2×⍳N;]←(N,¯1↑⍴SUMMREC)↑rows,'M<->CI14,99M<->CI20' ⎕FMT GTOTS[;(⍳I)~2×⍳I][87]  SUMMREC[1+2×⍳N;]←(N,¯1↑⍴SUMMREC)↑'M<->CI20,M<->CI16,99M<->CI20' ⎕FMT GTOTS[;(⍳I)~1+2×⍳I][88]  SUMMREC←(UNSTAGGER ¯2 0↓SUMMREC)⍪' '⍪UNSTAGGER SUMMREC[(2×N-1)+⍳2;][89]  [90]  →(1≠I←⌈(¯26+¯1↑⍴SUMMREC)÷NN←10×⌊0.1×wIDTH-26)/F9[91]  H4←(¯4 0↓H1) OVER H3⍪' ' ⋄ →OUT ⍝ Rearrange SUMMREC to fit on Page[92]  [93]  F9:A←((⍴A)⌈0,26+I×NN)↑A←H3⍪' '⍪SUMMREC ⋄ N←0 ⋄ SUMMREC←(0,26+NN)⍴''[94]  SUMMREC←(SUMMREC⍪' ')⍪A[;⍳26],((0,26+N×NN)↓A)[;⍳NN] ⋄ →(I>N←N+1)/⎕LC[95]  H4←¯4 0↓H1[96]  OUT:SPAGE←1↑H4 OUTPUT tpr1,SPAGE,pAGE    ∇