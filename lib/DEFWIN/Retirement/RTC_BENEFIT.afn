    ∇ RTC∆BENEFIT;Upin∆pp;BenType∆pp;IncType∆pp;Start∆pp;SL∆pp;ABno∆pp;AltABno∆pp;∆;type;col;com;comG[1]   ⍝ DEFWIN.sf#5[2]   ⍝ CLAYBROOK VALUATION SYSTEM - PAST SERVICE RETIREMENT LUMP SUM[3]   [4]   ⍝ Pension Projector Variables[5]   :if ~IsAccrued       ⋄ Start∆pp←        RetAge∆pp[6]   :else  ⋄ ABno∆pp←'2' ⋄ Start∆pp←,Age∆pp⌈RetAge∆pp ⋄ AltABno∆pp←''[7]   :endif[8]   [9]   :if sepComCot[10]      :if isNPCR[11]          BenType∆pp←IncType∆pp←'LC' ⍝ Commuted Lump Sum[12]          Upin∆pp←0 ⍝ Not "underpinned"[13]          SL∆pp←ninetypct×capratio×¯1↑,comCASH[14]  [15]          PP∆CreateInterface[16]  [17]          BenType∆pp←IncType∆pp←'LT' ⍝ Cash on Top Lump Sum[18]          Upin∆pp←0 ⍝ Not "underpinned"[19]          SL∆pp←ninetypct×capratio×¯1↑,cotCASH[20]  [21]          PP∆CreateInterface[22]      :else[23]          :if splitCombyPI[24]              :for ∆ :in ('S' 0) ('M' 1) ('3' 2) ('4' 3) ⋄ (type col)←∆[25]                  com←splitcomCASH[;col] ⋄ comG←splitcomGCASH[;col][26]  [27]                  BenType∆pp←IncType∆pp←'L',type[28]                  Upin∆pp←0 ⍝ Not "underpinned"[29]                  :if ~IsAccrued ⋄ SL∆pp←      ,com-comG[30]                  :else          ⋄ SL∆pp←NX⍴¯1↑,com-comG[31]                  :endif[32]  [33]                  PP∆CreateInterface[34]  [35]                  Upin∆pp←1 ⍝ "Underpinned"[36]                  :if ~IsAccrued ⋄ SL∆pp←      ,comG[37]                  :else          ⋄ SL∆pp←NX⍴¯1↑,comG[38]                  :endif[39]  [40]                  PP∆CreateInterface[41]              :endfor[42]          :else[43]              BenType∆pp←IncType∆pp←'LC' ⍝ Lump Sum[44]              Upin∆pp←0 ⍝ Not "underpinned"[45]              :if ~IsAccrued ⋄ SL∆pp←      ,comCASH-comGCASH[46]              :else          ⋄ SL∆pp←NX⍴¯1↑,comCASH-comGCASH[47]              :endif[48]  [49]              PP∆CreateInterface[50]  [51]              Upin∆pp←1 ⍝ "Underpinned"[52]              :if ~IsAccrued ⋄ SL∆pp←      ,comGCASH[53]              :else          ⋄ SL∆pp←NX⍴¯1↑,comGCASH[54]              :endif[55]  [56]              PP∆CreateInterface[57]          :endif[58]  [59]          BenType∆pp←IncType∆pp←'LT' ⍝ Lump Sum[60]          Upin∆pp←0 ⍝ Not "underpinned"[61]          :if ~IsAccrued ⋄ SL∆pp←      ,cotCASH-cotGCASH[62]          :else          ⋄ SL∆pp←NX⍴¯1↑,cotCASH-cotGCASH[63]          :endif[64]  [65]          PP∆CreateInterface[66]  [67]          Upin∆pp←1 ⍝ "Underpinned"[68]          :if ~IsAccrued ⋄ SL∆pp←      ,cotGCASH[69]          :else          ⋄ SL∆pp←NX⍴¯1↑,cotGCASH[70]          :endif[71]  [72]          PP∆CreateInterface[73]      :endif[74]  :else[75]      BenType∆pp←IncType∆pp←'L' ⍝ Lump Sum[76]      :if isNPCR[77]          Upin∆pp←0 ⍝ Not "underpinned"[78]          SL∆pp←ninetypct×capratio×¯1↑,CASH ⍝ SV5000329[79]  [80]          PP∆CreateInterface[81]      :else[82]          Upin∆pp←0 ⍝ Not "underpinned"[83]          :if ~IsAccrued ⋄ SL∆pp←      ,CASH-GCASH[84]          :else          ⋄ SL∆pp←NX⍴¯1↑,CASH-GCASH[85]          :endif[86]  [87]          PP∆CreateInterface[88]  [89]          Upin∆pp←1 ⍝ "Underpinned"[90]          :if ~IsAccrued ⋄ SL∆pp←      ,GCASH[91]          :else          ⋄ SL∆pp←NX⍴¯1↑,GCASH[92]          :endif[93]  [94]          PP∆CreateInterface[95]      :endif[96]  :endif    ∇