    ∇ TRANS∆BENEFIT;Dec∆pp;ExitProbs∆pp;VFYear∆pp;RetAge∆pp;tPostx;Qpost
[1]   ⍝ DEFWIN.sf#10
[2]   ⍝ Function to run all the TRANSFER Value Benefit Functions
[3]   
[4]   RetAge∆pp←Age∆pp ⍝⍝⍝ NRA⌈
[5]   tPostx←1,×\1-Qpost←NX_1↑X0↓TVQXret∆l
[6]   
[7]   :if ∨/×ExitProbs∆pp←PROBS[;4] ⍝ Probability of Transfer Out
[8]       Dec∆pp←'TO'
[9]       VFYear∆pp←ExitProbs∆pp PP∆AverageTerm XMP-X0
[10]  
[11]      TVRP1∆BENEFIT ⋄ TVRP2∆BENEFIT ⋄ TVRP3∆BENEFIT ⋄ TVRP6∆BENEFIT ⋄ TVRP7∆BENEFIT
[12]      TVwCOST∆RP5 ⋄ TVRTC∆BENEFIT
[13]  
[14]      :if ~TVIgnoreDiD ⋄ :andif NX>1
[15]          ExitProbs∆pp TRANSDiD∆BENEFIT 'DO'
[16]      :endif
[17]  
[18]      :if mpuflag
[19]          ExitProbs∆pp←ExitProbs∆pp×,(⍉tPostx∘.÷tPostx)[;ENX_1]
[20]          RTU∆BENEFIT
[21]      :endif
[22]  :endif
[23]  
[24]  :if ∨/×ExitProbs∆pp←PROBS[;5] ⍝ Probability of Transfer at Retirement
[25]      Dec∆pp←'T'
[26]      VFYear∆pp←ExitProbs∆pp PP∆AverageTerm XMP-X0
[27]  
[28]      TVRP1∆BENEFIT ⋄ TVRP2∆BENEFIT ⋄ TVRP3∆BENEFIT ⋄ TVRP6∆BENEFIT ⋄ TVRP7∆BENEFIT
[29]      TVwCOST∆RP5 ⋄ TVRTC∆BENEFIT
[30]  
[31]      :if ~TVIgnoreDiD ⋄ :andif NX>1
[32]          ExitProbs∆pp TRANSDiD∆BENEFIT 'DT'
[33]      :endif
[34]  
[35]      :if mpuflag
[36]          ExitProbs∆pp←ExitProbs∆pp×,(⍉tPostx∘.÷tPostx)[;ENX_1]
[37]          RTU∆BENEFIT
[38]      :endif
[39]  :endif
    ∇
